{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "nmex-dv-origmx-dh-usw2-adf"
		},
		"AFS_AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AFS_AzureBlobStorage\"",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=rehnprd206datalake;"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureBlobStorage2\""
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureBlobStorage3\""
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureSqlDatabase1\""
		},
		"IC3_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"IC3\""
		},
		"IC3PROD_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"IC3PROD\""
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"Sftp1\""
		},
		"Sftp2_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"Sftp2\""
		},
		"Sftp_NESTLEVETERINARIOS_GILSALINAS_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"Sftp_NESTLEVETERINARIOS_GILSALINAS\""
		},
		"ls_ar_sftp_ncdt_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ls_ar_sftp_ncdt\""
		},
		"ls_ar_sftp_ncdt_2_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ls_ar_sftp_ncdt_2\""
		},
		"ls_op_adls2_lake_latam_mwsAuthToken": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"mwsAuthToken\"de \"ls_op_adls2_lake_latam\""
		},
		"ls_op_adls2_lake_latam_secretKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"secretKey\"de \"ls_op_adls2_lake_latam\""
		},
		"ls_or_adls2_retailersmx_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"ls_or_adls2_retailersmx\""
		},
		"AzureBlobStorage_MayoreoDigital_Dev_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://nmexpporigdsdh79sta.blob.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://nmexprconstoresdhusw2key.vault.azure.net/"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prod-00-nams-pr-baisein-wrpa5gaht7mno-internal.westus2.environments.microsoftazurelogicapps.net:443/workflows/ceca053c86ba428e9c4e9d71134fa0c9/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=tMCGaXFb_ItzhjbxFqTzY1HvqDexzZZt75G3Eq0gzc4"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in/api/users"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "148.244.86.195"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sftpgerardoarcemb2b"
		},
		"Sftp2_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "98.142.238.57"
		},
		"Sftp2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "TelePerformance"
		},
		"Sftp_NESTLEVETERINARIOS_GILSALINAS_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "148.244.86.195"
		},
		"Sftp_NESTLEVETERINARIOS_GILSALINAS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sftpgarcevet"
		},
		"api_web_test_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().par_url}"
		},
		"ar_rest_api_generic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().par_url}"
		},
		"ar_rest_api_generic_auth_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().par_url_auth}"
		},
		"lk_nmex_dv_origenesmx_id_usw2_dbr_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "@linkedService().par_cluster"
		},
		"lk_nmex_dv_origenesmx_id_usw2_dbr_siweb_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0130-211945-mcv1mi12"
		},
		"lk_nmexdvorigmxdhusw2key_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/"
		},
		"ls_ar_http_shp_generic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().par_Url}"
		},
		"ls_ar_sftp_ncdt_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().parhost}"
		},
		"ls_ar_sftp_ncdt_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().paruser}"
		},
		"ls_ar_sftp_ncdt_2_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "@{linkedService().parhost}"
		},
		"ls_ar_sftp_ncdt_2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "@{linkedService().paruser}"
		},
		"ls_op_adls2_lake_datascience_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nmexpporigdsdh79sta.dfs.core.windows.net/"
		},
		"ls_op_adls2_lake_extdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nmexppextdatadh607sta.dfs.core.windows.net/"
		},
		"ls_op_adls2_lake_latam_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "ls_op_adls2_lake_latamls_op_adls2_lake_latamls_op_adls2_lake_latamls_op_adls2_lake_latam"
		},
		"ls_op_adls2_lake_latam_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "ls_op_adls2_lake_latamls_op_adls2_lake_latamls_op_adls2_lake_latam"
		},
		"ls_op_adls2_lake_origenesmx_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nmexdvorigmxdhusw2sta.dfs.core.windows.net/"
		},
		"nmex_service_api_rest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().url_base}"
		},
		"tg_alice_copy_bl_to_bl_atp_files_properties_pl_copy_blob_to_blob_atp_files_parameters_par_Folder": {
			"type": "string",
			"defaultValue": "logica-app/atp"
		},
		"tg_alice_copy_bl_to_bl_atp_files_properties_pl_copy_blob_to_blob_atp_files_parameters_par_Archivo_Nombre": {
			"type": "string",
			"defaultValue": "GATP*"
		},
		"tg_alice_copy_bl_to_bl_atp_files_properties_pl_copy_blob_to_blob_atp_files_parameters_par_Destination_Folder": {
			"type": "string",
			"defaultValue": "inbound/fact/mail/atp/atp_files"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parEnvironment": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parAdlsDestinationFolder": {
			"type": "string",
			"defaultValue": "/inbound/catalogs/supplychain/logistics/"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parFileName": {
			"type": "string",
			"defaultValue": "FORMS_OTAbiertas.xlsx"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parShpSiteUrl": {
			"type": "string",
			"defaultValue": "https://nestle.sharepoint.com/teams/nmex-supplychain-alice"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parShpRelativeFolderPath": {
			"type": "string",
			"defaultValue": "Shared Documents"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parModifiedLastNHours": {
			"type": "string",
			"defaultValue": "25"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parClientID": {
			"type": "string",
			"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-nmex-supplychain-alice/?api-version=7.0"
		},
		"tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parClientSecret": {
			"type": "string",
			"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-nmex-supplychain-alice/?api-version=7.0"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parEnvironment": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parAdlsDestinationFolder": {
			"type": "string",
			"defaultValue": "/inbound/catalogs/supplychain/logistics/"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parFileName": {
			"type": "string",
			"defaultValue": "FORMS_People&MHE.xlsx"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parShpSiteUrl": {
			"type": "string",
			"defaultValue": "https://nestle.sharepoint.com/teams/nmex-supplychain-alice"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parShpRelativeFolderPath": {
			"type": "string",
			"defaultValue": "Shared Documents"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parModifiedLastNHours": {
			"type": "string",
			"defaultValue": "25"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parClientID": {
			"type": "string",
			"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-nmex-supplychain-alice/?api-version=7.0"
		},
		"tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parClientSecret": {
			"type": "string",
			"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-nmex-supplychain-alice/?api-version=7.0"
		},
		"tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "ageing"
		},
		"tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "AGEING*"
		},
		"tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "atp"
		},
		"tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/fact/mail/atp/atp_files/"
		},
		"tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/fact/mail/atp/atp_files/"
		},
		"tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "GATP*"
		},
		"tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "lt23"
		},
		"tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "LT23*"
		},
		"tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "lx03"
		},
		"tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "LX03*"
		},
		"tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "mb5t"
		},
		"tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "MB5T*"
		},
		"tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "me2n"
		},
		"tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "ME2N*"
		},
		"tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "me80fn"
		},
		"tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "ME80FN*"
		},
		"tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "otr"
		},
		"tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "OTR_20*"
		},
		"tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "contabilizado"
		},
		"tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "OTR_Contabilizado*"
		},
		"tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "trm_log"
		},
		"tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "TRM LOG*"
		},
		"tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "vl06f_con"
		},
		"tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "VL06F_CON*"
		},
		"tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parContainer": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle": {
			"type": "string",
			"defaultValue": "vl06f_nac"
		},
		"tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy": {
			"type": "string",
			"defaultValue": "inbound/alice/"
		},
		"tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy": {
			"type": "string",
			"defaultValue": "VL06F_NAC*"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type": {
			"type": "string",
			"defaultValue": "FECHA_CREACION"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/rcSuite/GetUserToken?arg00=Origenes02&arg01=Temporal1"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder": {
			"type": "string",
			"defaultValue": "/inbound/ext_api_files/"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/japi/"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_status": {
			"type": "string",
			"defaultValue": "SI1, SI2,SI3,SI4,SI5,SI6,Si7,SI8"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function": {
			"type": "string",
			"defaultValue": "get_shipment_info_inb"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla": {
			"type": "string",
			"defaultValue": "INBOUND_LIVE"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type": {
			"type": "string",
			"defaultValue": "FECHA_EN_PLAN"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/rcSuite/GetUserToken?arg00=Origenes02&arg01=Temporal1"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder": {
			"type": "string",
			"defaultValue": "/inbound/ext_api_files/"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/japi/"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_status": {
			"type": "string",
			"defaultValue": "S01,S02,S03,S04,S05,S06"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function": {
			"type": "string",
			"defaultValue": "get_shipment_info_outb"
		},
		"tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla": {
			"type": "string",
			"defaultValue": "OUTBOUND_LIVE"
		},
		"tg_nixtla_model_execution_main_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tg_sales_powerbi_refresh_properties_pl_sales_refresh_power_bi_parameters_par_blob_filename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"tg_sales_powerbi_refresh_properties_pl_sales_refresh_power_bi_parameters_par_blob_path": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"tg_sales_powerbi_refresh_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type": {
			"type": "string",
			"defaultValue": "FIN_DESCARGA"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/rcSuite/GetUserToken?arg00=Origenes02&arg01=Temporal1"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder": {
			"type": "string",
			"defaultValue": "/inbound/ext_api_files/"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/japi/"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_status": {
			"type": "string",
			"defaultValue": "SI9"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function": {
			"type": "string",
			"defaultValue": "get_shipment_info_inb"
		},
		"tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla": {
			"type": "string",
			"defaultValue": "INBOUND_HISTORICO"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type": {
			"type": "string",
			"defaultValue": "DESPACHO_REAL"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/rcSuite/GetUserToken?arg00=Origenes02&arg01=Temporal1"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder": {
			"type": "string",
			"defaultValue": "/inbound/ext_api_files/"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base": {
			"type": "string",
			"defaultValue": "https://www.rcontrol.com.mx/japi/"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont": {
			"type": "string",
			"defaultValue": "dev"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function": {
			"type": "string",
			"defaultValue": "get_shipment_info_outb"
		},
		"tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla": {
			"type": "string",
			"defaultValue": "OUTBOUND_HISTORICO"
		},
		"tr_amsmx_load_sales_properties_pl_load_sales_parameters_par_blob_path": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"tr_amsmx_load_sales_properties_pl_load_sales_parameters_par_blob_filename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"tr_amsmx_load_sales_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_amsmx_sales_nieto_properties_pl_common_generic_api_parameters_par_retailer": {
			"type": "string",
			"defaultValue": "nieto"
		},
		"tr_catalogo_geografico_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_connection_catalog_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_dispersiones_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_ecomm_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_kf_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_mash_cat_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_mash_marca_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_palantir_SellIn_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "SellIn"
		},
		"tr_palantir_SellOut_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "SellOut"
		},
		"tr_palantir_Sindicadas_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "Sindicadas"
		},
		"tr_palantir_catalogs_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "Catalogs"
		},
		"tr_palantir_nesmovil_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "Nesmovil"
		},
		"tr_sabana_alcances_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"nmex-origmx-dh-usw2-ithub-shared-ir_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/65538c2c-2fb6-4d89-8819-b3a38f8c63e2/resourcegroups/nams-pp-bsimaster-adi-usea-rgp/providers/Microsoft.DataFactory/factories/nams-pp-bsimaster-adi-usea-adf/integrationruntimes/nams-pp-bsimgd-shared-usea-ir"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_BaseLiquidacion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData_GilSalinas_NestleVeterinarios_BaseLiquidacion",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "GilSalinas_NestleVeterinarios_BaseLiquidacion_origin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GilSalinas_NestleVeterinarios_BaseLiquidacion_destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notebook_GilSalinas_NestleVeterinarios_BaseLiquidacion",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "CopyData_GilSalinas_NestleVeterinarios_BaseLiquidacion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hugo.gallardo@mx.nestle.com/DatabricksMX/sl_mayoreodigital/execution/hugo.gallardo.tbGilSalinasNestleVeterinariosBaseLiquidacion.24082022"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data Gil Salinas  Clientes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "GilSalinas_NestleVeterinarios_Clientes_origin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GilSalinas_NestleVeterinarios_Clientes_destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data Gil Salinas Productos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "GilSalinas_NestleVeterinarios_Productos_origin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GilSalinas_NestleVeterinarios_Productos_destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notebook_GilSalinas_NestleVeterinarios_Clientes",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data Gil Salinas  Clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hugo.gallardo@mx.nestle.com/DatabricksMX/sl_mayoreodigital/execution/hugo.gallardo.tbGilSalinasNestleVeterinariosClientes.24082022"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook_GilSalinas_NestleVeterinarios_Productos",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data Gil Salinas Productos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hugo.gallardo@mx.nestle.com/DatabricksMX/sl_mayoreodigital/execution/hugo.gallardo.tbGilSalinasNestleVeterinariosProductos.24082022"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_supply_alice/pl_extract/amsmx_veterinarios"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GilSalinas_NestleVeterinarios_BaseLiquidacion_origin')]",
				"[concat(variables('factoryId'), '/datasets/GilSalinas_NestleVeterinarios_BaseLiquidacion_destination')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/datasets/GilSalinas_NestleVeterinarios_Clientes_origin')]",
				"[concat(variables('factoryId'), '/datasets/GilSalinas_NestleVeterinarios_Clientes_destination')]",
				"[concat(variables('factoryId'), '/datasets/GilSalinas_NestleVeterinarios_Productos_origin')]",
				"[concat(variables('factoryId'), '/datasets/GilSalinas_NestleVeterinarios_Productos_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nestle_Veterinarios_GilSalinas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline de Nestlé Veterinarios para el cliente Gil Salinas",
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_supply_alice/pl_extract/amsmx_veterinarios"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sell_Out_Biblia_NPP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "La Biblia NPP",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/gerardo.arce1@mx.nestle.com/Databricks_NPP/execution/ETL Sell Out Biblia NPP"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_veterinarios"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sell_Out_Last_Week')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Last_Week",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/gerardo.arce1@mx.nestle.com/Databricks_NPP/execution/Update Delta Tables Last Week"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_veterinarios"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Update_Sell_Out_NPP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sell Out Weekly",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/gerardo.arce1@mx.nestle.com/Databricks_NPP/execution/Sell Out Semanal NPP"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Sell Out Monthly",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Sell Out Weekly",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/gerardo.arce1@mx.nestle.com/Databricks_NPP/execution/Sell Out  Monthly NPP"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Sell Out Currently Week",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Sell Out Monthly",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/gerardo.arce1@mx.nestle.com/Databricks_NPP/execution/Update Delta Tables Current Week"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_veterinarios"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-08T15:35:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy files of any size from SharePoint  to Data Lake, including copy all files matching a startswith condition of a folder and files modified in the last x hours.\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
				"activities": [
					{
						"name": "Set ClientSecret",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varClientSecret",
							"value": "h6iG0ZNe9lqMPxzyQsf+oj9PBnGZ+Gtu6rYOoMHj5ig="
						}
					},
					{
						"name": "Set varClientID",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varClientID",
							"value": "fe4b99e8-cb9c-477d-b6c0-721f17e199a2"
						}
					},
					{
						"name": "GetSharepointBearerToken_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set varClientID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set ClientSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',variables('varClientID'),'12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',variables('varClientSecret'),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com12a3af23-a769-4654-847f-958f3d479f4a')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ReadSharepointFolder_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerToken_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPath,''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetSharepointBearerToken_copy1').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json;odata=verbose"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFileName": {
						"type": "string",
						"defaultValue": "Tipification"
					},
					"parShpSiteUrl": {
						"type": "string",
						"defaultValue": "https://nestle.sharepoint.com/teams/nmex-tipification-trabajo"
					},
					"parShpRelativeFolderPath": {
						"type": "string",
						"defaultValue": "Documentos Compartilhados"
					},
					"parModifiedLastNHours": {
						"type": "string",
						"defaultValue": "200"
					}
				},
				"variables": {
					"varClientID": {
						"type": "String"
					},
					"varClientSecret": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_data-load-tool"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_veterinarios"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_teste_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "teste",
							"value": {
								"value": "@convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)')\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"teste": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_00_BSG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute silver condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set uploaded files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(greater(int(variables('UploadedFiles')), 0), greater(indexof(pipeline().parameters.par_TypeBSG, 'S'), 0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Silver Execution",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set retailer list",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_02_silver_layer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_IdClient": {
												"value": "@pipeline().parameters.par_IdClient",
												"type": "Expression"
											},
											"par_IdRetailer": {
												"value": "@variables('RetailerList')",
												"type": "Expression"
											},
											"par_IdLog": {
												"value": "@pipeline().parameters.par_IdLog",
												"type": "Expression"
											},
											"par_MailList": {
												"value": "@pipeline().parameters.par_MailList",
												"type": "Expression"
											},
											"par_User": {
												"value": "@pipeline().parameters.par_User",
												"type": "Expression"
											},
											"par_ComplementLoad": {
												"value": "@pipeline().parameters.par_ComplementLoad",
												"type": "Expression"
											},
											"par_GroupedType": {
												"value": "@pipeline().parameters.par_GroupedType",
												"type": "Expression"
											},
											"par_RetailerName": {
												"value": "@pipeline().parameters.par_RetailerName",
												"type": "Expression"
											},
											"par_IsATM": {
												"value": "@pipeline().parameters.par_IsATM",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Get temp data",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/Production/DatabricksMX/sv_utilities/500_get_temp_values",
										"baseParameters": {
											"par_IdCustomer": {
												"value": "@pipeline().parameters.par_IdClient",
												"type": "Expression"
											},
											"par_IdRetailer": {
												"value": "@pipeline().parameters.par_IdRetailer",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set range dates",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get temp data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "RangeDates",
										"value": {
											"value": "@activity('Get temp data').output.runOutput.rangeDates",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set dynamic information type list",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set range dates",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "DynamicInformationTypeList",
										"value": {
											"value": "@activity('Get temp data').output.runOutput.dynamicInformationTypeList",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set retailer list",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set dynamic information type list",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "RetailerList",
										"value": {
											"value": "@if(equals(coalesce(pipeline().parameters.par_IdRetailer, ''), ''), activity('Get temp data').output.runOutput.retailerList, pipeline().parameters.par_IdRetailer)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute gold condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Execute silver condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(and(greater(int(variables('UploadedFiles')), 0), greater(indexof(pipeline().parameters.par_TypeBSG, 'G'), 0)), not(equals(variables('RangeDates'), '')))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Gold Execution",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_03_gold_layer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_IdClient": {
												"value": "@pipeline().parameters.par_IdClient",
												"type": "Expression"
											},
											"par_IdRetailer": {
												"value": "@variables('RetailerList')",
												"type": "Expression"
											},
											"par_IdLog": {
												"value": "@pipeline().parameters.par_IdLog",
												"type": "Expression"
											},
											"par_MailList": {
												"value": "@pipeline().parameters.par_MailList",
												"type": "Expression"
											},
											"par_DateList": {
												"value": "@variables('RangeDates')",
												"type": "Expression"
											},
											"par_Dashboards": {
												"value": "@pipeline().parameters.par_Dashboards",
												"type": "Expression"
											},
											"par_User": {
												"value": "@pipeline().parameters.par_User",
												"type": "Expression"
											},
											"par_RetailerName": {
												"value": "@pipeline().parameters.par_RetailerName",
												"type": "Expression"
											},
											"par_IsATM": {
												"value": "@pipeline().parameters.par_IsATM",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute datasets custom views",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Execute gold condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(and(greater(int(variables('UploadedFiles')), 0), greater(indexof(pipeline().parameters.par_TypeBSG, 'D'), 0)), not(equals(coalesce(pipeline().parameters.par_CustomViewsList, ''), '')))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Datasets Custom Views",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_04_create_datasets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_IdClient": {
												"value": "@pipeline().parameters.par_IdClient",
												"type": "Expression"
											},
											"par_IdLog": {
												"value": "@pipeline().parameters.par_IdLog",
												"type": "Expression"
											},
											"par_MailList": {
												"value": "@pipeline().parameters.par_MailList",
												"type": "Expression"
											},
											"par_User": {
												"value": "@pipeline().parameters.par_User",
												"type": "Expression"
											},
											"par_DynamicInformationTypesList": {
												"value": "@coalesce('')",
												"type": "Expression"
											},
											"par_SqlViewsList": {
												"value": "@coalesce('')",
												"type": "Expression"
											},
											"par_CustomViewsList": {
												"value": "@pipeline().parameters.par_CustomViewsList",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set uploaded files",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Load data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UploadedFiles",
							"value": {
								"value": "@string(activity('load data').output.runOutput.uploadedFiles)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Load data",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_siweb/execution/108_load_data",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdType": {
									"value": "@pipeline().parameters.par_TypeBSG",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_MailList": {
									"value": "@pipeline().parameters.par_MailList",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_RetailerName": {
									"value": "@pipeline().parameters.par_RetailerName",
									"type": "Expression"
								},
								"par_IsATM": {
									"value": "@pipeline().parameters.par_IsATM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute datasets dynamic info type views",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Execute gold condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(and(greater(int(variables('UploadedFiles')), 0), greater(indexof(pipeline().parameters.par_TypeBSG, 'D'), 0)), not(equals(coalesce(variables('DynamicInformationTypeList'), ''), '')))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Datasets Dynamic Information Types",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_04_create_datasets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_IdClient": {
												"value": "@pipeline().parameters.par_IdClient",
												"type": "Expression"
											},
											"par_IdLog": {
												"value": "@pipeline().parameters.par_IdLog",
												"type": "Expression"
											},
											"par_MailList": {
												"value": "@pipeline().parameters.par_MailList",
												"type": "Expression"
											},
											"par_User": {
												"value": "@pipeline().parameters.par_User",
												"type": "Expression"
											},
											"par_DynamicInformationTypesList": {
												"value": "@variables('DynamicInformationTypeList')",
												"type": "Expression"
											},
											"par_SqlViewsList": {
												"value": "@coalesce('')",
												"type": "Expression"
											},
											"par_CustomViewsList": {
												"value": "@coalesce('')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdClient": {
						"type": "string"
					},
					"par_IdRetailer": {
						"type": "string"
					},
					"par_TypeBSG": {
						"type": "string"
					},
					"par_IdLog": {
						"type": "string"
					},
					"par_MailList": {
						"type": "string"
					},
					"par_User": {
						"type": "string"
					},
					"par_RetailerName": {
						"type": "string"
					},
					"par_IsATM": {
						"type": "string"
					},
					"par_ComplementLoad": {
						"type": "string"
					},
					"par_GroupedType": {
						"type": "string"
					},
					"par_Dashboards": {
						"type": "string"
					},
					"par_CustomViewsList": {
						"type": "string"
					}
				},
				"variables": {
					"RangeDates": {
						"type": "String"
					},
					"UploadedFiles": {
						"type": "String"
					},
					"DynamicInformationTypeList": {
						"type": "String"
					},
					"RetailerList": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]",
				"[concat(variables('factoryId'), '/pipelines/pl_02_silver_layer')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/pipelines/pl_03_gold_layer')]",
				"[concat(variables('factoryId'), '/pipelines/pl_04_create_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_01_bronze_layer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_bronze_layer",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_siweb/execution/108_load_data",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdType": {
									"value": "@pipeline().parameters.par_IdType",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_MailList": {
									"value": "@pipeline().parameters.par_MailList",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_RetailerName": {
									"value": "@pipeline().parameters.par_RetailerName",
									"type": "Expression"
								},
								"par_IsATM": {
									"value": "@pipeline().parameters.par_IsATM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "clean_bronze",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "load_bronze_layer",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sv_utilities/functions/117_failure_clean_bronze",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdClient": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdRetailer": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdType": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_MailList": {
						"type": "string",
						"defaultValue": "mail"
					},
					"par_User": {
						"type": "string",
						"defaultValue": "drivera"
					},
					"par_RetailerName": {
						"type": "string",
						"defaultValue": "retailer"
					},
					"par_IsATM": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-06T17:46:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_02_silver_layer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "register_silver_layer",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_siweb/execution/200_register_transactions",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdType": {
									"value": "@pipeline().parameters.par_IdType",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_MailList": {
									"value": "@pipeline().parameters.par_MailList",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_ComplementLoad": {
									"value": "@pipeline().parameters.par_ComplementLoad",
									"type": "Expression"
								},
								"par_GroupedType": {
									"value": "@pipeline().parameters.par_GroupedType",
									"type": "Expression"
								},
								"par_RetailerName": {
									"value": "@pipeline().parameters.par_RetailerName",
									"type": "Expression"
								},
								"par_IsATM": {
									"value": "@pipeline().parameters.par_IsATM",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdClient": {
						"type": "string",
						"defaultValue": "84"
					},
					"par_IdRetailer": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdType": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_MailList": {
						"type": "string",
						"defaultValue": "mail"
					},
					"par_User": {
						"type": "string"
					},
					"par_ComplementLoad": {
						"type": "string",
						"defaultValue": "0"
					},
					"par_GroupedType": {
						"type": "string",
						"defaultValue": "0"
					},
					"par_RetailerName": {
						"type": "string",
						"defaultValue": "retailer"
					},
					"par_IsATM": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_03_gold_layer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "generate_gold_layer",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_siweb/execution/300_generate_dashboards",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdType": {
									"value": "@pipeline().parameters.par_IdType",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_MailList": {
									"value": "@pipeline().parameters.par_MailList",
									"type": "Expression"
								},
								"par_DateList": {
									"value": "@pipeline().parameters.par_DateList",
									"type": "Expression"
								},
								"par_Dashboards": {
									"value": "@pipeline().parameters.par_Dashboards",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_RetailerName": {
									"value": "@pipeline().parameters.par_RetailerName",
									"type": "Expression"
								},
								"par_IsATM": {
									"value": "@pipeline().parameters.par_IsATM",
									"type": "Expression"
								},
								"par_DynamicInformationTypeList": {
									"value": "@coalesce('')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdClient": {
						"type": "string",
						"defaultValue": "84"
					},
					"par_IdRetailer": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdType": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_MailList": {
						"type": "string",
						"defaultValue": "mail"
					},
					"par_DateList": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_Dashboards": {
						"type": "string",
						"defaultValue": "3"
					},
					"par_User": {
						"type": "string",
						"defaultValue": "drivera"
					},
					"par_RetailerName": {
						"type": "string",
						"defaultValue": "retailer"
					},
					"par_IsATM": {
						"type": "string",
						"defaultValue": "false"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_04_create_datasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "create_datasets",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_siweb/execution/400_materialize_views",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_MailList": {
									"value": "@pipeline().parameters.par_MailList",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_DynamicInformationTypesList": {
									"value": "@pipeline().parameters.par_DynamicInformationTypesList",
									"type": "Expression"
								},
								"par_SqlViewsList": {
									"value": "@pipeline().parameters.par_SqlViewsList",
									"type": "Expression"
								},
								"par_CustomViewsList": {
									"value": "@pipeline().parameters.par_CustomViewsList",
									"type": "Expression"
								},
								"par_EnableIncremental": {
									"value": "@pipeline().parameters.par_EnableIncremental",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdClient": {
						"type": "string",
						"defaultValue": "1"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_MailList": {
						"type": "string",
						"defaultValue": "ygarcia@thestoreintelligence.com"
					},
					"par_User": {
						"type": "string",
						"defaultValue": "ygarcia"
					},
					"par_DynamicInformationTypesList": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_SqlViewsList": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_CustomViewsList": {
						"type": "string",
						"defaultValue": "45,46"
					},
					"par_EnableIncremental": {
						"type": "string",
						"defaultValue": "true"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-20T16:21:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_10_update_attributes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run_notebook_view_attribues",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_siweb/execution/410_update_table_attributes",
							"baseParameters": {
								"par_IdClient": {
									"value": "@pipeline().parameters.par_IdClient",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_MailList": {
									"value": "@pipeline().parameters.par_MailList",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_Destiny": {
									"value": "@pipeline().parameters.par_Destiny",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdClient": {
						"type": "string"
					},
					"par_IdLog": {
						"type": "string"
					},
					"par_MailList": {
						"type": "string"
					},
					"par_User": {
						"type": "string"
					},
					"par_Destiny": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_11_delete_transactions_catalogs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTxCat",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sv_utilities/functions/114_delete_data",
							"baseParameters": {
								"par_Table": {
									"value": "@pipeline().parameters.par_Table",
									"type": "Expression"
								},
								"par_CalendarDay": {
									"value": "@pipeline().parameters.par_CalendarDay",
									"type": "Expression"
								},
								"par_CreationDate": {
									"value": "@pipeline().parameters.par_CreationDate",
									"type": "Expression"
								},
								"par_EndDate": {
									"value": "@pipeline().parameters.par_EndDate",
									"type": "Expression"
								},
								"par_IdCustomer": {
									"value": "@pipeline().parameters.par_IdCustomer",
									"type": "Expression"
								},
								"par_IdDynamicInformationType": {
									"value": "@pipeline().parameters.par_IdDynamicInformationType",
									"type": "Expression"
								},
								"par_IdFileMapping": {
									"value": "@pipeline().parameters.par_IdFileMapping",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_IdProducts": {
									"value": "@pipeline().parameters.par_IdProducts",
									"type": "Expression"
								},
								"par_IdProductsCategoriesSegmentation": {
									"value": "@pipeline().parameters.par_IdProductsCategoriesSegmentation",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdStores": {
									"value": "@pipeline().parameters.par_IdStores",
									"type": "Expression"
								},
								"par_Reason": {
									"value": "@pipeline().parameters.par_Reason",
									"type": "Expression"
								},
								"par_StartDate": {
									"value": "@pipeline().parameters.par_StartDate",
									"type": "Expression"
								},
								"par_TypeCalendarDay": {
									"value": "@pipeline().parameters.par_TypeCalendarDay",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_Table": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdCustomer": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdRetailer": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdDynamicInformationType": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdFileMapping": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdProducts": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdProductsCategoriesSegmentation": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdStores": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_TypeCalendarDay": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_StartDate": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_EndDate": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_CalendarDay": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_CreationDate": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_Reason": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_User": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_12_delete_products')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteProducts",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sv_utilities/functions/115_delete_products",
							"baseParameters": {
								"par_IdCustomer": {
									"value": "@pipeline().parameters.par_IdCustomer",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdRetailerProducts": {
									"value": "@pipeline().parameters.par_IdRetailerProducts",
									"type": "Expression"
								},
								"par_LoadUserLoadDate": {
									"value": "@pipeline().parameters.par_LoadUserLoadDate",
									"type": "Expression"
								},
								"par_Reason": {
									"value": "@pipeline().parameters.par_Reason",
									"type": "Expression"
								},
								"par_RemoveAll": {
									"value": "@pipeline().parameters.par_RemoveAll",
									"type": "Expression"
								},
								"par_RemoveTransactions": {
									"value": "@pipeline().parameters.par_RemoveTransactions",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_UserEmail": {
									"value": "@pipeline().parameters.par_UserEmail",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdCustomer": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdRetailer": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdRetailerProducts": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_LoadUserLoadDate": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_UserEmail": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_Reason": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_RemoveAll": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_RemoveTransactions": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_User": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_13_delete_stores')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteStores",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sv_utilities/functions/116_delete_stores",
							"baseParameters": {
								"par_IdCustomer": {
									"value": "@pipeline().parameters.par_IdCustomer",
									"type": "Expression"
								},
								"par_IdLog": {
									"value": "@pipeline().parameters.par_IdLog",
									"type": "Expression"
								},
								"par_IdRetailer": {
									"value": "@pipeline().parameters.par_IdRetailer",
									"type": "Expression"
								},
								"par_IdStores": {
									"value": "@pipeline().parameters.par_IdStores",
									"type": "Expression"
								},
								"par_LoadUserLoadDate": {
									"value": "@pipeline().parameters.par_LoadUserLoadDate",
									"type": "Expression"
								},
								"par_Reason": {
									"value": "@pipeline().parameters.par_Reason",
									"type": "Expression"
								},
								"par_RemoveAll": {
									"value": "@pipeline().parameters.par_RemoveAll",
									"type": "Expression"
								},
								"par_RemoveTransactions": {
									"value": "@pipeline().parameters.par_RemoveTransactions",
									"type": "Expression"
								},
								"par_User": {
									"value": "@pipeline().parameters.par_User",
									"type": "Expression"
								},
								"par_UserEmail": {
									"value": "@pipeline().parameters.par_UserEmail",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr_siweb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_IdCustomer": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdRetailer": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdStores": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_LoadUserLoadDate": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_UserEmail": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_Reason": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_RemoveAll": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_RemoveTransactions": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_IdLog": {
						"type": "string",
						"defaultValue": "-"
					},
					"par_User": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"folder": {
					"name": "Siweb"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_API_drivin_historico')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@item().Prop_0",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@item().Prop_1",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "key_provider",
										"value": {
											"value": "@item().Prop_2",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/valeria.camacho1@mx.nestle.com/DatabricksMX/sl_ncdt/sl_Driv_In_API/Rutas de un Escenario/DRIVINAPI",
										"baseParameters": {
											"end_date": {
												"value": "@variables('start_date')",
												"type": "Expression"
											},
											"key_provider": {
												"value": "@variables('key_provider')",
												"type": "Expression"
											},
											"startdate": {
												"value": "@variables('start_date')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"key_provider": {
						"type": "String"
					},
					"validator": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_afs_npp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy AFS__Last_Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"maxConcurrentConnections": 0
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AFS_Monitoring",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_AFS_Prod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy AFS_Current_Month",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"maxConcurrentConnections": 0
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AFS_Monitoring_2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_AFS_Prod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Fail1",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Copy AFS_Current_Month",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "No se cargo el file",
							"errorCode": "001"
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy AFS__Last_Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/gerardo.arce1@mx.nestle.com/DatabricksMX/md_algoritmos/execution/AFS_Purina_Share of Shelf"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_veterinarios"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AFS_Monitoring')]",
				"[concat(variables('factoryId'), '/datasets/Dev_AFS_Prod')]",
				"[concat(variables('factoryId'), '/datasets/AFS_Monitoring_2')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_api_drivin_daily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Token",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Proveedor",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "par_header_key",
										"value": {
											"value": "@item().Prop_1",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable Fecha Hoy",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Token",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_set_fecha_hoy",
										"value": {
											"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set variable Fecha Hoy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_extract_origenes_copy1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_url": "https://external.driv.in/",
											"par_stardate": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											},
											"par_enddate": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											},
											"par_header_key": {
												"value": "@variables('par_header_key')",
												"type": "Expression"
											},
											"par_provee": {
												"value": "@variables('par_provee')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Proveedor",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "par_provee",
										"value": {
											"value": "@item().Prop_0",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "Execute Pipeline1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@if(contains(variables('par_provee'),'Velbus'),'Velbus',if(contains(variables('par_provee'),'Oplays'),'Oplays','Default'))",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Velbus",
												"activities": [
													{
														"name": "Silver Velbus",
														"type": "DatabricksNotebook",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"notebookPath": "/Repos/valeria.camacho1@mx.nestle.com/DatabricksMX/sl_ncdt/sl_Driv_In_API/execution/0020_load_silver_tb_mx_sc_drivin_velbus"
														},
														"linkedServiceName": {
															"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
															"type": "LinkedServiceReference",
															"parameters": {
																"par_cluster": "0130-211945-mcv1mi12"
															}
														}
													}
												]
											},
											{
												"value": "Oplays",
												"activities": [
													{
														"name": "Silver Oplays",
														"type": "DatabricksNotebook",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"notebookPath": "/Repos/valeria.camacho1@mx.nestle.com/DatabricksMX/sl_ncdt/sl_Driv_In_API/execution/0020_load_silver_tb_mx_sc_drivin_oplays"
														},
														"linkedServiceName": {
															"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
															"type": "LinkedServiceReference",
															"parameters": {
																"par_cluster": "0130-211945-mcv1mi12"
															}
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Silver Generico",
												"type": "DatabricksNotebook",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"notebookPath": "/Repos/valeria.camacho1@mx.nestle.com/DatabricksMX/sl_ncdt/sl_Driv_In_API/execution/0020_load_silver_mx_tb_drivin_apis"
												},
												"linkedServiceName": {
													"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
													"type": "LinkedServiceReference",
													"parameters": {
														"par_cluster": "0130-211945-mcv1mi12"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/DRIVIN/"
					}
				},
				"variables": {
					"par_stardate": {
						"type": "String"
					},
					"par_enddate": {
						"type": "String"
					},
					"par_header_key": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"par_provee": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sc_drivin"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-17T16:07:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/pipelines/pl_extract_origenes_copy1')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_extract_log_register')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move Log Orig to External",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Exporta Log File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/credit_notes/files_log",
									"par_filename": "pl_master_tipification_to_lake.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl2_extdata_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "export_log_tipification",
									"par_filename": "pl_master_tipification_to_lake.csv"
								}
							}
						]
					},
					{
						"name": "Exporta Log File",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/07_export_log"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_extdata_binary')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get ADF_parameters_apis",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_mayoreo_apis.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_apis",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_apis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_apis').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().retailer),pipeline().parameters.par_retailer)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach type retailer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If Condition API Login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_apis').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy API Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:05:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ar_rest_api_generic_auth",
											"type": "DatasetReference",
											"parameters": {
												"par_url_complete": {
													"value": "@concat(item().url,item().header_key)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "json_api_web",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().retailer,'_',variables('var_set_fecha_hoy'),'_',item().tipo,'.json')",
													"type": "Expression"
												},
												"ContName": {
													"value": "@item().cont",
													"type": "Expression"
												},
												"FoldPath": {
													"value": "@concat(item().blob_path,'/',item().retailer,'/',item().tipo)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Notebook API generic bronze layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Copy API Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_apis_generic/execution/0010.Execution_Extract_MX_Sales_Mayoreo_API_Generic",
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											},
											"parFilePath": {
												"value": "@concat(item().cont,item().blob_path)",
												"type": "Expression"
											},
											"parRetailer": {
												"value": "@item().retailer",
												"type": "Expression"
											},
											"parRetailerType": {
												"value": "@item().tipo",
												"type": "Expression"
											},
											"parTableType": {
												"value": "@item().tb_type",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Notebook  Setup API generic silver layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Notebook API generic bronze layer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_',item().retailer,'/setup/002',item().nb_id,'.Setup_',item().nb_name)",
											"type": "Expression"
										},
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference",
										"parameters": {
											"par_cluster": "0130-211945-mcv1mi12"
										}
									}
								},
								{
									"name": "Notebook  Exec API generic silver layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Notebook  Setup API generic silver layer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_',item().retailer,'/execution/002',item().nb_id,'.Exec_',item().nb_name)",
											"type": "Expression"
										},
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "If Condition API Login",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter ADF_parameters_apis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Filter ADF_parameters_apis').output.value[0]['login'],'TRUE')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline API Login",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_generic_api_login",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_retailer": {
												"value": "@activity('Filter ADF_parameters_apis').output.value[0]['retailer']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Notebook  Setup API generic sgold layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach type retailer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_marvin','/setup/0030.Setup_Load_SO_Mayoreo_Dataset_Marvin')",
								"type": "Expression"
							},
							"baseParameters": {
								"parFechaExecution": {
									"value": "@variables('var_set_fecha_hoy')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Notebook  Exec API generic gold layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook  Setup API generic sgold layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_nieto/execution/0031.Exec_Load_SO_Mayoreo_Nieto_Marvin')",
								"type": "Expression"
							},
							"baseParameters": {
								"parFechaExecution": {
									"value": "@variables('var_set_fecha_hoy')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_retailer": {
						"type": "string"
					}
				},
				"variables": {
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_api_login')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_api_login')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ADF_parameters_apis_login",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_mayoreo_apis_login.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_apis_login",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_apis_login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_apis_login').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().retailer),pipeline().parameters.par_retailer)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Web Login",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Filter ADF_parameters_apis_login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Filter ADF_parameters_apis_login').output.value[0]['url']",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{ \"username\":\"',activity('Filter ADF_parameters_apis_login').output.value[0]['username'],'\", \"password\": \"',activity('Filter ADF_parameters_apis_login').output.value[0]['password'],'\" }')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_retailer": {
						"type": "string"
					}
				},
				"variables": {
					"var_test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_api_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get ADF_parameters_apis",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_mayoreo_apis.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_apis",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_apis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_apis').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().retailer),pipeline().parameters.par_retailer)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach type retailer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filter ADF_parameters_apis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_apis').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Notebook API generic bronze layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Copy API Data_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_apis_generic/execution/0010.Execution_Extract_MX_Sales_Mayoreo_API_Generic",
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											},
											"parFilePath": {
												"value": "@concat(item().cont,item().blob_path)",
												"type": "Expression"
											},
											"parRetailer": {
												"value": "@item().retailer",
												"type": "Expression"
											},
											"parRetailerType": {
												"value": "@item().tipo",
												"type": "Expression"
											},
											"parTableType": {
												"value": "@item().tb_type",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference",
										"parameters": {
											"par_cluster": "0130-211945-mcv1mi12"
										}
									}
								},
								{
									"name": "Copy API Data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "01:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"api-key": {
													"value": "@item().header_key",
													"type": "Expression"
												},
												"Content-type": "application/json",
												"Authorization": {
													"value": "@variables('var_api_token')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ar_rest_api_generic_auth",
											"type": "DatasetReference",
											"parameters": {
												"par_url_complete": {
													"value": "@if(empty(item().range_date),item().url,concat(item().url,formatDateTime(addDays(pipeline().TriggerTime,int(item().range_date)),item().date_format),item().header_content_type,if(equals(item().range_date,'-2'),'',formatDateTime(pipeline().TriggerTime,item().date_format))))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "json_api_web",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().retailer,'_',variables('var_set_fecha_hoy'),'_',item().tipo,'.json')",
													"type": "Expression"
												},
												"ContName": {
													"value": "@item().cont",
													"type": "Expression"
												},
												"FoldPath": {
													"value": "@concat(item().blob_path,'/',item().retailer,'/',item().tipo)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_retailer": {
						"type": "string"
					}
				},
				"variables": {
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_test": {
						"type": "String"
					},
					"var_api_token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-20T16:21:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_databricks_notebook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Databricks Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.par_db_root_path,pipeline().parameters.par_db_folder_path,pipeline().parameters.par_db_type_path,pipeline().parameters.par_db_etl_path,pipeline().parameters.par_db_sol_path)",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0517-180241-h3awdlrk"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_db_type_path": {
						"type": "string"
					},
					"par_db_etl_path": {
						"type": "string"
					},
					"par_db_folder_path": {
						"type": "string"
					},
					"par_db_sol_path": {
						"type": "string"
					},
					"par_db_root_path": {
						"type": "string",
						"defaultValue": "/Repos/Production/DatabricksMX/"
					}
				},
				"variables": {
					"var_blob_folderpath": {
						"type": "String"
					},
					"var_sol": {
						"type": "Array"
					},
					"var_test": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_databricks_notebooks_solution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Setup_Extract_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('setup/001',pipeline().parameters.par_id,'.Setup_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Extract_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Setup_Transform_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Exec_Extract_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('setup/002',pipeline().parameters.par_id,'.Setup_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Transform_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Exec_Extract_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Setup_Extract_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('execution/001',pipeline().parameters.par_id,'.Exec_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Extract_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Exec_Transform_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Setup_Transform_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('execution/002',pipeline().parameters.par_id,'.Exec_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Transform_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get ADF_parameters_gold_layer",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_gold_layer.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_gold_layer",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_gold_layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_gold_layer').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().solution),pipeline().parameters.par_solution)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Gold Layer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Exec_Transform_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filter ADF_parameters_gold_layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_gold_layer').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition Gold Layer",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Filter ADF_parameters_gold_layer').output.FilteredItemsCount,0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Setup_Load_DB_Notebook",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_databricks_notebook",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_db_type_path": {
															"value": "@concat('setup/003',item().id_gold,'.Setup_')",
															"type": "Expression"
														},
														"par_db_etl_path": "Load_",
														"par_db_folder_path": {
															"value": "@pipeline().parameters.par_db_folder_path",
															"type": "Expression"
														},
														"par_db_sol_path": {
															"value": "@string(item().db_sol_path)",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Exec_Load_DB_Notebook",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Setup_Load_DB_Notebook",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_databricks_notebook",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_db_type_path": {
															"value": "@concat('execution/003',item().id_gold,'.Exec_')",
															"type": "Expression"
														},
														"par_db_etl_path": "Load_",
														"par_db_folder_path": {
															"value": "@pipeline().parameters.par_db_folder_path",
															"type": "Expression"
														},
														"par_db_sol_path": {
															"value": "@string(item().db_sol_path)",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Get ADF_parameters_powerbi_service",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_powerbi_service.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_powerbi_service",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_powerbi_service",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_powerbi_service').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().solution),pipeline().parameters.par_solution)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach PowerBI Service",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter ADF_parameters_powerbi_service",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach Gold Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_powerbi_service').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition PowerBI Service",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Filter ADF_parameters_powerbi_service').output.FilteredItemsCount,0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PowerBi Service",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_refresh_power_bi_dataset",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_id_workspace": {
															"value": "@string(item().workspace_id)",
															"type": "Expression"
														},
														"par_id_dataset": {
															"value": "@string(item().dataset_id)",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "If Condition Copy Parquet",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEach Gold Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.par_parquet,'TRUE')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline Copy Parquet",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_generic_parquet_copy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_db_sol_path": {
												"value": "@pipeline().parameters.par_db_sol_path",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_db_folder_path": {
						"type": "string"
					},
					"par_db_sol_path": {
						"type": "string"
					},
					"par_solution": {
						"type": "string"
					},
					"par_id": {
						"type": "string"
					},
					"par_parquet": {
						"type": "string"
					}
				},
				"variables": {
					"var_id": {
						"type": "String"
					},
					"var_test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_databricks_notebook')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_parquet_copy')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_refresh_power_bi_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_parquet_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ADF_parameters_parquets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_parquets.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_parquet",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_parquets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_parquets').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().db_sol_path),pipeline().parameters.par_db_sol_path)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Parquet Generic Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Filter ADF_parameters_parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/Production/DatabricksMX/sl_common_data_tool/execution/0010.Exec_Copy_Last_Version_Parquets",
							"baseParameters": {
								"parPath": {
									"value": "@concat(activity('Filter ADF_parameters_parquet').output.value[0]['path'],activity('Filter ADF_parameters_parquet').output.value[0]['tb_name'])",
									"type": "Expression"
								},
								"parPathlv": {
									"value": "@concat(activity('Filter ADF_parameters_parquet').output.value[0]['path_lv'],activity('Filter ADF_parameters_parquet').output.value[0]['tb_name'])",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_db_sol_path": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_refresh_power_bi_dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Generic pipeline to update power bi datasets",
				"activities": [
					{
						"name": "Key Vault - TenantID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/TENANTID-MxAppPowerBiApi/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Key Vault - ClientID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/ClientID-MxAppPowerBiApi/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Key Vault - C Secret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/APP-MxAppPowerBiApi/?api-version=7.0",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get AAD Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Key Vault - TenantID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Key Vault - ClientID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Key Vault - C Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',activity('Key Vault - TenantID').output.value,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',activity('Key Vault - ClientID').output.value,'&client_secret=',encodeUriComponent(activity('Key Vault - C Secret').output.value))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Call dataset refresh",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get AAD Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.par_id_workspace,'/datasets/',pipeline().parameters.par_id_dataset,'/refreshes')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))",
									"type": "Expression"
								}
							},
							"body": {
								"notifyOption": "NoNotification"
							}
						}
					},
					{
						"name": "Until dataset refresh completion",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Call dataset refresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(first(json(string(activity('Get dataset refresh status').output)).value).status,'Unknown'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait 30 seconds",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Refresh AAD Token",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								},
								{
									"name": "Get dataset refresh status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait 30 seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.par_id_workspace,'/datasets/',pipeline().parameters.par_id_dataset,'/refreshes?$top=1')",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('Refresh AAD Token').output.token_type),' ',string(activity('Refresh AAD Token').output.access_token))",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										}
									}
								},
								{
									"name": "Refresh AAD Token",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://login.microsoftonline.com/',activity('Key Vault - TenantID').output.value,'/oauth2/token')",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/x-www-form-urlencoded"
										},
										"body": {
											"value": "@concat('grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',activity('Key Vault - ClientID').output.value,'&client_secret=',encodeUriComponent(activity('Key Vault - C Secret').output.value))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.03:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_id_workspace": {
						"type": "string"
					},
					"par_id_dataset": {
						"type": "string"
					}
				},
				"variables": {
					"ProcessingErrors": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "amsla_data-load-tool"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_load_datascience')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Carrega Datascience LX03",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'lx03')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience LX03",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_lx03/execution/0050_datascience_load_dataset_tb_mx_sc_fact_lx03"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience LT23",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'lt23')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience LT23",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/apparecido.junior@br.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_lt23/execution/0050_load_datascience_tb_mx_sc_fact_lt23"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience OTR",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'otr')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience OTR",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr/execution/0050_load_datascience_tb_mx_sc_fact_otr"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience OTR_Contabilizado",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'contabilizado')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience OTR_Contabilizado",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr_contabilizado/execution/0050_load_datascience_tb_mx_sc_fact_otr_contabilizado"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience MB5T",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'mb5t')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience MB5T",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_mb5t/execution/0050_datascience_load_dataset_tb_mx_sc_fact_mb5t"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience ME2N",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'me2n')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience ME2N",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_me2n/execution/0050_datascience_load_dataset_tb_mx_sc_fact_me2n"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience ATP",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'atp')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience ATP",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_atp/execution/0050_datascience_load_dataset_tb_mx_sc_fact_atp"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience VL06F_NAC",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'me2n')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience VL06F_NAC",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_nac/execution/0050_datascience_load_dataset_tb_mx_sc_fact_vl06f_nac"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience VL06F_CON",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'me2n')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience VL06F_CON",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_con/execution/0050_datascience_load_dataset_tb_mx_sc_fact_vl06f_con"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience ME80FN",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'me80fn')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience ME80FN",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_me80fn/execution/0050_datascience_load_dataset_tb_mx_sc_fact_me80fn"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience AGEING",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'ageing')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience ageing",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_ageing/execution/0050_datascience_load_dataset_tb_mx_sc_fact_ageing"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Carrega Datascience TRM_LOG",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.parTableName_Load, 'trm_log')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Load Datascience trm_log",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_trm_log/execution/0050_datascience_load_dataset_tb_mx_sc_fact_trm_log"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parTableName_Load": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_load_extract_tipification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move DataLake Orig to External",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datasets/credit_notes/dataset_tipification/file_tipification_output",
									"par_filename": "Tipification_Trabajo.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl2_extdata_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "export_trabajo_tipification",
									"par_filename": "Tipification_Trabajo.xlsx"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_extdata_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_process_tipification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Silver Tipification",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/04_silver_tipification"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset Tipification",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver Tipification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/05_dataset_tipification"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_shp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy files of any size from SharePoint  to Data Lake, including copy all files matching a startswith condition of a folder and files modified in the last x hours.\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Filename Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization: Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_ar_rest_shp_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_Url": {
													"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFileByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),pipeline().parameters.parShpRelativeFolderPath,'/',pipeline().parameters.parFileName,''')/$value')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.parAdlsDestinationFolder",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@pipeline().parameters.parFileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Filename Copy",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_File_NameOut",
										"value": {
											"value": "@pipeline().parameters.parFileName",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetShpClientId",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientID",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecret",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ReadSharepointFolder",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPath,''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json;odata=verbose"
							}
						}
					},
					{
						"name": "GetSharepointBearerToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpClientId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientId').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecret').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterFiles",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ReadSharepointFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadSharepointFolder').output['d']['results']",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(\n    startswith(item()['Name'],pipeline().parameters.parFileName),\n    greaterOrEquals(\n        item()['TimeLastModified'],\n        addToTime(\n            utcnow(),\n            mul(int(pipeline().parameters.parModifiedLastNHours),-1),\n            'hour'\n        )\n    )\n)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parEnvironment": {
						"type": "string"
					},
					"parAdlsDestinationFolder": {
						"type": "string"
					},
					"parFileName": {
						"type": "string"
					},
					"parShpSiteUrl": {
						"type": "string"
					},
					"parShpRelativeFolderPath": {
						"type": "string"
					},
					"parModifiedLastNHours": {
						"type": "string"
					},
					"parNewFileName": {
						"type": "string"
					},
					"parClientID": {
						"type": "string"
					},
					"parClientSecret": {
						"type": "string"
					},
					"par_UtcNowVar": {
						"type": "string"
					}
				},
				"variables": {
					"var_File_NameOut": {
						"type": "String"
					},
					"varNombreArchivoAtual": {
						"type": "String"
					},
					"varNombreNewArchivo": {
						"type": "String"
					},
					"varPathUTCArchivoAnterior": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice/pl_extract/SharePoint Catalogs"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ar_rest_shp_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_shp_copy-datalakefiletosharepoint')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy files of any size from DataLake to SharePoint\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
				"activities": [
					{
						"name": "UploadFileToSharepoint",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpClientId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://nbra-pr-adipowershell-id-usw2-fnc.azurewebsites.net/api/AdlsCopyToSharepoint?code=AiD9yiCsYxvlQ0tbY9sT16VmAjyzs0FVg_RwgQwv-f3_AzFuv8AhQQ==",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(\n    concat(\n        '{\"fileName\": \"', pipeline().parameters.parFileName,\n        '\",',\n        '\"environment\": \"', pipeline().parameters.parEnvironment,\n        '\",',\n        '\"sourceFolder\": \"', pipeline().parameters.parAdlsSourceFolder,\n        '\",',\n        '\"siteURL\": \"', pipeline().parameters.parShpSiteUrl,\n        '\",',\n        '\"shpRelativeFolderPath\": \"', pipeline().parameters.parShpRelativeFolderPath,\n        '\",',\n        '\"sharepointClientId\": \"', activity('GetShpClientId').output.value,\n        '\",',\n        '\"sharepointClientSecret\": \"', activity('GetShpSecret').output.value,\n        '\",',\n        '}'\n    )\n)",
								"type": "Expression"
							},
							"httpRequestTimeout": "00:10:00"
						}
					},
					{
						"name": "GetShpClientId",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientID",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecret",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parEnvironment": {
						"type": "string",
						"defaultValue": "prod"
					},
					"parAdlsSourceFolder": {
						"type": "string",
						"defaultValue": "inbound/credit_notes/files_transfer/"
					},
					"parFileName": {
						"type": "string"
					},
					"parShpSiteUrl": {
						"type": "string",
						"defaultValue": "https://nestle.sharepoint.com/teams/nmex-tipification-trabajo/"
					},
					"parShpRelativeFolderPath": {
						"type": "string",
						"defaultValue": "Documentos%20Compartilhados"
					},
					"parClientID": {
						"type": "String",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-nmex-trabajo-tipification/?api-version=7.0"
					},
					"parClientSecret": {
						"type": "String",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-nmex-trabajo-tipification/?api-version=7.0"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/SharePoint/Toolset"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_shp_copy-multiplefilestodatalakehourfilter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy files of any size from SharePoint  to Data Lake, including copy all files matching a startswith condition of a folder and files modified in the last x hours.\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.Value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Filename Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization: Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_ar_rest_shp_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_Url": {
													"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFileByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),pipeline().parameters.parShpRelativeFolderPath,'/',item().Name,''')/$value')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@concat(pipeline().parameters.parAdlsDestinationFolder,'/',pipeline().parameters.par_UtcNowVar)",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Filename Copy",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_FileTipificationNameOut",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetShpClientId",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientID",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecret",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "FilterFiles",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ReadSharepointFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadSharepointFolder').output['d']['results']",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(\n    startswith(item()['Name'],pipeline().parameters.parFileName),\n    greaterOrEquals(\n        item()['TimeLastModified'],\n        addToTime(\n            utcnow(),\n            mul(int(pipeline().parameters.parModifiedLastNHours),-1),\n            'hour'\n        )\n    )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ReadSharepointFolder",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPath,''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json;odata=verbose"
							}
						}
					},
					{
						"name": "GetSharepointBearerToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpClientId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientId').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecret').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Carga Tipification COMP - Inbound",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/02_inbound_tipification_new_archivo",
							"baseParameters": {
								"parArchivoNombreAtual": {
									"value": "@variables('var_FileTipificationNameOut')",
									"type": "Expression"
								},
								"parDateTimeUTC": {
									"value": "@pipeline().parameters.par_UtcNowVar",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "pl_common_process_tipification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Tipification COMP - Inbound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_process_tipification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"parAdlsDestinationFolder": {
						"type": "string"
					},
					"parFileName": {
						"type": "string"
					},
					"parShpSiteUrl": {
						"type": "string"
					},
					"parShpRelativeFolderPath": {
						"type": "string"
					},
					"parModifiedLastNHours": {
						"type": "string"
					},
					"parNewFileName": {
						"type": "string"
					},
					"parClientID": {
						"type": "string"
					},
					"parClientSecret": {
						"type": "string"
					},
					"par_UtcNowVar": {
						"type": "string"
					}
				},
				"variables": {
					"var_FileTipificationNameOut": {
						"type": "String"
					},
					"varNombreArchivoAtual": {
						"type": "String"
					},
					"varNombreNewArchivo": {
						"type": "String"
					},
					"varPathUTCArchivoAnterior": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/SharePoint/Toolset"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_process_tipification')]",
				"[concat(variables('factoryId'), '/datasets/ds_ar_rest_shp_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_shp_copy-multiplefilestodatalakehourfilter_generica')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy files of any size from SharePoint  to Data Lake, including copy all files matching a startswith condition of a folder and files modified in the last x hours.\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
				"activities": [
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.Value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Filename Copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization: Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_ar_rest_shp_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_Url": {
													"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFileByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),pipeline().parameters.parShpRelativeFolderPath,'/',item().Name,''')/$value')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@concat(pipeline().parameters.parAdlsDestinationFolder,'/',pipeline().parameters.par_UtcNowVar)",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Filename Copy",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_FileTipificationNameOut",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetShpClientId",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientID",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecret",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "FilterFiles",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ReadSharepointFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadSharepointFolder').output['d']['results']",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(\n    startswith(item()['Name'],pipeline().parameters.parFileName),\n    greaterOrEquals(\n        item()['TimeLastModified'],\n        addToTime(\n            utcnow(),\n            mul(int(pipeline().parameters.parModifiedLastNHours),-1),\n            'hour'\n        )\n    )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ReadSharepointFolder",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPath,''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json;odata=verbose"
							}
						}
					},
					{
						"name": "GetSharepointBearerToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpClientId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientId').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecret').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Carga Tipification COMP - Inbound",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/02_inbound_tipification_new_archivo",
							"baseParameters": {
								"parArchivoNombreAtual": {
									"value": "@variables('var_FileTipificationNameOut')",
									"type": "Expression"
								},
								"parDateTimeUTC": {
									"value": "@pipeline().parameters.par_UtcNowVar",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "pl_common_process_tipification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Carga Tipification COMP - Inbound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_process_tipification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parEnvironment": {
						"type": "string",
						"defaultValue": "dev"
					},
					"parAdlsDestinationFolder": {
						"type": "string"
					},
					"parFileName": {
						"type": "string"
					},
					"parShpSiteUrl": {
						"type": "string"
					},
					"parShpRelativeFolderPath": {
						"type": "string"
					},
					"parModifiedLastNHours": {
						"type": "string"
					},
					"parNewFileName": {
						"type": "string"
					},
					"parClientID": {
						"type": "string"
					},
					"parClientSecret": {
						"type": "string"
					},
					"par_UtcNowVar": {
						"type": "string"
					}
				},
				"variables": {
					"var_FileTipificationNameOut": {
						"type": "String"
					},
					"varNombreArchivoAtual": {
						"type": "String"
					},
					"varNombreNewArchivo": {
						"type": "String"
					},
					"varPathUTCArchivoAnterior": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/SharePoint/Toolset"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_process_tipification')]",
				"[concat(variables('factoryId'), '/datasets/ds_ar_rest_shp_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_shp_copy-sharepointsinglefiletodatalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Direct copy of sharepoint file to datalake\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
				"activities": [
					{
						"name": "GetShpClientId",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientID",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecret",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetSharepointBearerToken",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpClientId",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpSecret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientId').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecret').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_ar_rest_shp_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_Url": {
										"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFileByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),pipeline().parameters.parShpRelativeFolderPath,'/',pipeline().parameters.parFileName,''')/$value')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": {
										"value": "@concat(pipeline().parameters.parAdlsDestinationFolder, '/', pipeline().parameters.parUTCNow)",
										"type": "Expression"
									},
									"par_filename": {
										"value": "@pipeline().parameters.parFileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parEnvironment": {
						"type": "string"
					},
					"parAdlsDestinationFolder": {
						"type": "string",
						"defaultValue": "inbound/credit_notes/files_transfer"
					},
					"parFileName": {
						"type": "string"
					},
					"parShpSiteUrl": {
						"type": "string",
						"defaultValue": "https://nestle.sharepoint.com/teams/MXFillOutBillingReference"
					},
					"parShpRelativeFolderPath": {
						"type": "string",
						"defaultValue": "Shared Documents/Archivos tipificación"
					},
					"parNewFileName": {
						"type": "string"
					},
					"parClientID": {
						"type": "string",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-mxbilingrebates/?api-version=7.0"
					},
					"parClientSecret": {
						"type": "string",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-mxbilingrebates/?api-version=7.0"
					},
					"parUTCNow": {
						"type": "string"
					}
				},
				"variables": {
					"varUTCNow": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/SharePoint/Toolset"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ar_rest_shp_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_ageing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_ageing",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_ageing/execution/0010_load_bronze_tb_mx_sc_fact_ageing",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_ageing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_ageing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_ageing/execution/0020_load_silver_tb_mx_sc_fact_ageing",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_ageing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_ageing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_ageing/execution/0030_load_gold_tb_mx_sc_fact_ageing",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_ageing",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_ageing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_ageing/execution/0040_load_dataset_tb_mx_sc_fact_ageing",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_atp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_ATP",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_atp/execution/0010_load_bronze_tb_mx_sc_fact_atp",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_ATP",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_ATP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_atp/execution/0020_load_silver_tb_mx_sc_fact_atp",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_ATP",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_ATP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_atp/execution/0040_load_dataset_tb_mx_sc_fact_atp",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_ATP",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_ATP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_atp/execution/0030_load_gold_tb_mx_sc_fact_atp",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_lt23')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_LT23",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/apparecido.junior@br.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_lt23/execution/0010_load_bronze_tb_mx_sc_fact_lt23",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_LX23",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_LT23",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/apparecido.junior@br.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_lt23/execution/0020_load_silver_tb_mx_sc_fact_lt23",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_LX23",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_LX23",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/apparecido.junior@br.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_lt23/execution/0030_load_gold_tb_mx_sc_fact_lt23",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_LX23",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_LX23",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/apparecido.junior@br.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_lt23/execution/0040_load_dataset_tb_mx_sc_fact_lt23",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-05T20:14:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_lx03')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_LX03",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_lx03/execution/0010_load_bronze_tb_mx_sc_fact_lx03",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_LX03",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_LX03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_lx03/execution/0020_load_silver_tb_mx_sc_fact_lx03",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_LX03",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_LX03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_lx03/execution/0030_load_gold_tb_mx_sc_fact_lx03",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_LX03",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_LX03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_lx03/execution/0040_load_dataset_tb_mx_sc_fact_lx03",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_mb5t')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_MB5T",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_mb5t/execution/0010_load_bronze_tb_mx_sc_fact_mb5t",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_MB5T",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_MB5T",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_mb5t/execution/0020_load_silver_tb_mx_sc_fact_mb5t",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_MB5T",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_MB5T",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_mb5t/execution/0030_load_gold_tb_mx_sc_fact_mb5t",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_MB5T",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_MB5T",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_mb5t/execution/0040_load_dataset_tb_mx_sc_fact_mb5t",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_me2n')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_ME2N",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_me2n/execution/0010_load_bronze_tb_mx_sc_fact_me2n",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_ME2N",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_ME2N",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_me2n/execution/0020_load_silver_tb_mx_sc_fact_me2n",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_ME2N",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_ME2N",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_me2n/execution/0030_load_gold_tb_mx_sc_fact_me2n",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_ME2N",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_ME2N",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_me2n/execution/0040_load_dataset_tb_mx_sc_fact_me2n",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_me80fn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_ME80FN",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_me80fn/execution/0010_load_bronze_tb_mx_sc_fact_me80fn",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_ME80FN",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_ME80FN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_me80fn/execution/0020_load_silver_tb_mx_sc_fact_me80fn",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_ME80FN",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_ME80FN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_me80fn/execution/0030_load_gold_tb_mx_sc_fact_me80fn",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_ME80FN",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_ME80FN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/fact/tb_mx_sc_me80fn/execution/0040_load_dataset_tb_mx_sc_fact_me80fn",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_otr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_OTR",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr/execution/0010_load_bronze_tb_mx_sc_fact_otr",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_OTR",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_OTR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr/execution/0020_load_silver_tb_mx_sc_fact_otr",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_OTR",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_OTR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr/execution/0030_load_gold_tb_mx_sc_fact_otr",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_OTR",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_OTR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr/execution/0040_load_dataset_tb_mx_sc_fact_otr",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_otr_contabilizado')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_OTR_Contabilizado",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr_contabilizado/execution/0010_load_bronze_tb_mx_sc_fact_otr_contabilizado",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_OTR__Contabilizado",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_OTR_Contabilizado",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr_contabilizado/execution/0020_load_silver_tb_mx_sc_fact_otr_contabilizado",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_OTR__Contabilizado",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_OTR__Contabilizado",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr_contabilizado/execution/0030_load_gold_tb_mx_sc_fact_otr_contabilizado",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_OTR__Contabilizado",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_OTR__Contabilizado",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_otr_contabilizado/execution/0040_load_dataset_tb_mx_sc_fact_otr_contabilizado",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_trm_log')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_TRM_LOG",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_trm_log/execution/0010_load_bronze_tb_mx_sc_fact_trm_log",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_TRM_LOG",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_TRM_LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_trm_log/execution/0020_load_silver_tb_mx_sc_fact_trm_log",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_TRM_LOG",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_TRM_LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_trm_log/execution/0030_load_gold_tb_mx_sc_fact_trm_log",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_TRM_LOG",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_TRM_LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_trm_log/execution/0040_load_dataset_tb_mx_sc_fact_trm_log",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_vl06f_con')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_VL06F_CON",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_con/execution/0010_load_bronze_tb_mx_sc_fact_vl06f_con",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_VL06F_CON",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_VL06F_CON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_con/execution/0020_load_silver_tb_mx_sc_fact_vl06f_con",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_VL06F_CON",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_VL06F_CON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_con/execution/0030_load_gold_tb_mx_sc_fact_vl06f_con",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_VL06F_CON",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_VL06F_CON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_con/execution/0040_load_dataset_tb_mx_sc_fact_vl06f_con",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_tabla_vl06f_nac')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inbound TB_MX_SC_FACT_VL06F_NAC",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_nac/execution/0010_load_bronze_tb_mx_sc_fact_vl06f_nac",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Silver TB_MX_SC_FACT_VL06F_NAC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound TB_MX_SC_FACT_VL06F_NAC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_nac/execution/0020_load_silver_tb_mx_sc_fact_vl06f_nac",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Gold TB_MX_SC_FACT_VL06F_NAC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Silver TB_MX_SC_FACT_VL06F_NAC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_nac/execution/0030_load_gold_tb_mx_sc_fact_vl06f_nac",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dataset TB_MX_SC_FACT_VL06F_NAC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Gold TB_MX_SC_FACT_VL06F_NAC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.02:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_vl06f_nac/execution/0040_load_dataset_tb_mx_sc_fact_vl06f_nac",
							"baseParameters": {
								"parFechaExecution": {
									"value": "@pipeline().parameters.parFechaAtual_Carga",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_unzip_flash_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary1_flash_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings"
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary1_flash_source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsla_data-load-tool"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1_flash_source')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_verify_file_sharepoint')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFileVerifyBiling",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFilesBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFilesBiling').output.Value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Sharepoint Biling",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varSHPBilingFilename",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetShpClientIdBiling",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientIDBiling",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecretBiling",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecretBiling",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "FilterFilesBiling",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ReadSharepointFolderBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadSharepointFolderBiling').output['d']['results']",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(\n    startswith(item()['Name'],pipeline().parameters.parFileNameBiling),\n    greaterOrEquals(\n        item()['TimeLastModified'],\n        addToTime(\n            utcnow(),\n            mul(int(pipeline().parameters.parModifiedLastNHoursBiling),-1),\n            'hour'\n        )\n    )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ReadSharepointFolderBiling",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerTokenBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.parShpSiteUrlBiling,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrlBiling,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPathBiling,''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetSharepointBearerTokenBiling').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json;odata=verbose"
							}
						}
					},
					{
						"name": "GetSharepointBearerTokenBiling",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpClientIdBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpSecretBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientIdBiling').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecretBiling').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Search File Version",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Search File Version').output.firstRow.Version,'Atual')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pl_common_shp_copy-sharepointsinglefiletodatalake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_shp_copy-sharepointsinglefiletodatalake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"parFileName": {
												"value": "@variables('varSHPBilingFilename')",
												"type": "Expression"
											},
											"parNewFileName": {
												"value": "@variables('varSHPBilingFilename')",
												"type": "Expression"
											},
											"parUTCNow": {
												"value": "@variables('varUTCNow')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Biling Tipification Delta Table",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "pl_common_shp_copy-sharepointsinglefiletodatalake",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/06_tipification_shp_transfer",
										"baseParameters": {
											"parArchivoNombreAtual": {
												"value": "@activity('Search File Version').output.firstRow.ActualNombreArchivo",
												"type": "Expression"
											},
											"parDateTimeUTC": {
												"value": "@variables('varUTCNow')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Verify File Version",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "VAR UTC NOW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/03_verify_file_version_tipification",
							"baseParameters": {
								"parFileOutputName": {
									"value": "@variables('varSHPBilingFilename')",
									"type": "Expression"
								},
								"parNowDateTimeUTC": {
									"value": "@variables('varUTCNow')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Search File Version",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Verify File Version",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/credit_notes/files_tipification/01_FileVersionControl",
									"par_filename": "FileVersionTipificationControl.csv",
									"par_delimeter": ","
								}
							}
						}
					},
					{
						"name": "VAR UTC NOW",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEachFileVerifyBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUTCNow",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parClientSecretBiling": {
						"type": "String",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-mxbilingrebates/?api-version=7.0"
					},
					"parClientIDBiling": {
						"type": "String",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-mxbilingrebates/?api-version=7.0"
					},
					"parShpSiteUrlBiling": {
						"type": "String",
						"defaultValue": "https://nestle.sharepoint.com/teams/MXFillOutBillingReference"
					},
					"parShpRelativeFolderPathBiling": {
						"type": "String",
						"defaultValue": "Shared Documents/Archivos tipificación"
					},
					"parFileNameBiling": {
						"type": "String",
						"defaultValue": "tipificacion"
					},
					"parModifiedLastNHoursBiling": {
						"type": "String",
						"defaultValue": "200"
					}
				},
				"variables": {
					"varSHPBilingFilename": {
						"type": "String"
					},
					"varSHPTrabajoFilename": {
						"type": "String"
					},
					"varUTCNow": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_csv')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_shp_copy-sharepointsinglefiletodatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_blob_to_blob_atp_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Carpeta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_extdata_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": {
										"value": "@pipeline().parameters.par_Folder",
										"type": "Expression"
									},
									"par_filename": {
										"value": "@pipeline().parameters.par_Archivo_Nombre",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Archivos",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Carpeta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Carpeta').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Archivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Archivos').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Files",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adsl2_extdata_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.par_Folder",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.par_Destination_Folder",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy Files",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl2_extdata_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.par_Folder",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@pipeline().parameters.par_Archivo_Nombre",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@{pipeline().parameters.par_Archivo_Nombre}",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_Folder": {
						"type": "string"
					},
					"par_Archivo_Nombre": {
						"type": "string"
					},
					"par_Destination_Folder": {
						"type": "string"
					}
				},
				"variables": {
					"parPathCopy": {
						"type": "String"
					},
					"parFileNameCopy": {
						"type": "String"
					},
					"parContainer": {
						"type": "String"
					},
					"parPathDestination": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_extdata_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_blob_to_blob_bkup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Carpeta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_extdata_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": {
										"value": "@pipeline().parameters.par_Folder",
										"type": "Expression"
									},
									"par_filename": {
										"value": "@pipeline().parameters.par_Archivo_Nombre",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Archivos",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Carpeta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Carpeta').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Archivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Archivos').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Files",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adsl2_extdata_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.par_Folder",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.par_Destination_Folder",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_Folder": {
						"type": "string"
					},
					"par_Archivo_Nombre": {
						"type": "string"
					},
					"par_Destination_Folder": {
						"type": "string"
					}
				},
				"variables": {
					"parPathCopy": {
						"type": "String"
					},
					"parFileNameCopy": {
						"type": "String"
					},
					"parContainer": {
						"type": "String"
					},
					"parPathDestination": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_extdata_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_daily_DRIVIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@utcnow('dd-MM-yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "name_provider",
										"value": {
											"value": "@item().provedor",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "key_provider",
										"value": {
											"value": "@item().key",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Notebook1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Set variable3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/fernando.vazquez1@mx.nestle.com/DatabricksMX/sl_extras_dev/Rest_API/Drivin_API/execution/DRIVINAPI_1",
										"baseParameters": {
											"end_date": {
												"value": "@variables('start_date')",
												"type": "Expression"
											},
											"key_provider": {
												"value": "@variables('key_provider')",
												"type": "Expression"
											},
											"startdate": {
												"value": "@variables('start_date')",
												"type": "Expression"
											},
											"name_provider": {
												"value": "@variables('name_provider')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"key_provider": {
						"type": "String"
					},
					"name_provider": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_datasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.Area",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Catalogs",
									"activities": [
										{
											"name": "Notebook1",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/Production/DatabricksMX/sl_palantir_copy/000_materialize_catalogs"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "Nesmovil",
									"activities": [
										{
											"name": "Notebook2",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/Production/DatabricksMX/sl_palantir_copy/003_materialize_nesmovil"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "Sindicadas",
									"activities": [
										{
											"name": "Notebook5",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/Production/DatabricksMX/sl_palantir_copy/005_materialize_sindicadas_unificadas"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "SellIn",
									"activities": [
										{
											"name": "Notebook3",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/Production/DatabricksMX/sl_palantir_copy/001_materialize_sellin"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "SellOut",
									"activities": [
										{
											"name": "Notebook4",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/Production/DatabricksMX/sl_palantir_copy/002_materialize_sellout"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_palantir"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_rpa_files_inbound')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Carpeta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sc_nmex_devorigmx_generic",
								"type": "DatasetReference",
								"parameters": {
									"par_container": {
										"value": "@pipeline().parameters.par_container",
										"type": "Expression"
									},
									"par_diretorio": {
										"value": "@pipeline().parameters.par_diretorio",
										"type": "Expression"
									},
									"par_arquivo": {
										"value": "@pipeline().parameters.par_arquivo",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Archivos Hoy",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Carpeta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Carpeta').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Archivos Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Archivos Hoy').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete Files",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.par_diretorio",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_container": {
						"type": "string"
					},
					"par_diretorio": {
						"type": "string"
					},
					"par_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sc_nmex_devorigmx_generic')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_drivin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable DRIVIN",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/pods?start_date=',pipeline().parameters.par_stardate,'&end_date=',pipeline().parameters.par_enddate)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{}",
								"additionalHeaders": {
									"Content-type": {
										"value": "@pipeline().parameters.par_header_content_type",
										"type": "Expression"
									},
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_','.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'DRIVIN')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Vehicles",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_vehiculos",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/vehicles')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Vehicles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Vehicles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": "bbf7fb1a-d859-46a1-a615-b861ed0e7e49",
									"Content-Type": {
										"value": "@pipeline().parameters.par_header_content_type",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_vehiculos')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_VEHICLES_','.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'VEHICLES')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Esquemas",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_esquemas",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/schemas')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Esquemas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Esquemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": "bbf7fb1a-d859-46a1-a615-b861ed0e7e49",
									"Content-Type": "application/json"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_esquemas')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_ESQUEMAS_','.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'ESQUEMAS')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Results",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_results",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/results?date=',pipeline().parameters.par_enddate)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Results",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									},
									"Content-Type": {
										"value": "@pipeline().parameters.par_header_content_type",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_results')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_RESULTS_','.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'RESULTS')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)','yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable DRIVIN Addresses",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_addresses",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/addresses')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Addresses",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Addresses",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-type": {
										"value": "@pipeline().parameters.par_header_content_type",
										"type": "Expression"
									},
									"X-API-Key": "4c2468a0-381c-443a-b8de-9caff69f050c"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_addresses')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_ADDRESSES_','.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'ADDRESSES')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Routes",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_rutas",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/routes?date=',pipeline().parameters.par_enddate)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Routes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Routes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_rutas')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_ROUTES_','.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'ROUTES')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string",
						"defaultValue": "https://external.driv.in/"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/DRIVIN/"
					},
					"par_url_login": {
						"type": "string",
						"defaultValue": "https://central.cevisur.com.mx:8443/nestle/api/auth/login"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_results": {
						"type": "String"
					},
					"var_driv_esquemas": {
						"type": "String"
					},
					"var_driv_clientes": {
						"type": "String"
					},
					"var_driv_addresses": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sc_drivin/HistoricoDrivIn"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-17T16:07:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_origenes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Supplier",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Set variable RIVERA Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Ventas.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable RIVERA Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Inventario.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Set variable NIETO Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=VENTAS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_inventarios",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=INVENTARIOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Clientes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=CLIENTES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Productos",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_productos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=PRODUCTOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_productos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.23:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:05:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_inventarios')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable NIETO Almacenes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_almacenes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=ALMACENES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Almacenes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Almacenes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_almacenes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_ALMACENES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'ALMACENES')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Execute Pipeline Drivin",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_extract_api_origenes_drivin",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"par_url": {
														"value": "@pipeline().parameters.par_url",
														"type": "Expression"
													},
													"par_stardate": {
														"value": "@pipeline().parameters.par_stardate",
														"type": "Expression"
													},
													"par_enddate": {
														"value": "@pipeline().parameters.par_enddate",
														"type": "Expression"
													},
													"par_header_content_type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													},
													"par_header_key": {
														"value": "@pipeline().parameters.par_header_key",
														"type": "Expression"
													},
													"FileName": {
														"value": "@pipeline().parameters.FileName",
														"type": "Expression"
													},
													"par_cont": {
														"value": "@pipeline().parameters.par_cont",
														"type": "Expression"
													},
													"par_folder": {
														"value": "@pipeline().parameters.par_folder",
														"type": "Expression"
													},
													"par_url_login": {
														"value": "@pipeline().parameters.par_url_login",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Set variable CEVISUR Token",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "CEVISUR Login",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_login",
												"value": {
													"value": "@activity('CEVISUR Login').output.token",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Ventas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/pedidos/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Inventarios",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/inventario/existencias/actuales')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Clientes",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/clientes/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Productos",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_produtos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/articulos')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "CEVISUR Login",
											"type": "WebActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"url": {
													"value": "@pipeline().parameters.par_url_login",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {
													"Content-type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													}
												},
												"body": {
													"username": "0PM067",
													"password": "5P%LZ19xeM%v"
												}
											}
										},
										{
											"name": "Copy CEVISUR Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable CEVISUR Facturas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_facturas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/facturas/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy CEVISUR Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_produtos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Facturas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Facturas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_facturas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_FACTURAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'FACTURAS')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Unknown Provider",
									"description": "Return if no URL is found.",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch Bronze Layer",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Switch Supplier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Notebook Load NIETO Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_nieto",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "NIETO",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Notebook RIVERA Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_rivera",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "RIVERA",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Notebook Load DRIVIN Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_drivin",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "DRIVIN",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Notebook Load CEVISUR Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_cevisur",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "CEVISUR",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/PROVIDER/"
					},
					"par_url_login": {
						"type": "string",
						"defaultValue": "https://central.cevisur.com.mx:8443/nestle/api/auth/login"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_grupo_vehiculos": {
						"type": "String"
					},
					"var_nie_almacenes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/API_Web"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]",
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_origenes_drivin')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_origenes_BKP_2023-04-20')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Supplier",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Set variable RIVERA Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Ventas.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable RIVERA Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Inventario.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Set variable NIETO Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=VENTAS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_inventarios",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=INVENTARIO&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Clientes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=CLIENTES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Productos",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_productos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=PRODUCTOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_productos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_inventarios')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Execute Pipeline Drivin",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_extract_api_origenes_drivin",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"par_url": {
														"value": "@pipeline().parameters.par_url",
														"type": "Expression"
													},
													"par_stardate": {
														"value": "@pipeline().parameters.par_stardate",
														"type": "Expression"
													},
													"par_enddate": {
														"value": "@pipeline().parameters.par_enddate",
														"type": "Expression"
													},
													"par_header_content_type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													},
													"par_header_key": {
														"value": "@pipeline().parameters.par_header_key",
														"type": "Expression"
													},
													"FileName": {
														"value": "@pipeline().parameters.FileName",
														"type": "Expression"
													},
													"par_cont": {
														"value": "@pipeline().parameters.par_cont",
														"type": "Expression"
													},
													"par_folder": {
														"value": "@pipeline().parameters.par_folder",
														"type": "Expression"
													},
													"par_url_login": {
														"value": "@pipeline().parameters.par_url_login",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Set variable CEVISUR Token",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "CEVISUR Login",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_login",
												"value": {
													"value": "@activity('CEVISUR Login').output.token",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Ventas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/pedidos/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Inventarios",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/inventario/existencias/actuales')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Clientes",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/clientes/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Productos",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_produtos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/articulos')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "CEVISUR Login",
											"type": "WebActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"url": {
													"value": "@pipeline().parameters.par_url_login",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {
													"Content-type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													}
												},
												"body": {
													"username": "0PM067",
													"password": "5P%LZ19xeM%v"
												}
											}
										},
										{
											"name": "Copy CEVISUR Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable CEVISUR Facturas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_facturas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/facturas/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy CEVISUR Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_produtos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Facturas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Facturas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_facturas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_FACTURAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'FACTURAS')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Unknown Provider",
									"description": "Return if no URL is found.",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch Bronze Layer",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Switch Supplier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Notebook Load NIETO Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_nieto",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "NIETO",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Notebook RIVERA Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_rivera",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "RIVERA",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Notebook Load DRIVIN Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_drivin",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "DRIVIN",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Notebook Load CEVISUR Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_cevisur",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "CEVISUR",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/PROVIDER/"
					},
					"par_url_login": {
						"type": "string",
						"defaultValue": "https://central.cevisur.com.mx:8443/nestle/api/auth/login"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_grupo_vehiculos": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/API_Web"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]",
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_origenes_drivin')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_origenes_drivin')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable DRIVIN",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/pods?start_date=',pipeline().parameters.par_stardate,'&end_date=',pipeline().parameters.par_enddate)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{}",
								"additionalHeaders": {
									"Content-type": {
										"value": "@pipeline().parameters.par_header_content_type",
										"type": "Expression"
									},
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_',variables('var_set_fecha_hoy'),'.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'DRIVIN')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Vehicles",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_vehiculos",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/vehicles')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Vehicles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Vehicles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_vehiculos')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_VEHICLES',variables('var_set_fecha_hoy'),'.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'VEHICLES')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Esquemas",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_esquemas",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/schemas')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Esquemas",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Esquemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_esquemas')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_ESQUEMAS_',variables('var_set_fecha_hoy'),'.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'ESQUEMAS')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Grupos Vehicles",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_grupo_vehiculos",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/vehicles')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Grupo Vehicles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Grupos Vehicles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_grupo_vehiculos')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_GRUPO_VEHICLES_',variables('var_set_fecha_hoy'),'.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'GRUPO_VEHICLES')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Direccion",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_direccion",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/addresses')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Grupo Direccion",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Direccion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_direccion')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_DIRECCIONES_',variables('var_set_fecha_hoy'),'.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'DIRECCIONES')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable DRIVIN Clientes",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_driv_clientes",
							"value": {
								"value": "@concat(pipeline().parameters.par_url,'api/external/v2/v2/clients')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy DrivIn Clientes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable DRIVIN Clientes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{}",
								"additionalHeaders": {
									"Content-type": {
										"value": "@pipeline().parameters.par_header_content_type",
										"type": "Expression"
									},
									"X-API-Key": {
										"value": "@pipeline().parameters.par_header_key",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ar_rest_api_generic_auth",
								"type": "DatasetReference",
								"parameters": {
									"par_url_complete": {
										"value": "@variables('var_driv_clientes')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "json_api_web",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.FileName,'_DRIVIN_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
										"type": "Expression"
									},
									"ContName": {
										"value": "@pipeline().parameters.par_cont",
										"type": "Expression"
									},
									"FoldPath": {
										"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string",
						"defaultValue": "https://external.driv.in/"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/DRIVIN/"
					},
					"par_url_login": {
						"type": "string",
						"defaultValue": "https://central.cevisur.com.mx:8443/nestle/api/auth/login"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_grupo_vehiculos": {
						"type": "String"
					},
					"var_driv_esquemas": {
						"type": "String"
					},
					"var_driv_clientes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/API_Web"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_tablas_inb_outb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Date UTC",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha Ayer 00",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_final_date",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),'yyyy-MM-dd hh:mm')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Date UTC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date_ext",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "web api auth",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.par_url",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "web api auth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.par_tabla",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "OUTBOUND_LIVE",
									"activities": [
										{
											"name": "api_web API FECHA_EN_PLAN_COPY_01",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_01",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['truck']['eco']"
															},
															"sink": {
																"name": "truck_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['unity']"
															},
															"sink": {
																"name": "unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['type_unity']"
															},
															"sink": {
																"name": "type_unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['ARRIVE_SOURCE_TRUCK']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRUCK",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['box']"
															},
															"sink": {
																"name": "box",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['note']"
															},
															"sink": {
																"name": "note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['notes']"
															},
															"sink": {
																"name": "source_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['date']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['user']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_plan_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_plan_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['date']"
															},
															"sink": {
																"name": "source_src_track_EXIT_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['user']"
															},
															"sink": {
																"name": "source_src_track_EXIT_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['date']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['user']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['user']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['user']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRUCK']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRUCK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['date']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['user']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRAILER']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRAILER_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['notes']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['driver_exit']"
															},
															"sink": {
																"name": "source_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal']"
															},
															"sink": {
																"name": "seal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['layout']"
															},
															"sink": {
																"name": "layout",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal_type']"
															},
															"sink": {
																"name": "seal_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['box_picking']"
															},
															"sink": {
																"name": "box_picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_chep']"
															},
															"sink": {
																"name": "platform_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_white']"
															},
															"sink": {
																"name": "platform_white",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['warehouse_note']"
															},
															"sink": {
																"name": "warehouse_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['is_committee_priority']"
															},
															"sink": {
																"name": "is_committee_priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['date_invoice']"
															},
															"sink": {
																"name": "date_invoice",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['convenio_chep']"
															},
															"sink": {
																"name": "convenio_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['main_location']"
															},
															"sink": {
																"name": "main_location",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['with_document']"
															},
															"sink": {
																"name": "with_document",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['valuation_note']"
															},
															"sink": {
																"name": "valuation_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['client']"
															},
															"sink": {
																"name": "client",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['shipto']"
															},
															"sink": {
																"name": "shipto",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['user']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['ENTRANCE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_ENTRANCE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENT_GPS']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENT_GPS_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['END_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_END_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['START_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_START_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DESTINY_ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DESTINY_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['population']"
															},
															"sink": {
																"name": "population",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['driver_exit']"
															},
															"sink": {
																"name": "destiny_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['gross_weight']"
															},
															"sink": {
																"name": "gross_weight",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "trailer_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['plate']"
															},
															"sink": {
																"name": "plate",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_user']"
															},
															"sink": {
																"name": "assing_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_trailer']"
															},
															"sink": {
																"name": "assing_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['trailer_update']"
															},
															"sink": {
																"name": "trailer_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_date_trailer']"
															},
															"sink": {
																"name": "update_date_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_user_trailer']"
															},
															"sink": {
																"name": "update_user_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['ARRIVE_SOURCE_TRAILER']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRAILER",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['semaforo']"
															},
															"sink": {
																"name": "semaforo",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['user']"
															},
															"sink": {
																"name": "supplier_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['last_company_update']"
															},
															"sink": {
																"name": "last_company_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['deliveries']"
															},
															"sink": {
																"name": "deliveries",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['confirmation']"
															},
															"sink": {
																"name": "confirmation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supply_chain']"
															},
															"sink": {
																"name": "supply_chain",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'OUTBOUND_LIVE_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('OUTBOUND_LIVE_01_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										},
										{
											"name": "Set URL Complete with Token_01",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 01",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 01",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_01'),'\",\"final_date\":\"', variables('var_fecha_hoy'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"',pipeline().parameters.par_status,'\",\"initial_date\":\"',variables('var_fecha_01'),'\",\"final_date\":\"', variables('var_fecha_hoy'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 02",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "api_web API FECHA_EN_PLAN_COPY_01",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters_02",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_02'),'\",\"final_date\":\"', variables('var_fecha_01'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"',pipeline().parameters.par_status,'\",\"initial_date\":\"',variables('var_fecha_02'),'\",\"final_date\":\"', variables('var_fecha_01'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 03",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "api_web API FECHA_EN_PLAN_COPY_02",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters_03",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"DESPACHO_REAL\",\"initial_date\":\"',variables('var_fecha_hoy'),'\",\"final_date\":\"', variables('var_fecha_hoy_02'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"DESPACHO_REAL\",\"initial_date\":\"',variables('var_fecha_hoy'),'\",\"final_date\":\"', variables('var_fecha_hoy_02'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set URL Complete with Token_02",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 02",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete_02",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters_02'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set URL Complete with Token_03",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 03",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete_03",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters_03'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "api_web API FECHA_EN_PLAN_COPY_02",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_02",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['truck']['eco']"
															},
															"sink": {
																"name": "truck_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['unity']"
															},
															"sink": {
																"name": "unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['type_unity']"
															},
															"sink": {
																"name": "type_unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['ARRIVE_SOURCE_TRUCK']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRUCK",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['box']"
															},
															"sink": {
																"name": "box",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['note']"
															},
															"sink": {
																"name": "note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['notes']"
															},
															"sink": {
																"name": "source_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['date']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['user']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_plan_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_plan_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['date']"
															},
															"sink": {
																"name": "source_src_track_EXIT_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['user']"
															},
															"sink": {
																"name": "source_src_track_EXIT_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['date']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['user']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['user']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['user']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRUCK']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRUCK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['date']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['user']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRAILER']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRAILER_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['notes']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['driver_exit']"
															},
															"sink": {
																"name": "source_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal']"
															},
															"sink": {
																"name": "seal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['layout']"
															},
															"sink": {
																"name": "layout",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal_type']"
															},
															"sink": {
																"name": "seal_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['box_picking']"
															},
															"sink": {
																"name": "box_picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_chep']"
															},
															"sink": {
																"name": "platform_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_white']"
															},
															"sink": {
																"name": "platform_white",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['warehouse_note']"
															},
															"sink": {
																"name": "warehouse_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['is_committee_priority']"
															},
															"sink": {
																"name": "is_committee_priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['date_invoice']"
															},
															"sink": {
																"name": "date_invoice",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['convenio_chep']"
															},
															"sink": {
																"name": "convenio_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['main_location']"
															},
															"sink": {
																"name": "main_location",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['with_document']"
															},
															"sink": {
																"name": "with_document",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['valuation_note']"
															},
															"sink": {
																"name": "valuation_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['client']"
															},
															"sink": {
																"name": "client",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['shipto']"
															},
															"sink": {
																"name": "shipto",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['user']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['ENTRANCE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_ENTRANCE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENT_GPS']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENT_GPS_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['END_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_END_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['START_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_START_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DESTINY_ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DESTINY_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['population']"
															},
															"sink": {
																"name": "population",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['driver_exit']"
															},
															"sink": {
																"name": "destiny_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['gross_weight']"
															},
															"sink": {
																"name": "gross_weight",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "trailer_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['plate']"
															},
															"sink": {
																"name": "plate",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_user']"
															},
															"sink": {
																"name": "assing_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_trailer']"
															},
															"sink": {
																"name": "assing_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['trailer_update']"
															},
															"sink": {
																"name": "trailer_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_date_trailer']"
															},
															"sink": {
																"name": "update_date_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_user_trailer']"
															},
															"sink": {
																"name": "update_user_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['ARRIVE_SOURCE_TRAILER']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRAILER",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['semaforo']"
															},
															"sink": {
																"name": "semaforo",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['user']"
															},
															"sink": {
																"name": "supplier_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['last_company_update']"
															},
															"sink": {
																"name": "last_company_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['deliveries']"
															},
															"sink": {
																"name": "deliveries",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['confirmation']"
															},
															"sink": {
																"name": "confirmation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supply_chain']"
															},
															"sink": {
																"name": "supply_chain",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete_02')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'OUTBOUND_LIVE_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('OUTBOUND_LIVE_02_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										},
										{
											"name": "api_web API FECHA_EN_PLAN_COPY_03",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_03",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['truck']['eco']"
															},
															"sink": {
																"name": "truck_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['unity']"
															},
															"sink": {
																"name": "unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['type_unity']"
															},
															"sink": {
																"name": "type_unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['ARRIVE_SOURCE_TRUCK']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRUCK",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['box']"
															},
															"sink": {
																"name": "box",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['note']"
															},
															"sink": {
																"name": "note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['notes']"
															},
															"sink": {
																"name": "source_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['date']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['user']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_plan_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_plan_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['date']"
															},
															"sink": {
																"name": "source_src_track_EXIT_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['user']"
															},
															"sink": {
																"name": "source_src_track_EXIT_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['date']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['user']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['user']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['user']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRUCK']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRUCK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['date']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['user']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRAILER']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRAILER_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['notes']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['driver_exit']"
															},
															"sink": {
																"name": "source_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal']"
															},
															"sink": {
																"name": "seal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['layout']"
															},
															"sink": {
																"name": "layout",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal_type']"
															},
															"sink": {
																"name": "seal_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['box_picking']"
															},
															"sink": {
																"name": "box_picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_chep']"
															},
															"sink": {
																"name": "platform_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_white']"
															},
															"sink": {
																"name": "platform_white",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['warehouse_note']"
															},
															"sink": {
																"name": "warehouse_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['is_committee_priority']"
															},
															"sink": {
																"name": "is_committee_priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['date_invoice']"
															},
															"sink": {
																"name": "date_invoice",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['convenio_chep']"
															},
															"sink": {
																"name": "convenio_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['main_location']"
															},
															"sink": {
																"name": "main_location",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['with_document']"
															},
															"sink": {
																"name": "with_document",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['valuation_note']"
															},
															"sink": {
																"name": "valuation_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['client']"
															},
															"sink": {
																"name": "client",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['shipto']"
															},
															"sink": {
																"name": "shipto",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['user']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['ENTRANCE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_ENTRANCE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENT_GPS']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENT_GPS_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['END_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_END_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['START_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_START_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DESTINY_ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DESTINY_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['population']"
															},
															"sink": {
																"name": "population",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['driver_exit']"
															},
															"sink": {
																"name": "destiny_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['gross_weight']"
															},
															"sink": {
																"name": "gross_weight",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "trailer_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['plate']"
															},
															"sink": {
																"name": "plate",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_user']"
															},
															"sink": {
																"name": "assing_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_trailer']"
															},
															"sink": {
																"name": "assing_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['trailer_update']"
															},
															"sink": {
																"name": "trailer_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_date_trailer']"
															},
															"sink": {
																"name": "update_date_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_user_trailer']"
															},
															"sink": {
																"name": "update_user_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['ARRIVE_SOURCE_TRAILER']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRAILER",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['semaforo']"
															},
															"sink": {
																"name": "semaforo",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['user']"
															},
															"sink": {
																"name": "supplier_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['last_company_update']"
															},
															"sink": {
																"name": "last_company_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['deliveries']"
															},
															"sink": {
																"name": "deliveries",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['confirmation']"
															},
															"sink": {
																"name": "confirmation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supply_chain']"
															},
															"sink": {
																"name": "supply_chain",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete_03')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'OUTBOUND_LIVE_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('OUTBOUND_LIVE_03_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										}
									]
								},
								{
									"value": "INBOUND_LIVE",
									"activities": [
										{
											"name": "api_web API FECHA_CREACION_COPY_01_IN",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_01_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['date_gi']"
															},
															"sink": {
																"name": "date_gi",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['STAY']['hours']"
															},
															"sink": {
																"name": "hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['RAMP_ON']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_RAMP_ON_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['rcontrol']"
															},
															"sink": {
																"name": "rcontrol",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ON_DOWNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ON_DOWNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DOWNLOAD_ON_CUSTOM_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['user']"
															},
															"sink": {
																"name": "user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['STO']"
															},
															"sink": {
																"name": "STO",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['notes']"
															},
															"sink": {
																"name": "notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['picking']"
															},
															"sink": {
																"name": "picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['number_chep']"
															},
															"sink": {
																"name": "number_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['seal_number']"
															},
															"sink": {
																"name": "seal_number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['temperature']"
															},
															"sink": {
																"name": "temperature",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['box_type']"
															},
															"sink": {
																"name": "box_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['circuit_name']"
															},
															"sink": {
																"name": "circuit_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'INBOUND_LIVE_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('INBOUND_LIVE_01_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										},
										{
											"name": "Set URL Complete with Token_01_IN",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 01_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 01_IN",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_01'),'\",\"final_date\":\"', variables('var_fecha_hoy'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"',pipeline().parameters.par_status,'\",\"initial_date\":\"',variables('var_fecha_01'),'\",\"final_date\":\"', variables('var_fecha_hoy'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 02_IN",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "api_web API FECHA_CREACION_COPY_01_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters_02",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_02'),'\",\"final_date\":\"', variables('var_fecha_01'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"',pipeline().parameters.par_status,'\",\"initial_date\":\"',variables('var_fecha_02'),'\",\"final_date\":\"', variables('var_fecha_01'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 03_IN",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "api_web API FECHA_CREACION_COPY_02_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters_03",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_02'),'\",\"final_date\":\"', variables('var_fecha_01'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"SI9\",\"initial_date\":\"',variables('var_fecha_02'),'\",\"final_date\":\"', variables('var_fecha_01'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set URL Complete with Token_02_IN",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 02_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete_02",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters_02'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set URL Complete with Token_03_copy1",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 03_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete_03",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters_03'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "api_web API FECHA_CREACION_COPY_02_IN",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_02_IN",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['date_gi']"
															},
															"sink": {
																"name": "date_gi",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['STAY']['hours']"
															},
															"sink": {
																"name": "hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['RAMP_ON']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_RAMP_ON_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['rcontrol']"
															},
															"sink": {
																"name": "rcontrol",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ON_DOWNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ON_DOWNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DOWNLOAD_ON_CUSTOM_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['user']"
															},
															"sink": {
																"name": "user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['STO']"
															},
															"sink": {
																"name": "STO",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['notes']"
															},
															"sink": {
																"name": "notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['picking']"
															},
															"sink": {
																"name": "picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['number_chep']"
															},
															"sink": {
																"name": "number_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['seal_number']"
															},
															"sink": {
																"name": "seal_number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['temperature']"
															},
															"sink": {
																"name": "temperature",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['box_type']"
															},
															"sink": {
																"name": "box_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['circuit_name']"
															},
															"sink": {
																"name": "circuit_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete_02')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'INBOUND_LIVE_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('INBOUND_LIVE_02_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										},
										{
											"name": "api_web API FECHA_CREACION_COPY_03_IN",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_03_copy1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['date_gi']"
															},
															"sink": {
																"name": "date_gi",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['STAY']['hours']"
															},
															"sink": {
																"name": "hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['RAMP_ON']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_RAMP_ON_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['rcontrol']"
															},
															"sink": {
																"name": "rcontrol",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ON_DOWNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ON_DOWNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DOWNLOAD_ON_CUSTOM_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['user']"
															},
															"sink": {
																"name": "user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['STO']"
															},
															"sink": {
																"name": "STO",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['notes']"
															},
															"sink": {
																"name": "notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['picking']"
															},
															"sink": {
																"name": "picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['number_chep']"
															},
															"sink": {
																"name": "number_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['seal_number']"
															},
															"sink": {
																"name": "seal_number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['temperature']"
															},
															"sink": {
																"name": "temperature",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['box_type']"
															},
															"sink": {
																"name": "box_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['circuit_name']"
															},
															"sink": {
																"name": "circuit_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete_03')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'INBOUND_LIVE_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('INBOUND_LIVE_03_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										}
									]
								},
								{
									"value": "OUTBOUND_HISTORICO",
									"activities": [
										{
											"name": "api_web API DESPACHO_REAL_HIST_COPY_01",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_01_H",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['truck']['eco']"
															},
															"sink": {
																"name": "truck_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['unity']"
															},
															"sink": {
																"name": "unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['type_unity']"
															},
															"sink": {
																"name": "type_unity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['truck']['ARRIVE_SOURCE_TRUCK']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRUCK",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['box']"
															},
															"sink": {
																"name": "box",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['note']"
															},
															"sink": {
																"name": "note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['notes']"
															},
															"sink": {
																"name": "source_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['date']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['CREATED']['user']"
															},
															"sink": {
																"name": "source_src_plan_CREATED_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_plan_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITH_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITH_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_plan_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['date']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_plan']['WITHOUT_DOC']['user']"
															},
															"sink": {
																"name": "source_src_plan_WITHOUT_DOC_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['date']"
															},
															"sink": {
																"name": "source_src_track_EXIT_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['EXIT']['user']"
															},
															"sink": {
																"name": "source_src_track_EXIT_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['date']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['INVOICE']['user']"
															},
															"sink": {
																"name": "source_src_track_INVOICE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['date']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DISPATCH']['user']"
															},
															"sink": {
																"name": "source_src_track_DISPATCH_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ENTRANCE']['user']"
															},
															"sink": {
																"name": "source_src_track_ENTRANCE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_END']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRUCK']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRUCK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['date']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['LOAD_START']['user']"
															},
															"sink": {
																"name": "source_src_track_LOAD_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['date']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['ARRIVE_DESK']['user']"
															},
															"sink": {
																"name": "source_src_track_ARRIVE_DESK_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['DESK_TRAILER']['date']"
															},
															"sink": {
																"name": "source_src_track_DESK_TRAILER_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['notes']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_END_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_END']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['date']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['src_track']['PREPARATION_START']['user']"
															},
															"sink": {
																"name": "source_src_track_PREPARATION_START_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['driver_exit']"
															},
															"sink": {
																"name": "source_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal']"
															},
															"sink": {
																"name": "seal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['layout']"
															},
															"sink": {
																"name": "layout",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['seal_type']"
															},
															"sink": {
																"name": "seal_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['box_picking']"
															},
															"sink": {
																"name": "box_picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_chep']"
															},
															"sink": {
																"name": "platform_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['platform_white']"
															},
															"sink": {
																"name": "platform_white",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['warehouse_note']"
															},
															"sink": {
																"name": "warehouse_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['preparation']['is_committee_priority']"
															},
															"sink": {
																"name": "is_committee_priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['date_invoice']"
															},
															"sink": {
																"name": "date_invoice",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['convenio_chep']"
															},
															"sink": {
																"name": "convenio_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['main_location']"
															},
															"sink": {
																"name": "main_location",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['with_document']"
															},
															"sink": {
																"name": "with_document",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['source']['valuation_note']"
															},
															"sink": {
																"name": "valuation_note",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['client']"
															},
															"sink": {
																"name": "client",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['shipto']"
															},
															"sink": {
																"name": "shipto",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['UPDATE_DATE']['user']"
															},
															"sink": {
																"name": "destiny_dst_plan_UPDATE_DATE_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_plan']['ENTRANCE_DATE']['date']"
															},
															"sink": {
																"name": "destiny_dst_plan_ENTRANCE_DATE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENT_GPS']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENT_GPS_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['END_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_END_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['START_UNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_START_UNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DESTINY_ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DESTINY_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['population']"
															},
															"sink": {
																"name": "population",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['driver_exit']"
															},
															"sink": {
																"name": "destiny_driver_exit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['gross_weight']"
															},
															"sink": {
																"name": "gross_weight",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "trailer_eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['plate']"
															},
															"sink": {
																"name": "plate",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_user']"
															},
															"sink": {
																"name": "assing_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['assing_trailer']"
															},
															"sink": {
																"name": "assing_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['trailer_update']"
															},
															"sink": {
																"name": "trailer_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_date_trailer']"
															},
															"sink": {
																"name": "update_date_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['update_user_trailer']"
															},
															"sink": {
																"name": "update_user_trailer",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['ARRIVE_SOURCE_TRAILER']"
															},
															"sink": {
																"name": "ARRIVE_SOURCE_TRAILER",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['semaforo']"
															},
															"sink": {
																"name": "semaforo",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['user']"
															},
															"sink": {
																"name": "supplier_user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['last_company_update']"
															},
															"sink": {
																"name": "last_company_update",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['deliveries']"
															},
															"sink": {
																"name": "deliveries",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['confirmation']"
															},
															"sink": {
																"name": "confirmation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supply_chain']"
															},
															"sink": {
																"name": "supply_chain",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'OUTBOUND_HISTORICO_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('OUTBOUND_HISTORICO_01_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										},
										{
											"name": "Set URL Complete with Token_01_H",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 01_H",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 01_H",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_ayer_00'),'\",\"final_date\":\"', variables('var_fecha_ayer_23'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"',pipeline().parameters.par_status,'\",\"initial_date\":\"',variables('var_fecha_ayer_00'),'\",\"final_date\":\"', variables('var_fecha_ayer_23'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "INBOUND_HISTORICO",
									"activities": [
										{
											"name": "api_web API FIN_DESCARGA_HIST_COPY_01_copy1",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set URL Complete with Token_01_H_copy1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "POST",
													"requestBody": "{}"
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "$['source']['location_name']"
															},
															"sink": {
																"name": "location_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['date_gi']"
															},
															"sink": {
																"name": "date_gi",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny']"
															},
															"sink": {
																"name": "destiny",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['STAY']['hours']"
															},
															"sink": {
																"name": "hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['RAMP_ON']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_RAMP_ON_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ENTRANCE_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ENTRANCE']['rcontrol']"
															},
															"sink": {
																"name": "rcontrol",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['ON_DOWNLOAD']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_ON_DOWNLOAD_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['date']"
															},
															"sink": {
																"name": "destiny_dst_track_DOWNLOAD_ON_CUSTOM_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['dst_track']['DOWNLOAD_ON_CUSTOM']['user']"
															},
															"sink": {
																"name": "user",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['STO']"
															},
															"sink": {
																"name": "STO",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['ramp']"
															},
															"sink": {
																"name": "ramp",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['notes']"
															},
															"sink": {
																"name": "notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['auditor']"
															},
															"sink": {
																"name": "auditor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['customs']"
															},
															"sink": {
																"name": "customs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['picking']"
															},
															"sink": {
																"name": "picking",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['coworker']"
															},
															"sink": {
																"name": "coworker",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['number_chep']"
															},
															"sink": {
																"name": "number_chep",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['seal_number']"
															},
															"sink": {
																"name": "seal_number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['temperature']"
															},
															"sink": {
																"name": "temperature",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_rack']"
															},
															"sink": {
																"name": "pallets_rack",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['destiny']['destiny_complement']['pallets_block']"
															},
															"sink": {
																"name": "pallets_block",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['eco']"
															},
															"sink": {
																"name": "eco",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['trailer']['box_type']"
															},
															"sink": {
																"name": "box_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['carga_tm']"
															},
															"sink": {
																"name": "carga_tm",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['supplier']['company_name']"
															},
															"sink": {
																"name": "company_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['circuit_name']"
															},
															"sink": {
																"name": "circuit_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['type_operation']"
															},
															"sink": {
																"name": "type_operation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['grupo_comercial']"
															},
															"sink": {
																"name": "grupo_comercial",
																"type": "String"
															}
														}
													],
													"collectionReference": ""
												}
											},
											"inputs": [
												{
													"referenceName": "nmex_rest_dataset_api",
													"type": "DatasetReference",
													"parameters": {
														"url_dataset_post_rest_api": {
															"value": "@variables('url_complete')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_adsl2_origenesmx_csv",
													"type": "DatasetReference",
													"parameters": {
														"par_directory": {
															"value": "@concat(pipeline().parameters.par_folder,'INBOUND_HISTORICO_ARCHIVOS/',variables('var_final_date'),'/')",
															"type": "Expression"
														},
														"par_filename": {
															"value": "@concat('INBOUND_HISTORICO_01_',pipeline().parameters.par_search_type,'_',variables('date_ext'),'.csv')",
															"type": "Expression"
														},
														"par_delimeter": ","
													}
												}
											]
										},
										{
											"name": "Set URL Complete with Token_01_H_copy1",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set Parameters Copy 01_H_copy1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "url_complete",
												"value": {
													"value": "@concat(pipeline().parameters.par_url_base,pipeline().parameters.par_function,'?token=',activity('web api auth').output.token,'&parameters=',variables('var_parameters'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Parameters Copy 01_H_copy1",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_parameters",
												"value": {
													"value": "@if(empty(pipeline().parameters.par_status),\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"initial_date\":\"',variables('var_fecha_ayer_00'),'\",\"final_date\":\"', variables('var_fecha_ayer_23'),'\"}}')\n    ,\n    concat('{\"search_filters\": {\"search_type\":\"',pipeline().parameters.par_search_type,'\",\"status\":\"',pipeline().parameters.par_status,'\",\"initial_date\":\"',variables('var_fecha_ayer_00'),'\",\"final_date\":\"', variables('var_fecha_ayer_23'),'\"}}')\n    )",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Fecha Ayer 00",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fecha Ayer 23",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_ayer_00",
							"value": {
								"value": "@formatDateTime(adddays(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),-1),'yyyy-MM-dd 00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha Ayer 23",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Fecha Hoy_02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_ayer_23",
							"value": {
								"value": "@formatDateTime(adddays(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),-1),'yyyy-MM-dd 23:59')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Fecha 01",
						"description": "Fecha 01 = Fecha Actual - 14 Dias",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_01",
							"value": {
								"value": "@formatDateTime(adddays(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),-14),'yyyy-MM-dd 00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Fecha 02",
						"description": "Fecha 02 = Fecha 01 - 14 Dias",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Fecha 01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_02",
							"value": {
								"value": "@formatDateTime(adddays(variables('var_fecha_01'),-14),'yyyy-MM-dd 00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Fecha 03",
						"description": "Fecha 03 = Hoy",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Fecha 02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_03",
							"value": {
								"value": "@formatDateTime(adddays(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),-1),'yyyy-MM-dd 23:59')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Fecha Hoy",
						"description": "Fecha Hoy = Hoy 23:59",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Fecha 03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_hoy",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),'yyyy-MM-dd 00:00')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Fecha Hoy_02",
						"description": "Fecha Hoy = Hoy 23:59",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_fecha_hoy_02",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(),'UTC','Central Standard Time (Mexico)'),'yyyy-MM-dd 23:59')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Carga Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_tablas_api_inb_out_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFechaExec": {
									"value": "@variables('var_final_date')",
									"type": "Expression"
								},
								"parFechaTabla": {
									"value": "@pipeline().parameters.par_tabla",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Error Auth",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "web api auth",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocorreu um Erro na Autenticação da API",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE API",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@concat('Auth API - ',pipeline().parameters.par_tabla)",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('var_final_date')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Error Copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocorreu um Erro na Copia dos Dados da API",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE API",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@concat('Copy Data API - ',pipeline().parameters.par_tabla)",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('var_final_date')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Error Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Carga Tablas",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocorreu um Erro na Carga das Tabelas no Databricks",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE API",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@concat('Load Tablas API - ',pipeline().parameters.par_tabla)",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('var_final_date')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Sucesso",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Carga Tablas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Proceso de carga y copia de datos API completado con éxito",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE API",
								"par_status_msg": "Sucesso",
								"par_etapa": {
									"value": "@concat('Fin Carga API Sucesso - ',pipeline().parameters.par_tabla)",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('var_final_date')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_search_type": {
						"type": "string",
						"defaultValue": "DESPACHO_REAL"
					},
					"par_url": {
						"type": "string",
						"defaultValue": "https://www.rcontrol.com.mx/rcSuite/GetUserToken?arg00=Origenes02&arg01=Temporal1"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files/"
					},
					"par_url_base": {
						"type": "string",
						"defaultValue": "https://www.rcontrol.com.mx/japi/"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_status": {
						"type": "string"
					},
					"par_function": {
						"type": "string",
						"defaultValue": "get_shipment_info_outb"
					},
					"par_tabla": {
						"type": "string"
					}
				},
				"variables": {
					"var_initial_date": {
						"type": "String"
					},
					"var_final_date": {
						"type": "String"
					},
					"date_ext": {
						"type": "String"
					},
					"var_parameters": {
						"type": "String"
					},
					"url_complete": {
						"type": "String"
					},
					"var_fecha_01": {
						"type": "String"
					},
					"var_fecha_02": {
						"type": "String"
					},
					"var_fecha_03": {
						"type": "String"
					},
					"var_fecha_hoy": {
						"type": "String"
					},
					"var_parameters_02": {
						"type": "String"
					},
					"var_parameters_03": {
						"type": "String"
					},
					"url_complete_02": {
						"type": "String"
					},
					"url_complete_03": {
						"type": "String"
					},
					"var_fecha_hoy_02": {
						"type": "String"
					},
					"var_fecha_ayer_00": {
						"type": "String"
					},
					"var_fecha_ayer_23": {
						"type": "String"
					},
					"teste": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_load_tablas_api_inb_out_alice')]",
				"[concat(variables('factoryId'), '/pipelines/pl_send_email_notification_alice')]",
				"[concat(variables('factoryId'), '/datasets/nmex_rest_dataset_api')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_merge_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Carpeta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": {
										"value": "@pipeline().parameters.parPathCopy",
										"type": "Expression"
									},
									"par_filename": {
										"value": "@pipeline().parameters.parFileNameCopy",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Archivos Hoy",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Carpeta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Carpeta').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(contains(item().name,pipeline().parameters.parFechaAtual),equals(item().type,'File'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Archivos Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Archivos Hoy').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Files Hoy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.parPathCopy",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@concat(pipeline().parameters.parPathDestination,pipeline().parameters.parFechaAtual,'_',pipeline().parameters.parFileNameTitle)",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Files",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy Files Hoy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.parPathCopy",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFileNameCopy": {
						"type": "string"
					},
					"parPathCopy": {
						"type": "string"
					},
					"parPathDestination": {
						"type": "string"
					},
					"parFileNameTitle": {
						"type": "string"
					},
					"parContainer": {
						"type": "string"
					},
					"parFechaAtual": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_move_blob_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Carpeta",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sc_nmex_devorigmx_generic",
								"type": "DatasetReference",
								"parameters": {
									"par_container": {
										"value": "@pipeline().parameters.parContainer",
										"type": "Expression"
									},
									"par_diretorio": {
										"value": "@pipeline().parameters.parPathCopy",
										"type": "Expression"
									},
									"par_arquivo": {
										"value": "@pipeline().parameters.parFileNameCopy",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Archivos Hoy",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Carpeta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Carpeta').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Archivos Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Archivos Hoy').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Files Hoy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.parPathCopy",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@concat(pipeline().parameters.parPathDestination,pipeline().parameters.parFechaAtual,'_',pipeline().parameters.parFileNameTitle)",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy Files Hoy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@pipeline().parameters.parPathCopy",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"wildcardFileName": {
												"value": "@{item().name}",
												"type": "Expression"
											},
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFileNameCopy": {
						"type": "string"
					},
					"parPathCopy": {
						"type": "string"
					},
					"parPathDestination": {
						"type": "string"
					},
					"parFileNameTitle": {
						"type": "string"
					},
					"parContainer": {
						"type": "string"
					},
					"parFechaAtual": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sc_nmex_devorigmx_generic')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_move_blob_to_blob_Folders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sc_nmex_devorigmx_generic",
								"type": "DatasetReference",
								"parameters": {
									"par_container": {
										"value": "@pipeline().parameters.parContainer",
										"type": "Expression"
									},
									"par_diretorio": {
										"value": "@pipeline().parameters.parPathCopy",
										"type": "Expression"
									},
									"par_arquivo": {
										"value": "@pipeline().parameters.parFileNameCopy",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Blob Folders",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Folder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().name,'Teste_caxias')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Blob Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Blob Folders').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Pipeline Filtering Folders",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_extract_move_blob_to_blob_filter",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"parFolderName": {
												"value": "@item().name",
												"type": "Expression"
											},
											"parContName": {
												"value": "@pipeline().parameters.parContainer",
												"type": "Expression"
											},
											"parPathCopy": {
												"value": "@pipeline().parameters.parPathCopy",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parPathCopy": {
						"type": "string",
						"defaultValue": "inbound"
					},
					"parPathDestination": {
						"type": "string",
						"defaultValue": "inbound/Teste_caxias_historical"
					},
					"parContainer": {
						"type": "string",
						"defaultValue": "dev"
					},
					"parFileNameCopy": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sc_nmex_devorigmx_generic')]",
				"[concat(variables('factoryId'), '/pipelines/pl_extract_move_blob_to_blob_filter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_move_blob_to_blob_filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata Alice",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": {
										"value": "@pipeline().parameters.parPathCopy",
										"type": "Expression"
									},
									"par_filename": {
										"value": "@pipeline().parameters.parFolderName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach Folders",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Folder').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata Inside Folder",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl2_origenesmx_binary_source",
											"type": "DatasetReference",
											"parameters": {
												"parContName": {
													"value": "@pipeline().parameters.parContName",
													"type": "Expression"
												},
												"parPathCopy": {
													"value": "@concat(pipeline().parameters.parPathCopy,item().name)",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "Copy Folder Content",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Metadata Inside Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat(pipeline().parameters.parPathCopy,item().name)",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary_source",
											"type": "DatasetReference",
											"parameters": {
												"parContName": {
													"value": "@pipeline().parameters.parContName",
													"type": "Expression"
												},
												"parPathCopy": {
													"value": "@pipeline().parameters.parPathCopy",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary_sink",
											"type": "DatasetReference",
											"parameters": {
												"parContName": {
													"value": "@pipeline().parameters.parContName",
													"type": "Expression"
												},
												"parPathDestination": {
													"value": "@concat(pipeline().parameters.parPathDestination,'/',item().name)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete Files and Folders",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy Folder Content",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl2_origenesmx_binary_source",
											"type": "DatasetReference",
											"parameters": {
												"parContName": {
													"value": "@pipeline().parameters.parContName",
													"type": "Expression"
												},
												"parPathCopy": {
													"value": "@{concat(pipeline().parameters.parPathCopy,item().name)}",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter Folder",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata Alice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata Alice').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFolderName": {
						"type": "string"
					},
					"parContName": {
						"type": "string"
					},
					"parPathCopy": {
						"type": "string"
					},
					"parPathDestination": {
						"type": "string"
					}
				},
				"variables": {
					"varFiles30Days": {
						"type": "String"
					},
					"varReferenceDate": {
						"type": "String",
						"defaultValue": "1900-01-01 00:00:00"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_move_to_csv_reference')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "View Archivo Parametro",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/alice/alice_config",
									"par_filename": "LX03_ARCHIVOS_LIST.csv",
									"par_delimeter": ","
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get Fecha Actual",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varFechaAtual",
							"value": {
								"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "View Archivo Parametro",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('View Archivo Parametro').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": "inbound/alice",
												"par_filename": {
													"value": "@concat(item().nombre_archivo,variables('varFechaAtual'),'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl2_origenesmx_binary",
											"type": "DatasetReference",
											"parameters": {
												"par_directory": {
													"value": "@concat('inbound/alice/',variables('varFechaAtual'),'_LX03')",
													"type": "Expression"
												},
												"par_filename": {
													"value": "@concat(item().nombre_archivo,variables('varFechaAtual'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"varFilesCopy": {
						"type": "Array"
					},
					"varFilesNameCopy": {
						"type": "Array"
					},
					"varFechaAtual": {
						"type": "String"
					},
					"varArrayNombreAndFecha": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_mx_np_cat_allowance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_layer_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/paulo.vieira@mx.nestle.com/sl_professional/catalog/cat_allowance/execution/0010_np_cat_allowance_load_silver_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "load_layer_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "load_layer_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/paulo.vieira@mx.nestle.com/sl_professional/catalog/cat_allowance/execution/0020_np_cat_allowance_load_gold_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_professional/catalogs"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_mx_np_cat_base_gpr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_layer_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/paulo.vieira@mx.nestle.com/DatabricksMX/sl_professional/catalog/cat_base_gpr/execution/0010_np_cat_base_gpr_load_silver_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "load_layer_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "load_layer_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/paulo.vieira@mx.nestle.com/DatabricksMX/sl_professional/catalog/cat_base_gpr/execution/0020_np_cat_base_gpr_load_gold_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_professional/catalogs"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_mx_np_cat_cliente')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_layer_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/paulo.vieira@mx.nestle.com/sl_professional/catalog/cat_cliente/execution/0010_np_cat_cliente_load_silver_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "load_layer_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "load_layer_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/paulo.vieira@mx.nestle.com/sl_professional/catalog/cat_cliente/execution/0020_np_cat_cliente_load_gold_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_professional/catalogs"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_mx_np_cat_materiales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_layer_silver",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/paulo.vieira@mx.nestle.com/sl_professional/catalog/cat_materiales/execution/0010_np_cat_materiales_load_silver_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "load_layer_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "load_layer_silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/paulo.vieira@mx.nestle.com/sl_professional/catalog/cat_materiales/execution/0020_np_cat_materiales_load_gold_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_professional/catalogs"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_mx_np_facts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_professional/facts"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_origenes_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Supplier",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Set variable RIVERA Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Ventas.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable RIVERA Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Inventario.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Set variable NIETO Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=VENTAS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_inventarios",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=INVENTARIOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Clientes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=CLIENTES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Productos",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_productos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=PRODUCTOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_productos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.23:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:05:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_inventarios')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable NIETO Almacenes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_almacenes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=ALMACENES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Almacenes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Almacenes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_almacenes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_ALMACENES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'ALMACENES')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Execute Pipeline Drivin",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_extract_api_drivin",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"par_url": "https://external.driv.in/",
													"par_stardate": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"par_enddate": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"par_header_content_type": "application/json",
													"par_header_key": {
														"value": "@pipeline().parameters.par_header_key",
														"type": "Expression"
													},
													"FileName": "JSON",
													"par_cont": "dev",
													"par_folder": "/inbound/ext_api_files_new/DRIVIN/"
												}
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Set variable CEVISUR Token",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "CEVISUR Login",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_login",
												"value": {
													"value": "@activity('CEVISUR Login').output.token",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Ventas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/pedidos/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Inventarios",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/inventario/existencias/actuales')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Clientes",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/clientes/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Productos",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_produtos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/articulos')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "CEVISUR Login",
											"type": "WebActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"url": {
													"value": "@pipeline().parameters.par_url_login",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {
													"Content-type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													}
												},
												"body": {
													"username": "0PM067",
													"password": "5P%LZ19xeM%v"
												}
											}
										},
										{
											"name": "Copy CEVISUR Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable CEVISUR Facturas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_facturas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/facturas/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy CEVISUR Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_produtos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Facturas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Facturas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_facturas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_FACTURAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'FACTURAS')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Unknown Provider",
									"description": "Return if no URL is found.",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Switch Bronze Layer",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Switch Supplier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Notebook Load NIETO Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_nieto",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "NIETO",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Notebook RIVERA Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_rivera",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "RIVERA",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Notebook Load DRIVIN Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_drivin",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "DRIVIN",
													"parFilePath": {
														"value": "@concat(variables('par_cont'),variables('par_folder'))",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Notebook Load CEVISUR Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_cevisur",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "CEVISUR",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@pipeline().parameters.par_stardate",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "inbound/ext_api_files_new/DRIVIN/"
					},
					"par_url_login": {
						"type": "string"
					},
					"par_provee": {
						"type": "string"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_grupo_vehiculos": {
						"type": "String"
					},
					"var_nie_almacenes": {
						"type": "String"
					},
					"par_cont": {
						"type": "String",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "String",
						"defaultValue": "/inbound/ext_api_files_new/DRIVIN/"
					}
				},
				"folder": {
					"name": "amsmx_sc_drivin/HistoricoDrivIn"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-17T16:07:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ar_rest_api_generic_auth')]",
				"[concat(variables('factoryId'), '/datasets/json_api_web')]",
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_drivin')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_p_ic3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IC3 to DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Variavel UTC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "IC3_SQL_TO_LAKE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl2_origenesmx_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": {
										"value": "@concat('inbound/credit_notes/files_ic3/',variables('varUTCNow'))",
										"type": "Expression"
									},
									"par_filename": {
										"value": "@concat('ic3_',variables('varUTCNow'),'.csv')",
										"type": "Expression"
									},
									"par_delimeter": ","
								}
							}
						]
					},
					{
						"name": "Variavel UTC",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUTCNow",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Carga Bronze IC3",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "IC3 to DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/01_inbound_ic3",
							"baseParameters": {
								"parArchivoNombreAtual": {
									"value": "@concat('ic3_',variables('varUTCNow'),'.csv')",
									"type": "Expression"
								},
								"parDateTimeUTC": {
									"value": "@variables('varUTCNow')",
									"type": "Expression"
								},
								"parPathFull": {
									"value": "@concat(variables('varUTCNow'),'/ic3_',variables('varUTCNow'),'.csv')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"varUTCNow": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IC3_SQL_TO_LAKE')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_catalogs_notebook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load catalogs Silver layer_copy1",
						"description": "Execute load silver for all catalogs obtained from lookup activity",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/catalogs/',pipeline().parameters.parNotebook,'/execution/','0010_sc_mx_silver_',pipeline().parameters.parNotebook)",
								"type": "Expression"
							},
							"baseParameters": {
								"parArchivoNombreAtual": {
									"value": "@pipeline().parameters.parArchivoNombreAtual",
									"type": "Expression"
								},
								"parDateTimeUTC": {
									"value": "@pipeline().parameters.parDateTimeUTC",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load catalogs Gold layer",
						"description": "Execute load silver for all catalogs obtained from lookup activity",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Load catalogs Silver layer_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/catalogs/',pipeline().parameters.parNotebook,'/execution/','0020_sc_mx_gold_',pipeline().parameters.parNotebook)",
								"type": "Expression"
							},
							"baseParameters": {
								"parArchivoNombreAtual": {
									"value": "@pipeline().parameters.parArchivoNombreAtual",
									"type": "Expression"
								},
								"parDateTimeUTC": {
									"value": "@pipeline().parameters.parDateTimeUTC",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load catalogs Gold Datascience",
						"description": "Execute load silver for all catalogs obtained from lookup activity",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Load catalogs Gold layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/yair.atristain@mx.nestle.com/DatabricksMX/sl_supply_alice/catalogs/',pipeline().parameters.parNotebook,'/execution/','0030_datascience_load_gold_tb_mx_sc_',pipeline().parameters.parNotebook)",
								"type": "Expression"
							},
							"baseParameters": {
								"parArchivoNombreAtual": {
									"value": "@pipeline().parameters.parArchivoNombreAtual",
									"type": "Expression"
								},
								"parDateTimeUTC": {
									"value": "@pipeline().parameters.parDateTimeUTC",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parDateTimeUTC": {
						"type": "string"
					},
					"parNotebook": {
						"type": "string"
					},
					"parArchivoNombreAtual": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List Inbound Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/fact/ndg",
									"par_filename": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Load Silver Layer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Inbound Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Inbound Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Load CSV into Silver Layer",
									"description": "Notebook that processes each CSV file found in the Inbound folder and load the data in the Silver Data Layer",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/ricardo.perez1@mx.nestle.com/DatabricksMX/sl_ndg/fact/fact_master_plan/execution/0010_ndg_fact_master_plan_load_silver_layer",
										"baseParameters": {
											"adf_csvFile": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Catch Error Loading CSV",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Load CSV into Silver Layer",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorMessage",
										"value": {
											"value": "@activity('Load CSV into Silver Layer').Error.Message",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Catch Error Listing Files",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "List Inbound Files",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessage",
							"value": {
								"value": "@activity('List Inbound Files').Error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Catch Error Load Silver Layer",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Load Silver Layer",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessage",
							"value": {
								"value": "@activity('Load Silver Layer').Error.Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Load Gold Layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Load Silver Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/ricardo.perez1@mx.nestle.com/DatabricksMX/sl_ndg/fact/fact_master_plan/execution/0020_ndg_fact_master_plan_load_gold_layer"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Catch Error Load Gold Layer",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Load Gold Layer",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessage",
							"value": {
								"value": "@activity('Load Gold Layer').Error.Message",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_ndg"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_p_ic3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Carga Dataset IC3",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/05_dataset_ic3"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Model Classification",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Carga Dataset IC3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/carlos.grajales@mx.nestle.com/finance_creditnotes_classification"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_sales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ADF DB notebooks parameters",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_db_notebooks.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach ADF DB notebooks parameters",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get ADF DB notebooks parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF DB notebooks parameters').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "If Condition ADF DB notebooks parameters",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().blob_filename,pipeline().parameters.par_blob_filename)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "pl_load_sales",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_databricks_notebooks_solution",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_db_folder_path": {
															"value": "@string(item().db_folder_path)",
															"type": "Expression"
														},
														"par_db_sol_path": {
															"value": "@string(item().db_sol_path)",
															"type": "Expression"
														},
														"par_solution": {
															"value": "@string(item().solution)",
															"type": "Expression"
														},
														"par_id": {
															"value": "@string(item().id)",
															"type": "Expression"
														},
														"par_parquet": {
															"value": "@string(item().parquet)",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_blob_path": {
						"type": "string"
					},
					"par_blob_filename": {
						"type": "string"
					}
				},
				"variables": {
					"var_db_folder_path": {
						"type": "String"
					},
					"var_db_sol_path": {
						"type": "String"
					},
					"var_solution": {
						"type": "String"
					},
					"var_id": {
						"type": "String"
					},
					"var_test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_databricks_notebooks_solution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_silver_layer_bck')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Silver Layer",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/ricardo.perez1@mx.nestle.com/DatabricksMX/sl_ndg/fact/fact_master_plan/execution/0010_ndg_fact_master_plan_load_silver_layer",
							"baseParameters": {
								"adf_csvFile": {
									"value": "@activity('List Inbound Files').output.childItems[0].name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "List Inbound Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/fact/ndg",
									"par_filename": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Archive Inbound Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load Silver Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/fact/ndg",
									"par_filename": "@activity('List Inbound Files').output.childItems[0].name"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "archive/fact/ndg",
									"par_filename": "@activity('List Inbound Files').output.childItems[0].name"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ndg"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_silver_lyr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List Inbound Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_binary",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/fact/ndg",
									"par_filename": " "
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Load All Inbound Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Inbound Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Inbound Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Load Silver Layer",
									"description": "Notebook that processes each CSV file found in the Inbound folder and load the data in the Silver Data Layer",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/ricardo.perez1@mx.nestle.com/DatabricksMX/sl_ndg/fact/fact_master_plan/execution/0010_ndg_fact_master_plan_load_silver_layer",
										"baseParameters": {
											"adf_csvFile": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Catch Error Loading Silver Layer",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Load Silver Layer",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorMessage",
										"value": {
											"value": "@activity('Load Silver Layer').Error.Message",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Catch Error Listing Files",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "List Inbound Files",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ErrorMessage",
							"value": {
								"value": "@activity('List Inbound Files').Error.Message",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ErrorMessage": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_ndg"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_binary')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_tablas_api_inb_out_alice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.parFechaTabla",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "INBOUND_HISTORICO",
									"activities": [
										{
											"name": "Carga Bronze INBOUND HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_historico/execution/0010_load_bronze_tb_mx_sc_inbound_historico",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@pipeline().parameters.parFechaExec",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Silver INBOUND HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Bronze INBOUND HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_historico/execution/0020_load_silver_tb_mx_sc_inbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Gold INBOUND HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Silver INBOUND HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_historico/execution/0030_load_gold_tb_mx_sc_inbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Dataset INBOUND HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Gold INBOUND HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_historico/execution/0040_load_dataset_tb_mx_sc_inbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Datascience INBOUND HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Dataset INBOUND HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_historico/execution/0050_load_datascience_tb_mx_sc_inbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "INBOUND_LIVE",
									"activities": [
										{
											"name": "Carga Bronze INBOUND LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "1:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_live/execution/0010_load_bronze_tb_mx_sc_inbound_live",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@pipeline().parameters.parFechaExec",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Silver INBOUND LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Bronze INBOUND LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_live/execution/0020_load_silver_tb_mx_sc_inbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Gold INBOUND LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Silver INBOUND LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_live/execution/0030_load_gold_tb_mx_sc_inbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Dataset INBOUND LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Gold INBOUND LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_live/execution/0040_load_dataset_tb_mx_sc_inbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Datascience INBOUND LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Dataset INBOUND LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_inbound_live/execution/0050_load_datascience_tb_mx_sc_inbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "OUTBOUND_HISTORICO",
									"activities": [
										{
											"name": "Carga Bronze OUTBOUND_HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_historico/execution/0010_load_bronze_tb_mx_sc_outbound_historico",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@pipeline().parameters.parFechaExec",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Silver OUTBOUND_HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Bronze OUTBOUND_HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_historico/execution/0020_load_silver_tb_mx_sc_outbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Gold OUTBOUND_HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Silver OUTBOUND_HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_historico/execution/0030_load_gold_tb_mx_sc_outbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Dataset OUTBOUND_HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Gold OUTBOUND_HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_historico/execution/0040_load_dataset_tb_mx_sc_outbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Datascience OUTBOUND_HISTORICO",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Dataset OUTBOUND_HISTORICO",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_historico/execution/0050_load_datascience_tb_mx_sc_outbound_historico"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "OUTBOUND_LIVE",
									"activities": [
										{
											"name": "Carga Bronze OUTBOUND_LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_live/execution/0010_load_bronze_tb_mx_sc_outbound_live",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@pipeline().parameters.parFechaExec",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Silver OUTBOUND_LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Bronze OUTBOUND_LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_live/execution/0020_load_silver_tb_mx_sc_outbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Gold OUTBOUND_LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Silver OUTBOUND_LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_live/execution/0030_load_gold_tb_mx_sc_outbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Dataset OUTBOUND_LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Gold OUTBOUND_LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_live/execution/0040_load_dataset_tb_mx_sc_outbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "Carga Datascience OUTBOUND_LIVE",
											"type": "DatabricksNotebook",
											"dependsOn": [
												{
													"activity": "Carga Dataset OUTBOUND_LIVE",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "01:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/rafael.medeiros2@br.nestle.com/DatabricksMX/sl_supply_alice/facts/tb_mx_sc_outbound_live/execution/0050_load_datascience_tb_mx_sc_outbound_live"
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaExec": {
						"type": "string"
					},
					"parFechaTabla": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_tablas_notebook_alice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Table Load",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.parTableName",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "lx03",
									"activities": [
										{
											"name": "Load LX03",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_lx03",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "lt23",
									"activities": [
										{
											"name": "Load LT23",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_lt23",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "otr",
									"activities": [
										{
											"name": "Load OTR",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_otr",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "contabilizado",
									"activities": [
										{
											"name": "Load OTR Contabilizado",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_otr_contabilizado",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "mb5t",
									"activities": [
										{
											"name": "Load MB5T",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_mb5t",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "me2n",
									"activities": [
										{
											"name": "Load ME2N",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_me2n",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "vl06f_nac",
									"activities": [
										{
											"name": "Load VL06F_NAC",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_vl06f_nac",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "vl06f_con",
									"activities": [
										{
											"name": "Load VL06F_CON",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_vl06f_con",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "atp",
									"activities": [
										{
											"name": "Load ATP",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_atp",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "trm_log",
									"activities": [
										{
											"name": "Load TRM_LOG",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_trm_log",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "me80fn",
									"activities": [
										{
											"name": "Load ME80FN",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_me80fn",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "ageing",
									"activities": [
										{
											"name": "Load AGEING",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_common_tabla_ageing",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"parFechaAtual_Carga": {
														"value": "@pipeline().parameters.parFechaAtual_Carga",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parFechaAtual_Carga": {
						"type": "string"
					},
					"parTableName": {
						"type": "string"
					}
				},
				"variables": {
					"varPathNotebook": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_lx03')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_lt23')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_otr')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_otr_contabilizado')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_mb5t')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_me2n')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_vl06f_nac')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_vl06f_con')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_atp')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_trm_log')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_me80fn')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_tabla_ageing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_logical_p_ic3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Carga Prata IC3",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/04_silver_ic3"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_marvin_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy to container",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_palantir/execution/0010.Marvin_Copy"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_palantir"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_copy_ic3_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_extract_p_ic3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_p_ic3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_logical_p_ic3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_p_ic3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_logical_p_ic3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_load_p_ic3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_logical_p_ic3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_p_ic3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_p_ic3')]",
				"[concat(variables('factoryId'), '/pipelines/pl_logical_p_ic3')]",
				"[concat(variables('factoryId'), '/pipelines/pl_load_p_ic3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_copy_tipification_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API Copy Sharepoint to Lake",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_verify_file_sharepoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_shp_copy-multiplefilestodatalakehourfilter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parAdlsDestinationFolder": "inbound/credit_notes/files_tipification",
								"parFileName": "Tipification",
								"parShpSiteUrl": "https://nestle.sharepoint.com/teams/nmex-tipification-trabajo",
								"parShpRelativeFolderPath": "Documentos Compartilhados",
								"parModifiedLastNHours": "200",
								"parClientID": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-nmex-trabajo-tipification/?api-version=7.0",
								"parClientSecret": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-nmex-trabajo-tipification/?api-version=7.0",
								"par_UtcNowVar": {
									"value": "@variables('var_UtcNow')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "utcNowFolder",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_UtcNow",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_common_verify_file_sharepoint",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "utcNowFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_verify_file_sharepoint",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_common_load_extract_tipification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API Copy Sharepoint to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_load_extract_tipification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_common_extract_log_register",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_extract_tipification",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_extract_log_register",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_common_extract_log_register_failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_verify_file_sharepoint",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_extract_log_register",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_common_extract_log_register_failure_01",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API Copy Sharepoint to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_extract_log_register",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_UtcNow": {
						"type": "String"
					},
					"var_FileTipificationNameOut": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_common_shp_copy-multiplefilestodatalakehourfilter')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_verify_file_sharepoint')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_load_extract_tipification')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_extract_log_register')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_extract_catalogs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Inbound Bronze",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadCSVConfing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadCSVConfing').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "pl_common_shp",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_shp",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"parEnvironment": {
												"value": "@item().Enviroment",
												"type": "Expression"
											},
											"parAdlsDestinationFolder": {
												"value": "@item().AdlsDestinationFolder",
												"type": "Expression"
											},
											"parFileName": {
												"value": "@item().FileName",
												"type": "Expression"
											},
											"parShpSiteUrl": "https://nestle.sharepoint.com/teams/nmex-supplychain-alice",
											"parShpRelativeFolderPath": "Shared Documents",
											"parModifiedLastNHours": "1",
											"parClientID": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-nmex-supplychain-alice/?api-version=7.0",
											"parClientSecret": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-nmex-supplychain-alice/?api-version=7.0",
											"par_UtcNowVar": {
												"value": "@variables('varUtcNow')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "pl_common_shp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_sc_nmex_devorigmx_generic",
											"type": "DatasetReference",
											"parameters": {
												"par_container": {
													"value": "@item().Enviroment",
													"type": "Expression"
												},
												"par_diretorio": "@item().AdlsDestinationFolder",
												"par_arquivo": "@item().FileName"
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(formatDateTime(activity('Get Metadata1').output.lastModified,'yyyy-MM-dd'),formatDateTime(variables('varUtcNow'),'yyyy-MM-dd'))\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Catalogs Notebook",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_load_catalogs_notebook",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"parDateTimeUTC": {
															"value": "@variables('varUtcNow')",
															"type": "Expression"
														},
														"parNotebook": {
															"value": "@item().Notebook",
															"type": "Expression"
														},
														"parArchivoNombreAtual": {
															"value": "@item().FileName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Send Email Error Sharepoint to blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "pl_common_shp",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_send_email_notification_alice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_conteudo_email": "Ocurrió un error en Pipeline al cargar el catalogo de Sharepoint nmex-supplychain-alice al blob, validar formato del archivo",
											"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
											"par_project_name": "ALICE",
											"par_status_msg": "Error",
											"par_etapa": {
												"value": "@item().FileName",
												"type": "Expression"
											},
											"par_fecha": {
												"value": "@variables('varUtcNow')",
												"type": "Expression"
											},
											"par_runid": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Email Error Catalogs Notebooks",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_send_email_notification_alice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_conteudo_email": "Ocurrió un error en Pipeline al cargar el catalogo en los Notebooks de databricks",
											"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
											"par_project_name": "ALICE",
											"par_status_msg": "Error",
											"par_etapa": {
												"value": "@item().FileName",
												"type": "Expression"
											},
											"par_fecha": {
												"value": "@variables('varUtcNow')",
												"type": "Expression"
											},
											"par_runid": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ReadCSVConfing",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "utcNowFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "catalogs_automatitation",
									"par_filename": "rutas.csv",
									"par_delimeter": ","
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "utcNowFolder",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUtcNow",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"varFileName": {
						"type": "String"
					},
					"varAdlsDestinationFolder": {
						"type": "String"
					},
					"varEnviroment": {
						"type": "String"
					},
					"varUtcNow": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adsl2_origenesmx_csv')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_shp')]",
				"[concat(variables('factoryId'), '/datasets/ds_sc_nmex_devorigmx_generic')]",
				"[concat(variables('factoryId'), '/pipelines/pl_send_email_notification_alice')]",
				"[concat(variables('factoryId'), '/pipelines/pl_load_catalogs_notebook')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_extract_tables_alice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Fecha Actual",
						"description": "Obtem a data que vai ser utilizada durante todo o processo ",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varFechaAtual",
							"value": {
								"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFileNameCopy": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathDestination",
									"type": "Expression"
								},
								"parFileNameTitle": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"parContainer": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parFechaAtual": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_load_tablas_notebook_alice",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_tablas_notebook_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFechaAtual_Carga": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"parTableName": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_common_load_datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_load_datascience",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parTableName_Load": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar los archivos al Blob",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al crear las tablas delta in Databricks",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar las tablas al Datascience",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Completed Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "El Pipeline se ejecutó correctamente",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Sucesso",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"m_parContainer": {
						"type": "string"
					},
					"m_parFileNameTitle": {
						"type": "string"
					},
					"m_parPathDestination": {
						"type": "string"
					},
					"m_parPathCopy": {
						"type": "string"
					},
					"m_parFileNameCopy": {
						"type": "string"
					}
				},
				"variables": {
					"varFechaAtual": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_move_blob_to_blob')]",
				"[concat(variables('factoryId'), '/pipelines/pl_load_tablas_notebook_alice')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_load_datascience')]",
				"[concat(variables('factoryId'), '/pipelines/pl_send_email_notification_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_extract_tables_alice_UPDATING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Fecha Actual",
						"description": "Obtem a data que vai ser utilizada durante todo o processo ",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varFechaAtual",
							"value": {
								"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFileNameCopy": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathDestination",
									"type": "Expression"
								},
								"parFileNameTitle": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"parContainer": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parFechaAtual": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_load_tablas_notebook_alice",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_tablas_notebook_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFechaAtual_Carga": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"parTableName": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_common_load_datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_load_datascience",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parTableName_Load": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar los archivos al Blob",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al crear las tablas delta in Databricks",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar las tablas al Datascience",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Completed Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob_Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "El Pipeline se ejecutó correctamente",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Sucesso",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob_Folders",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob_filter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFolderName": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parContName": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathArchive",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"m_parContainer": {
						"type": "string"
					},
					"m_parFileNameTitle": {
						"type": "string"
					},
					"m_parPathDestination": {
						"type": "string"
					},
					"m_parPathCopy": {
						"type": "string"
					},
					"m_parFileNameCopy": {
						"type": "string"
					},
					"m_parPathArchive": {
						"type": "string"
					}
				},
				"variables": {
					"varFechaAtual": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_move_blob_to_blob')]",
				"[concat(variables('factoryId'), '/pipelines/pl_load_tablas_notebook_alice')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_load_datascience')]",
				"[concat(variables('factoryId'), '/pipelines/pl_send_email_notification_alice')]",
				"[concat(variables('factoryId'), '/pipelines/pl_extract_move_blob_to_blob_filter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_mayoreodigital')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ore",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "HugogallardoTestingtbMayoreoDigitalLiquidaciones",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy_ore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hugo.gallardo@mx.nestle.com/DatabricksMX/sl_mayoreodigital/execution/hugogallardo.MayoreoDigital.26072022"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_mayoreodigital"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ore')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ore')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_nixtla_data_validation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/fernando.vazquez1@mx.nestle.com/DatabricksMX/sl_ventas/nixtla/data_validationl/00001_data_validation"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "flag",
							"value": {
								"value": "@activity('Notebook1').output.runOutput.error",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(variables('flag'), 'ERROR')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Notebook2",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/fernando.vazquez1@mx.nestle.com/DatabricksMX/sl_ventas/nestle-pipeline"
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "DATOS NO VALIDOS ",
										"errorCode": {
											"value": "@variables('flag')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"outputnotebok": {
						"type": "string"
					}
				},
				"variables": {
					"flag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_nixtla"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-05T20:14:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_nixtla_model_execution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Main",
						"description": "Ejecuta el main del proyecto",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/luis.guaso@mx.nestle.com/Nixtla/src/data/main"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Model",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Main",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/luis.guaso@mx.nestle.com/Nixtla/src/models/ML_ST_FR/ML_TS"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Send Email Completed Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Bussines delta View",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "El Pipeline se ejecutó correctamente",
								"par_lista_email": "luis.patino@mx.nestle.com;Yair.Atristain@mx.nestle.com;",
								"par_project_name": "Nixtla",
								"par_status_msg": "Sucesso",
								"par_fecha": {
									"value": "@utcnow()",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Bussines delta View",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Model",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/yair.atristain@mx.nestle.com/Nixtla/src/models/ML_ST_FR/Business View"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_nixtla"
				},
				"annotations": [],
				"lastPublishTime": "2023-10-31T22:36:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
				"[concat(variables('factoryId'), '/pipelines/pl_send_email_notification_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_proceso_liquidaciones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upload MayoreoDigital Liquidaciones",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "HugogallardoTestingtbMayoreoDigitalLiquidaciones",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Upload MayoreoDigital Liquidaciones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hugo.gallardo@mx.nestle.com/DatabricksMX/sl_mayoreodigital/execution/hugogallardo.MayoreoDigital.26072022"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_mayoreodigital"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ore')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ore')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_proceso_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Cat Productos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataSetProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tb_Productos_Load_Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy Cat Productos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/hugo.gallardo@mx.nestle.com/DatabricksMX/sl_mayoreodigital/execution/hugogallardo.MayoreoDigital.Productos.03082022"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_mayoreodigital"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataSetProductos')]",
				"[concat(variables('factoryId'), '/datasets/DestinationProductos')]",
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_ai_cloud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Migracion vistas",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_walmart/execution/0017.Migracion_vistas_WM"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transaccional - Exhibiciones",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Migracion vistas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_walmart/execution/0018.WalmartTrans + Exhibiciones"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Forecast CPFR",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Transaccional - Exhibiciones",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_walmart/execution/0019.Forecast_Semanal_Walmart_[CPFR]"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Forecast Formato-MG",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Forecast CPFR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_walmart/execution/0020.Forecast_Semanal_WM_formato-material_Prophet_v2"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Vista Estatal",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Calculo universos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_walmart/execution/0021.State_View_AI_Cloud"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Calculo universos",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Forecast Formato-MG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_walmart/execution/0022.Calculo_de_universos"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_catalog_connection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Import catalog",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_catalogos/connection/execution/0010.Import_Cat_Connection"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform Catalog",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Import catalog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_catalogos/connection/execution/0011.Transform_Cat_Connection"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_catalogo_geografico')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract_Cat_Geo",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_catalogos/geo/execution/0010.Import_Cat_Geo"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform_Cat_Geo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Extract_Cat_Geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_catalogos/geo/execution/0011.Transform_Cat_Geo"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_dispersiones')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract_Base_Fria",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_dispersiones/execution/0010.Dispersiones_Import"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform_Base_Fria",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Extract_Base_Fria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_dispersiones/execution/0011.Dispersiones_Transform"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View_Dispersiones",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Transform_Base_Fria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_dispersiones/execution/0012.Dispersiones_View"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_ecomm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract_Ecomm",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_ecomm/execution/0010.Ecomm_Hist_Import"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform_Ecomm",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Extract_Ecomm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_ecomm/execution/0011.Ecomm_Hist_Transform"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View_Ecomm",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Transform_Ecomm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_ecomm/execution/0012.Ecomm_Hist_View"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_kf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract KF",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_kf/execution/0010.Extract_KF"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Tranform KF",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Extract KF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_kf/execution/0011.Transform_KF"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View KF",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Tranform KF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_kf/execution/0012.View_KF"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_mash')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Join",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_mash/execution/0010.MASH - Join Categorias Marcas"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_refresh_power_bi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ADF_parameters_sharepoint",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_sharepoint.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach look up value",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_sharepoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_sharepoint').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().blob_filename,pipeline().parameters.par_blob_filename)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Execute Pipeline Power BI refresh",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Set variable workspace_id",
														"dependencyConditions": [
															"Succeeded"
														]
													},
													{
														"activity": "Set variable dataset_id",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_refresh_power_bi_dataset",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_id_workspace": {
															"value": "@variables('var_workspace_id')",
															"type": "Expression"
														},
														"par_id_dataset": {
															"value": "@variables('var_dataset_id')",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Set variable workspace_id",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_workspace_id",
													"value": {
														"value": "@string(item().workspace_id)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set variable dataset_id",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_dataset_id",
													"value": {
														"value": "@string(item().dataset_id)",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_blob_filename": {
						"type": "string"
					},
					"par_blob_path": {
						"type": "string"
					}
				},
				"variables": {
					"var_workspace_id": {
						"type": "String"
					},
					"var_dataset_id": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_datascience_csv')]",
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_refresh_power_bi_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_sabana_alcances')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract_Sabana_Alcances",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_sabanas/alcances/execution/0010.Sabana_Alcances_Import"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform_Sabana_Alcances",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Extract_Sabana_Alcances",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_sabanas/alcances/execution/0011.Sabana_Alcances_Transform"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View_Sabana_Alcances",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Transform_Sabana_Alcances",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_sabanas/alcances/execution/0012.Sabana_Alcances_View_WMT"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View_4lastweeks",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "View_Sabana_Alcances",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_sabanas/alcances/execution/0013.Sabana_Alcances_Last4View"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sales_stock_market')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extraccion",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/lucio.montelongo@mx.nestle.com/DatabricksMX/sl_stock_market/execution/0010.Stock_Market_Price_Extract"
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_ventas_test"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmex_dv_origenesmx_id_usw2_dbr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_send_email_notification_alice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "URL HTTP POST",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00-nams-pr-baisein-wrpa5gaht7mno-internal.westus2.environments.microsoftazurelogicapps.net:443/workflows/ceca053c86ba428e9c4e9d71134fa0c9/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=tMCGaXFb_ItzhjbxFqTzY1HvqDexzZZt75G3Eq0gzc4",
							"connectVia": {
								"referenceName": "nmex-pp-origenesmx-ithub-ir",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat(\n    '{\n    \"conteudo-email\":\"',pipeline().parameters.par_conteudo_email,'\",\n    \"email-list\":\"',pipeline().parameters.par_lista_email,'\",\n        \"project-name\":\"',pipeline().parameters.par_project_name,'\",\n        \"status-msg\":\"',pipeline().parameters.par_status_msg,'\",\n        \"etapa\": \"',pipeline().parameters.par_etapa,'\",\n        \"fecha\": \"',pipeline().parameters.par_fecha,'\",\n        \"runid\": \"', pipeline().parameters.par_runid, ' \"\n        }')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_conteudo_email": {
						"type": "string"
					},
					"par_lista_email": {
						"type": "string"
					},
					"par_project_name": {
						"type": "string"
					},
					"par_status_msg": {
						"type": "string"
					},
					"par_etapa": {
						"type": "string"
					},
					"par_fecha": {
						"type": "string"
					},
					"par_runid": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod_pl_master_extract_tables_alice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Fecha Actual",
						"description": "Obtem a data que vai ser utilizada durante todo o processo ",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varFechaAtual",
							"value": {
								"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFileNameCopy": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathDestination",
									"type": "Expression"
								},
								"parFileNameTitle": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"parContainer": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parFechaAtual": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_load_tablas_notebook_alice",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_tablas_notebook_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFechaAtual_Carga": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"parTableName": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar los archivos al Blob",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al crear las tablas delta in Databricks",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Completed Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "El Pipeline se ejecutó correctamente",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Sucesso",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"m_parContainer": {
						"type": "string"
					},
					"m_parFileNameTitle": {
						"type": "string"
					},
					"m_parPathDestination": {
						"type": "string"
					},
					"m_parPathCopy": {
						"type": "string"
					},
					"m_parFileNameCopy": {
						"type": "string"
					}
				},
				"variables": {
					"varFechaAtual": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-07T23:28:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_move_blob_to_blob')]",
				"[concat(variables('factoryId'), '/pipelines/pl_load_tablas_notebook_alice')]",
				"[concat(variables('factoryId'), '/pipelines/pl_send_email_notification_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFS_Monitoring')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AFS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('F_MonitoringAnswer_', formatDateTime(subtractFromTime(utcNow(), 1, 'Month'), 'yyyyMM'), '01.csv')",
							"type": "Expression"
						},
						"folderPath": "MonitoringDomain/F_MonitoringAnswer",
						"container": "206"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\"MTA_MTDR_PRD_ID\";\"MTD_MTDR_ID\";\"MTA_ID\";\"Answer_Date\";\"Answer_Time\";\"Date_Int\";\"USR_ID\";\"USR_ST_ID\";\"CUS_ID\";\"CUS_ST_ID\";\"APP_ID\";\"Digitally_Processed\";\"MTDR_ID\";\"PRD_ID\";\"PRD_ST_ID\";\"ST_ID\";\"Answer_As_Text\";\"Answer_As_Number\";\"Answer_As_DateInt\";\"Answer_As_OptionID\";\"Answer_As_OptionText\";\"URL_To_Photo\";\"User_Action\";\"Target_Description\";\"Target_Value\";\"Automatic_Answer\";\"Header_TimeStamp\";\"Row_TimeStamp\";\"CUS_PRD_ST_ID\";\"Last_Known\";\"Is_Listed\";\"LTP_HIE_HIN_PRD_Version_ID\";\"Is_PowerProduct\";\"PPP_HIE_HIN_PRD_Version_ID\";\"Sys_IsDeleted\";\"Sys_LastChange\";\"MTD_ID\";\"Answer_DateTime\";\"AD_ID\";\"Automatic_Answer_As_Text\";\"Is_Edited\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AFS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFS_Monitoring_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AFS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('F_MonitoringAnswer_', formatDateTime(subtractFromTime(utcNow(), 0, 'Month'), 'yyyyMM'), '01.csv')",
							"type": "Expression"
						},
						"folderPath": "MonitoringDomain/F_MonitoringAnswer",
						"container": "206"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\"MTA_MTDR_PRD_ID\";\"MTD_MTDR_ID\";\"MTA_ID\";\"Answer_Date\";\"Answer_Time\";\"Date_Int\";\"USR_ID\";\"USR_ST_ID\";\"CUS_ID\";\"CUS_ST_ID\";\"APP_ID\";\"Digitally_Processed\";\"MTDR_ID\";\"PRD_ID\";\"PRD_ST_ID\";\"ST_ID\";\"Answer_As_Text\";\"Answer_As_Number\";\"Answer_As_DateInt\";\"Answer_As_OptionID\";\"Answer_As_OptionText\";\"URL_To_Photo\";\"User_Action\";\"Target_Description\";\"Target_Value\";\"Automatic_Answer\";\"Header_TimeStamp\";\"Row_TimeStamp\";\"CUS_PRD_ST_ID\";\"Last_Known\";\"Is_Listed\";\"LTP_HIE_HIN_PRD_Version_ID\";\"Is_PowerProduct\";\"PPP_HIE_HIN_PRD_Version_ID\";\"Sys_IsDeleted\";\"Sys_LastChange\";\"MTD_ID\";\"Answer_DateTime\";\"AD_ID\";\"Automatic_Answer_As_Text\";\"Is_Edited\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AFS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_pages_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"ContName": {
						"type": "string"
					},
					"FoldPath": {
						"type": "string"
					},
					"Delimiter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FoldPath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().Delimiter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/catalogs/professional/test",
						"container": "dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1_flash_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/unzip_flash",
						"container": "dev"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "token_proveedores.csv",
						"folderPath": "inbound/api/drivin",
						"container": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1_destination_flas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/unzip_flash",
						"container": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1_flas_tst')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Flash Report Nestle B2B 2023-01-17.zip",
						"folderPath": "inbound/ncdt",
						"container": "dev"
					},
					"columnDelimiter": ",",
					"compressionCodec": "ZipDeflate",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataSetProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "Productos_20220617.DAT",
						"folderPath": "/Entrada"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/mayoreo_digital/liquidaciones",
						"container": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationLiquidacion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/mayoreo_digital/liquidaciones",
						"container": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/mayoreo_digital/productos",
						"container": "dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_AFS_Prod')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "input/Purina/AFS",
						"container": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\"MTD_MTDR_ID\";\"MTD_ID\";\"Monitoring_ID\";\"Monitoring_Name\";\"Monitoring_Published\";\"Monitoring_Valid_From\";\"Monitoring_Valid_Till\";\"ST_ID\";\"Customer_GRP_ID\";\"Product_GRP_ID\";\"User_GRP_ID\";\"ROU_ID\";\"Route_GRP_ID\";\"LIS_HIE_HIN_ID\";\"PP_HIE_HIN_ID\";\"Monitoring_CostCenter_Name\";\"Monitoring_Available_At\";\"MA_ID\";\"Mon_Res_Text\";\"Mon_Res_Integer\";\"Mon_Res_Number\";\"Mon_Res_Codelist_1\";\"Mon_Res_Codelist_2\";\"Mon_Res_Codelist_3\";\"Mon_Res_Codelist_4\";\"Mon_Res_Codelist_5\";\"Mon_Res_Codelist_6\";\"Monitoring_Active\";\"Monitoring_Mandatory\";\"Monitoring_Note\";\"MTDR_ID\";\"Question_ID\";\"Question_SeqNo\";\"Question\";\"Parent_MTDR_ID\";\"Question_Type\";\"Question_Res_Text\";\"Question_Res_Integer\";\"Question_Res_Number\";\"Question_Res_Codelist_1\";\"Question_Res_Codelist_2\";\"Question_Res_Codelist_3\";\"Question_Res_Codelist_4\";\"Question_Res_Codelist_5\";\"Question_Res_Codelist_6\";\"Question_Note\";\"First_Question\";\"Sys_IsDeleted\";\"Sys_LastChange\";\"Product_List\";\"Exclude_Not_Listed\";\"Question_Group\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "in",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Consolidado General IC3 24102022.xlsx",
						"folderPath": "temp_file_nbs",
						"fileSystem": "dev"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "tradeID",
						"type": "String"
					},
					{
						"name": "TA",
						"type": "String"
					},
					{
						"name": "Nombre",
						"type": "String"
					},
					{
						"name": "AcuerdoWBSCliente",
						"type": "String"
					},
					{
						"name": "TipoTA",
						"type": "String"
					},
					{
						"name": "StatusSap",
						"type": "String"
					},
					{
						"name": "Gasto Efectivo / Presupuesto",
						"type": "String"
					},
					{
						"name": "Nota de Credito/ Gr",
						"type": "String"
					},
					{
						"name": "Compromiso",
						"type": "String"
					},
					{
						"name": "Saldo/Disponible",
						"type": "String"
					},
					{
						"name": "GastosCostos",
						"type": "String"
					},
					{
						"name": "ClientesNivel4",
						"type": "String"
					},
					{
						"name": "Nodo4",
						"type": "String"
					},
					{
						"name": "NodoObjetivo",
						"type": "String"
					},
					{
						"name": "NivelCarga",
						"type": "String"
					},
					{
						"name": "Canal",
						"type": "String"
					},
					{
						"name": "Campaña",
						"type": "String"
					},
					{
						"name": "Tactica",
						"type": "String"
					},
					{
						"name": "TipoGasto",
						"type": "String"
					},
					{
						"name": "Complementaria",
						"type": "String"
					},
					{
						"name": "Categorias",
						"type": "String"
					},
					{
						"name": "Payer",
						"type": "String"
					},
					{
						"name": "OrgVentas",
						"type": "String"
					},
					{
						"name": "OrganizacionVenta",
						"type": "String"
					},
					{
						"name": "CanalDistribucion",
						"type": "String"
					},
					{
						"name": "FechaInicio",
						"type": "String"
					},
					{
						"name": "FechaFinal",
						"type": "String"
					},
					{
						"name": "FechaCreacion",
						"type": "String"
					},
					{
						"name": "FechaAprobacion",
						"type": "String"
					},
					{
						"name": "FechaCarga",
						"type": "String"
					},
					{
						"name": "AprobadorPorMonto",
						"type": "String"
					},
					{
						"name": "Implementador",
						"type": "String"
					},
					{
						"name": "FueraVigencia",
						"type": "String"
					},
					{
						"name": "FueraEnvio",
						"type": "String"
					},
					{
						"name": "AbiertaCerrada",
						"type": "String"
					},
					{
						"name": "DeptoPropone",
						"type": "String"
					},
					{
						"name": "MesesVencidas",
						"type": "String"
					},
					{
						"name": "LiberacionGasto",
						"type": "String"
					},
					{
						"name": "NCGE",
						"type": "String"
					},
					{
						"name": "DiferenciaEntre",
						"type": "String"
					},
					{
						"name": "FijosDiscrecionales",
						"type": "String"
					},
					{
						"name": "GenerarNota",
						"type": "String"
					},
					{
						"name": "Estatus",
						"type": "String"
					},
					{
						"name": "Ceco",
						"type": "String"
					},
					{
						"name": "Soporte",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_BaseLiquidacion_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/nestle_veterinarios/baseliquidacion",
						"container": "dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_BaseLiquidacion_origin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp_NESTLEVETERINARIOS_GILSALINAS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat('BaseLiquidacion_',formatDateTime(getPastTime(5, 'Day'),'yyyy'),formatDateTime(getPastTime(0, 'Month'),'MM'),formatDateTime(getPastTime(18, 'Day'),'dd'),'.DAT.txt')",
							"type": "Expression"
						},
						"folderPath": "/nestlevet"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp_NESTLEVETERINARIOS_GILSALINAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_Clientes_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/nestle_veterinarios/clientes",
						"container": "dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_Clientes_origin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp_NESTLEVETERINARIOS_GILSALINAS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "Clientes_20220816.DAT.txt",
						"folderPath": "/nestlevet"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp_NESTLEVETERINARIOS_GILSALINAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_Productos_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "inbound/nestle_veterinarios/productos",
						"container": "dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GilSalinas_NestleVeterinarios_Productos_origin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp_NESTLEVETERINARIOS_GILSALINAS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "NESTLE_VETERINARIOS"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "Productos_20220727.DAT.txt",
						"folderPath": "/nestlevet"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp_NESTLEVETERINARIOS_GILSALINAS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IC3_SQL_TO_LAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IC3PROD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IdTradeActivity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroTradeActivity",
						"type": "varchar"
					},
					{
						"name": "NombreTradeActivity",
						"type": "varchar"
					},
					{
						"name": "AcuerdosWBSCliente",
						"type": "varchar"
					},
					{
						"name": "TipoTA",
						"type": "varchar"
					},
					{
						"name": "StatusSAP",
						"type": "varchar"
					},
					{
						"name": "GastoEfectivo",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Compromiso",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Saldo",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Nodo4",
						"type": "varchar"
					},
					{
						"name": "Campaña",
						"type": "varchar"
					},
					{
						"name": "Tactica",
						"type": "varchar"
					},
					{
						"name": "TipoGasto",
						"type": "varchar"
					},
					{
						"name": "Complementaria",
						"type": "varchar"
					},
					{
						"name": "Payer",
						"type": "varchar"
					},
					{
						"name": "OrgVentas",
						"type": "varchar"
					},
					{
						"name": "OrganizacionVenta",
						"type": "varchar"
					},
					{
						"name": "NumCanalDistribucion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CanalDistribucio",
						"type": "varchar"
					},
					{
						"name": "FechaInicio",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FechaFinal",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FechaCreacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FechaAprobacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AprobadorporMonto",
						"type": "varchar"
					},
					{
						"name": "Implementador",
						"type": "varchar"
					},
					{
						"name": "AbiertaCerrada",
						"type": "varchar"
					},
					{
						"name": "DeptoPropone",
						"type": "varchar"
					},
					{
						"name": "MesesVencidas",
						"type": "varchar"
					},
					{
						"name": "Estatus",
						"type": "varchar"
					},
					{
						"name": "Soporte",
						"type": "varchar"
					},
					{
						"name": "UserSalesCopilot",
						"type": "varchar"
					},
					{
						"name": "BuildingBlock",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VW_TradeHeaderAdi"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/IC3PROD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ar_rest_api_generic",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ar_rest_api_generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "api_web_test",
					"type": "LinkedServiceReference",
					"parameters": {
						"par_url": {
							"value": "@dataset().par_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"par_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/api_web_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataSetProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@concat('Productos_',formatDateTime(getPastTime(5, 'Day'),'yyyy'),formatDateTime(getPastTime(2, 'Month'),'MM'),formatDateTime(getPastTime(20, 'Day'),'dd'),'.DAT')",
							"type": "Expression"
						},
						"folderPath": "/Entrada"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDatasetProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/Entrada"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "mayoreodigital"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": "Liquidaciones_20220615.DAT",
						"folderPath": "/Entrada"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ar_rest_api_generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ar_rest_api_generic",
					"type": "LinkedServiceReference",
					"parameters": {
						"par_url": {
							"value": "@dataset().par_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"QueryParameters": {
						"type": "string"
					},
					"par_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().QueryParameters",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ar_rest_api_generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ar_rest_api_generic_auth')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ar_rest_api_generic_auth",
					"type": "LinkedServiceReference",
					"parameters": {
						"par_url_auth": {
							"value": "@dataset().par_url_complete",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"par_url_complete": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ar_rest_api_generic_auth')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_datascience_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_datascience",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_directory": {
						"type": "String"
					},
					"par_filename": {
						"type": "String"
					},
					"par_delimiter": {
						"type": "String",
						"defaultValue": ","
					},
					"par_encoding": {
						"type": "String",
						"defaultValue": "UTF-8"
					},
					"par_header": {
						"type": "Bool",
						"defaultValue": true
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_directory",
							"type": "Expression"
						},
						"fileSystem": "datascience"
					},
					"columnDelimiter": {
						"value": "@dataset().par_delimiter",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().par_encoding",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": {
						"value": "@dataset().par_header",
						"type": "Expression"
					},
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_datascience')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_datascience_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_datascience",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_directory": {
						"type": "string"
					},
					"par_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_directory",
							"type": "Expression"
						},
						"fileSystem": "datascience"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_datascience')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_extdata_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_extdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_directory": {
						"type": "string"
					},
					"par_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_directory",
							"type": "Expression"
						},
						"fileSystem": "externaldata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_extdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_origenesmx_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_directory": {
						"type": "string"
					},
					"par_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_directory",
							"type": "Expression"
						},
						"fileSystem": "dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_origenesmx_binary_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"parContName": {
						"type": "string"
					},
					"parPathDestination": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().parPathDestination",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().parContName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_origenesmx_binary_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"parContName": {
						"type": "string"
					},
					"parPathCopy": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().parPathCopy",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().parContName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_origenesmx_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_directory": {
						"type": "string"
					},
					"par_filename": {
						"type": "string"
					},
					"par_delimeter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_directory",
							"type": "Expression"
						},
						"fileSystem": "dev"
					},
					"columnDelimiter": {
						"value": "@dataset().par_delimeter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl2_origenesmx_xlsx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_directory": {
						"type": "string"
					},
					"par_filename": {
						"type": "string"
					},
					"par_delimeter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "in",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "consolidado_ic3.xlsx",
						"folderPath": "temp_file_nbs",
						"fileSystem": "dev"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ar_rest_shp_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ar_http_shp_generic",
					"type": "LinkedServiceReference",
					"parameters": {
						"par_Url": {
							"value": "@dataset().par_Url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"par_Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ar_http_shp_generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ar_sftp_ncdt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ar_sftp_ncdt",
					"type": "LinkedServiceReference",
					"parameters": {
						"parhost": "200.38.155.5",
						"parport": 22,
						"paruser": "nestle_reportes_cliente",
						"parkey": "sftp-pass-nestletp"
					}
				},
				"parameters": {
					"par_directory": {
						"type": "string"
					},
					"par_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@if(equals(dataset().par_filename,'0'),null , dataset().par_filename)\r\n\r\n",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_directory",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ar_sftp_ncdt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_op_adls2_dinamyc_lakes_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_lake": {
						"type": "string",
						"defaultValue": "nmexprorigmxdhusw2sta"
					},
					"par_key": {
						"type": "string",
						"defaultValue": "adl2-token-nmex-origenesmx-pr"
					},
					"par_container": {
						"type": "string",
						"defaultValue": "prod"
					},
					"par_folder": {
						"type": "string"
					},
					"par_filename": {
						"type": "string",
						"defaultValue": "0"
					},
					"par_delimiter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().par_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().par_delimiter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sc_nmex_devorigmx_generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_origenesmx",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"par_container": {
						"type": "string"
					},
					"par_diretorio": {
						"type": "string"
					},
					"par_arquivo": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().par_arquivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().par_diretorio",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().par_container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_origenesmx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_testlogicapp_01')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_api_web')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_op_adls2_lake_datascience",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"ContName": {
						"type": "string"
					},
					"FoldPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FoldPath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_op_adls2_lake_datascience')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nmex_rest_dataset_api')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nmex_service_api_rest",
					"type": "LinkedServiceReference",
					"parameters": {
						"url_base": {
							"value": "@dataset().url_dataset_post_rest_api",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"url_dataset_post_rest_api": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/nmex_service_api_rest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFS_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AFS_AzureBlobStorage_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lk_nmexdvorigmxdhusw2key",
							"type": "LinkedServiceReference"
						},
						"secretName": "datalakeafs",
						"secretVersion": "ba08088b86f447389e4ab7f4e6b7c3c5"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmexdvorigmxdhusw2key')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_MayoreoDigital_Dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage_MayoreoDigital_Dev_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "nmex-origmx-dh-usw2-ithub-shared-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-origmx-dh-usw2-ithub-shared-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IC3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('IC3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IC3PROD')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('IC3PROD_connectionString')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "mi_comparativo",
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp2_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp_NESTLEVETERINARIOS_GILSALINAS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp_NESTLEVETERINARIOS_GILSALINAS_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp_NESTLEVETERINARIOS_GILSALINAS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp_NESTLEVETERINARIOS_GILSALINAS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/api_web_test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"par_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('api_web_test_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ar_rest_api_generic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"par_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ar_rest_api_generic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ar_rest_api_generic_auth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"par_url_auth": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ar_rest_api_generic_auth_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lk_nmex_dv_origenesmx_id_usw2_dbr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"par_cluster": {
						"type": "string",
						"defaultValue": "0130-211945-mcv1mi12"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3607946472679900.0.azuredatabricks.net/",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lk_nmexdvorigmxdhusw2key",
							"type": "LinkedServiceReference"
						},
						"secretName": "nmex-pp-origenesmx-id-usw2-dbr-token-siweb"
					},
					"existingClusterId": "[parameters('lk_nmex_dv_origenesmx_id_usw2_dbr_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmexdvorigmxdhusw2key')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lk_nmex_dv_origenesmx_id_usw2_dbr_siweb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3607946472679900.0.azuredatabricks.net/",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lk_nmexdvorigmxdhusw2key",
							"type": "LinkedServiceReference"
						},
						"secretName": "nmex-pp-origenesmx-id-usw2-dbr-token-siweb"
					},
					"existingClusterId": "[parameters('lk_nmex_dv_origenesmx_id_usw2_dbr_siweb_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lk_nmexdvorigmxdhusw2key')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lk_nmexdvorigmxdhusw2key')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('lk_nmexdvorigmxdhusw2key_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ar_http_shp_generic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"par_Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_ar_http_shp_generic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ar_sftp_ncdt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"parhost": {
						"type": "string",
						"defaultValue": "200.38.155.5"
					},
					"parport": {
						"type": "int",
						"defaultValue": 22
					},
					"paruser": {
						"type": "string",
						"defaultValue": "nestle_reportes_cliente"
					},
					"parkey": {
						"type": "string",
						"defaultValue": "sftp-pass-nestletp"
					}
				},
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('ls_ar_sftp_ncdt_properties_typeProperties_host')]",
					"port": "@linkedService().parport",
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ls_ar_sftp_ncdt_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_ar_sftp_ncdt_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ar_sftp_ncdt_2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "para descargar MI_Comparativo",
				"parameters": {
					"parhost": {
						"type": "string",
						"defaultValue": "98.142.238.57"
					},
					"parport": {
						"type": "int",
						"defaultValue": 22
					},
					"paruser": {
						"type": "string",
						"defaultValue": "TelePerformance"
					},
					"parkey": {
						"type": "string",
						"defaultValue": "sftp-mi-comparativo"
					}
				},
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('ls_ar_sftp_ncdt_2_properties_typeProperties_host')]",
					"port": "@linkedService().parport",
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ls_ar_sftp_ncdt_2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_ar_sftp_ncdt_2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_op_adls2_lake_datascience')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_op_adls2_lake_datascience_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_op_adls2_lake_extdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_op_adls2_lake_extdata_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_op_adls2_lake_latam')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonMWS",
				"typeProperties": {
					"endpoint": "[parameters('ls_op_adls2_lake_latam_properties_typeProperties_endpoint')]",
					"marketplaceID": "ls_op_adls2_lake_latamls_op_adls2_lake_latamls_op_adls2_lake_latamls_op_adls2_lake_latam",
					"sellerID": "ls_op_adls2_lake_latamls_op_adls2_lake_latam",
					"mwsAuthToken": {
						"type": "SecureString",
						"value": "[parameters('ls_op_adls2_lake_latam_mwsAuthToken')]"
					},
					"accessKeyId": "[parameters('ls_op_adls2_lake_latam_properties_typeProperties_accessKeyId')]",
					"secretKey": {
						"type": "SecureString",
						"value": "[parameters('ls_op_adls2_lake_latam_secretKey')]"
					},
					"useEncryptedEndpoints": true,
					"useHostVerification": true,
					"usePeerVerification": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_op_adls2_lake_origenesmx')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_op_adls2_lake_origenesmx_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_or_adls2_retailersmx')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_or_adls2_retailersmx_connectionString')]"
				},
				"connectVia": {
					"referenceName": "nmex-pp-origenesmx-ithub-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/nmex-pp-origenesmx-ithub-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nmex_service_api_rest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"url_base": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('nmex_service_api_rest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_copy_bl_to_bl_atp_files')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_copy_blob_to_blob_atp_files",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_Folder": "[parameters('tg_alice_copy_bl_to_bl_atp_files_properties_pl_copy_blob_to_blob_atp_files_parameters_par_Folder')]",
							"par_Archivo_Nombre": "[parameters('tg_alice_copy_bl_to_bl_atp_files_properties_pl_copy_blob_to_blob_atp_files_parameters_par_Archivo_Nombre')]",
							"par_Destination_Folder": "[parameters('tg_alice_copy_bl_to_bl_atp_files_properties_pl_copy_blob_to_blob_atp_files_parameters_par_Destination_Folder')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-24T18:28:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								14
							],
							"hours": [
								7,
								8,
								15,
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_copy_blob_to_blob_atp_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_retrival_FORMS_OTAbiertas_shpt')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_common_shp",
							"type": "PipelineReference"
						},
						"parameters": {
							"parEnvironment": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parEnvironment')]",
							"parAdlsDestinationFolder": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parAdlsDestinationFolder')]",
							"parFileName": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parFileName')]",
							"parShpSiteUrl": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parShpSiteUrl')]",
							"parShpRelativeFolderPath": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parShpRelativeFolderPath')]",
							"parModifiedLastNHours": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parModifiedLastNHours')]",
							"parClientID": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parClientID')]",
							"parClientSecret": "[parameters('tg_alice_retrival_FORMS_OTAbiertas_shpt_properties_pl_common_shp_parameters_parClientSecret')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2023-09-28T08:00:00",
						"timeZone": "Central Standard Time (Mexico)"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_common_shp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_retrival_FORMS_People_MHE_shpt')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_common_shp",
							"type": "PipelineReference"
						},
						"parameters": {
							"parEnvironment": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parEnvironment')]",
							"parAdlsDestinationFolder": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parAdlsDestinationFolder')]",
							"parFileName": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parFileName')]",
							"parShpSiteUrl": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parShpSiteUrl')]",
							"parShpRelativeFolderPath": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parShpRelativeFolderPath')]",
							"parModifiedLastNHours": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parModifiedLastNHours')]",
							"parClientID": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parClientID')]",
							"parClientSecret": "[parameters('tg_alice_retrival_FORMS_People_MHE_shpt_properties_pl_common_shp_parameters_parClientSecret')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2023-09-28T08:00:00",
						"timeZone": "Central Standard Time (Mexico)"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_common_shp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_ageing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_ageing_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_atp')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_atp_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-21T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7,
								15,
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_catalogos')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_catalogs",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7,
								12,
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_catalogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_lt23')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Calendarizacion de la tabla lt23 cada hora",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_lt23_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-18T18:35:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								2,
								3,
								4,
								5,
								6,
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_lx03')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_lx03_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_mb5t')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_mb5t_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								7,
								6,
								5,
								4,
								3,
								2,
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_me2n')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_me2n_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_me80fn')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_me80fn_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								7,
								6,
								5,
								4,
								3,
								2,
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_otr')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_otr_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								7,
								6,
								5,
								4,
								3,
								2,
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_otr_contabilizado')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_otr_contabilizado_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_trm_log')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_trm_log_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_vl06f_con')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_vl06f_con_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-20T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_alice_tb_mx_sc_vl06f_nac')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_extract_tables_alice",
							"type": "PipelineReference"
						},
						"parameters": {
							"m_parContainer": "[parameters('tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parContainer')]",
							"m_parFileNameTitle": "[parameters('tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parFileNameTitle')]",
							"m_parPathDestination": "[parameters('tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parPathDestination')]",
							"m_parPathCopy": "[parameters('tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parPathCopy')]",
							"m_parFileNameCopy": "[parameters('tg_alice_tb_mx_sc_vl06f_nac_properties_pl_master_extract_tables_alice_parameters_m_parFileNameCopy')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-19T07:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								7,
								6,
								5,
								4,
								3,
								2,
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_extract_tables_alice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_npp_biblia_weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Sell_Out_Biblia_NPP",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-10-31T17:18:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								12
							],
							"weekDays": [
								"Thursday",
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Sell_Out_Biblia_NPP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_npp_sell_out_weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Update_Sell_Out_NPP",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-09-11T04:46:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							],
							"weekDays": [
								"Thursday",
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Update_Sell_Out_NPP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_sc_tb_mx_sa_dashboardtc')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2023-04-19T19:18:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_sc_tb_mx_sc_alice_api_live_inbound')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_extract_api_tablas_inb_outb",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_search_type": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type')]",
							"par_url": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url')]",
							"par_folder": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder')]",
							"par_url_base": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base')]",
							"par_cont": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont')]",
							"par_status": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_status')]",
							"par_function": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function')]",
							"par_tabla": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-03-31T21:11:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15,
								45
							],
							"hours": [
								2,
								3,
								4,
								5,
								6,
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_tablas_inb_outb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_sc_tb_mx_sc_alice_api_live_outbound')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_extract_api_tablas_inb_outb",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_search_type": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type')]",
							"par_url": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url')]",
							"par_folder": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder')]",
							"par_url_base": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base')]",
							"par_cont": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont')]",
							"par_status": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_status')]",
							"par_function": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function')]",
							"par_tabla": "[parameters('tg_mx_sc_tb_mx_sc_alice_api_live_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-03-31T21:11:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30,
								0
							],
							"hours": [
								2,
								3,
								4,
								5,
								6,
								7,
								8,
								9,
								10,
								11,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								12
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_tablas_inb_outb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_nixtla_model_execution_main')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_nixtla_model_execution",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/dev/sales/automatic_execution/success.csv",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tg_nixtla_model_execution_main_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_nixtla_model_execution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_pl_alice_fact_historical')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ejecuta pl_schedule_extract_tables_alice_historical tablas que corren cada hora \nOccurs every day every 1 hour(s) between 02:30:00 a. m. and 12:30:00 a. m..",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-13T17:43:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								7,
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								6,
								5,
								4,
								3,
								2,
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_sales_powerbi_refresh')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_refresh_power_bi",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_blob_filename": "[parameters('tg_sales_powerbi_refresh_properties_pl_sales_refresh_power_bi_parameters_par_blob_filename')]",
							"par_blob_path": "[parameters('tg_sales_powerbi_refresh_properties_pl_sales_refresh_power_bi_parameters_par_blob_path')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/powerbi/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tg_sales_powerbi_refresh_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_refresh_power_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_sc_drivin_daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_api_drivin_daily",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-10-13T19:59:00",
						"timeZone": "Central America Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_api_drivin_daily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_tb_mx_sc_alice_api_historical_inbound')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_extract_api_tablas_inb_outb",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_search_type": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type')]",
							"par_url": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url')]",
							"par_folder": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder')]",
							"par_url_base": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base')]",
							"par_cont": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont')]",
							"par_status": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_status')]",
							"par_function": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function')]",
							"par_tabla": "[parameters('tg_tb_mx_sc_alice_api_historical_inbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-10T20:56:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_tablas_inb_outb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_tb_mx_sc_alice_api_historical_outbound')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_extract_api_tablas_inb_outb",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_search_type": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_search_type')]",
							"par_url": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url')]",
							"par_folder": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_folder')]",
							"par_url_base": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_url_base')]",
							"par_cont": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_cont')]",
							"par_function": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_function')]",
							"par_tabla": "[parameters('tg_tb_mx_sc_alice_api_historical_outbound_properties_pl_extract_api_tablas_inb_outb_parameters_par_tabla')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-10T20:53:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_extract_api_tablas_inb_outb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_afs_npp_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_afs_npp",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2023-07-02T13:51:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								35
							],
							"hours": [
								17
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_afs_npp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_afs_npp_2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_afs_npp",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-07-04T17:15:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								8
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_afs_npp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ai_cloud')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_ai_cloud",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-01-31T14:29:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								21
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_ai_cloud')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_amsmx_load_sales')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_load_sales",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_blob_path": "[parameters('tr_amsmx_load_sales_properties_pl_load_sales_parameters_par_blob_path')]",
							"par_blob_filename": "[parameters('tr_amsmx_load_sales_properties_pl_load_sales_parameters_par_blob_filename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_amsmx_load_sales_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_load_sales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_amsmx_sales_nieto')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_common_generic_api",
							"type": "PipelineReference"
						},
						"parameters": {
							"par_retailer": "[parameters('tr_amsmx_sales_nieto_properties_pl_common_generic_api_parameters_par_retailer')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-06-03T05:00:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_common_generic_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_catalogo_geografico')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que se activa cuando se sube el catalogo geografico",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_catalogo_geografico",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/catalogos/",
					"blobPathEndsWith": "Cat_Geo.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_catalogo_geografico_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_catalogo_geografico')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_connection_catalog')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que ejecuta cada que el catalogo de conexiones entre SO, SI y exhibiciones se actualiza",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_catalog_connection",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/walmart/catalogos",
					"blobPathEndsWith": "catalogo_final_walmart.xlsx",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_connection_catalog_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_catalog_connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_dispersiones')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cuando se agrega el csv de la base fria",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_dispersiones",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/dispersiones/",
					"blobPathEndsWith": "BF.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_dispersiones_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_dispersiones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_drivin_daily_api')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-03-14T14:12:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ecomm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_ecomm",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/walmart/e-commerce/",
					"blobPathEndsWith": "BASE_MWB_2021vs2022.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_ecomm_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_ecomm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_kf')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_kf",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/sabanas/kf",
					"blobPathEndsWith": "kf.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_kf_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_kf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_marvin_palantir')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que copia la delta del output de Marvin al container de Palantir",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_marvin_copy",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-05T15:25:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								17
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_marvin_copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_mash_cat')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cada que se actualiza el csv con la info de mash a categoria",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_mash",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/mash/",
					"blobPathEndsWith": "data_categoria.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_mash_cat_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_mash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_mash_marca')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cada que se actualiza el csv con la info de mash a marca",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_mash",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/mash/",
					"blobPathEndsWith": "data_marcas.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_mash_marca_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_mash')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_SellIn')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_SellIn_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-21T19:01:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_SellOut')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_SellOut_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-21T19:02:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_Sindicadas')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_Sindicadas_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-21T19:03:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_catalogs')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_catalogs_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-21T18:58:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_nesmovil')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_nesmovil_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-21T19:00:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_sabana_alcances')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cuando se agrega el txt de SabanaAlcances",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_sabana_alcances",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/sabanas/alcances/",
					"blobPathEndsWith": "SabanaAlcances.txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_sabana_alcances_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_sabana_alcances')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_stock_market')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena la extraccion de precio de las acciones de Nestle y los principales autoservcios de Mexico",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_stock_market",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-05-05T17:08:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_sales_stock_market')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_ic3_mx')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_copy_ic3_to_lake",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-12-12T00:00:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								8,
								16
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_copy_ic3_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_tipificacion_mx')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_copy_tipification_to_lake",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-01-10T00:00:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"hours": [
								9,
								12,
								15
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_copy_tipification_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nmex-origmx-dh-usw2-ithub-shared-ir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Shared SH-IR to enable connectivity with shared sources except SAP MONO",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('nmex-origmx-dh-usw2-ithub-shared-ir_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nmex-pp-origenesmx-ithub-ir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_npp_sell_out_weekly_2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Update_Sell_Out_NPP",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-11-21T22:57:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Thursday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Update_Sell_Out_NPP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tg_mx_npp_sell_out_last_week')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Sell_Out_Last_Week",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-11-21T23:01:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							],
							"weekDays": [
								"Wednesday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Sell_Out_Last_Week')]"
			]
		}
	]
}