{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "nmex-dv-origmx-dh-usw2-adf"
		},
		"tr_mash_cat_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_mash_marca_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		},
		"tr_palantir_SellIn_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "SellIn"
		},
		"tr_palantir_SellOut_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "SellOut"
		},
		"tr_palantir_Sindicadas_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "Sindicadas"
		},
		"tr_palantir_catalogs_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "Catalogs"
		},
		"tr_palantir_nesmovil_properties_pl_datasets_parameters_Area": {
			"type": "string",
			"defaultValue": "Nesmovil"
		},
		"tr_sabana_alcances_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a6c9f13d-be73-4227-b485-c7a16289be08/resourceGroups/nmex-pp-origenesmx-dh-usea-rgp/providers/Microsoft.Storage/storageAccounts/nmexpporigdsdh79sta"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/tr_marvin_palantir')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que copia la delta del output de Marvin al container de Palantir",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_marvin_copy",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-05T15:25:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								17
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_mash_cat')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cada que se actualiza el csv con la info de mash a categoria",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_mash",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/mash/",
					"blobPathEndsWith": "data_categoria.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_mash_cat_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_mash_marca')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cada que se actualiza el csv con la info de mash a marca",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_mash",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/mash/",
					"blobPathEndsWith": "data_marcas.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_mash_marca_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_SellIn')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_SellIn_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-21T19:01:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_SellOut')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_SellOut_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-21T19:02:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_Sindicadas')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_Sindicadas_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-04-21T19:03:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_catalogs')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_catalogs_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-21T18:58:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_palantir_nesmovil')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_datasets",
							"type": "PipelineReference"
						},
						"parameters": {
							"Area": "[parameters('tr_palantir_nesmovil_properties_pl_datasets_parameters_Area')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-04-21T19:00:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_sabana_alcances')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena cuando se agrega el txt de SabanaAlcances",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_sabana_alcances",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datascience/blobs/datastore/sales/sabanas/alcances/",
					"blobPathEndsWith": "SabanaAlcances.txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_sabana_alcances_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_stock_market')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger que desencadena la extraccion de precio de las acciones de Nestle y los principales autoservcios de Mexico",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_sales_stock_market",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-05-05T17:08:00",
						"timeZone": "Central Standard Time (Mexico)",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get ADF_parameters_apis",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_mayoreo_apis.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_apis",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_apis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_apis').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().retailer),pipeline().parameters.par_retailer)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach type retailer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If Condition API Login",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_apis').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy API Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:05:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ar_rest_api_generic_auth",
											"type": "DatasetReference",
											"parameters": {
												"par_url_complete": {
													"value": "@concat(item().url,item().header_key)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "json_api_web",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().retailer,'_',variables('var_set_fecha_hoy'),'_',item().tipo,'.json')",
													"type": "Expression"
												},
												"ContName": {
													"value": "@item().cont",
													"type": "Expression"
												},
												"FoldPath": {
													"value": "@concat(item().blob_path,'/',item().retailer,'/',item().tipo)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Notebook API generic bronze layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Copy API Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_apis_generic/execution/0010.Execution_Extract_MX_Sales_Mayoreo_API_Generic",
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											},
											"parFilePath": {
												"value": "@concat(item().cont,item().blob_path)",
												"type": "Expression"
											},
											"parRetailer": {
												"value": "@item().retailer",
												"type": "Expression"
											},
											"parRetailerType": {
												"value": "@item().tipo",
												"type": "Expression"
											},
											"parTableType": {
												"value": "@item().tb_type",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Notebook  Setup API generic silver layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Notebook API generic bronze layer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_',item().retailer,'/setup/002',item().nb_id,'.Setup_',item().nb_name)",
											"type": "Expression"
										},
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference",
										"parameters": {
											"par_cluster": "0130-211945-mcv1mi12"
										}
									}
								},
								{
									"name": "Notebook  Exec API generic silver layer",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Notebook  Setup API generic silver layer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_',item().retailer,'/execution/002',item().nb_id,'.Exec_',item().nb_name)",
											"type": "Expression"
										},
										"baseParameters": {
											"parFechaExecution": {
												"value": "@variables('var_set_fecha_hoy')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "If Condition API Login",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter ADF_parameters_apis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Filter ADF_parameters_apis').output.value[0]['login'],'TRUE')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline API Login",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_generic_api_login",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_retailer": {
												"value": "@activity('Filter ADF_parameters_apis').output.value[0]['retailer']",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Notebook  Setup API generic sgold layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach type retailer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_marvin','/setup/0030.Setup_Load_SO_Mayoreo_Dataset_Marvin')",
								"type": "Expression"
							},
							"baseParameters": {
								"parFechaExecution": {
									"value": "@variables('var_set_fecha_hoy')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					},
					{
						"name": "Notebook  Exec API generic gold layer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Notebook  Setup API generic sgold layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat('/Repos/Production/DatabricksMX/sl_so/sl_so_mayoreo/sl_so_mayoreo_nieto/execution/0031.Exec_Load_SO_Mayoreo_Nieto_Marvin')",
								"type": "Expression"
							},
							"baseParameters": {
								"parFechaExecution": {
									"value": "@variables('var_set_fecha_hoy')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference",
							"parameters": {
								"par_cluster": "0130-211945-mcv1mi12"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_retailer": {
						"type": "string"
					}
				},
				"variables": {
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_generic_databricks_notebooks_solution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Setup_Extract_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('setup/001',pipeline().parameters.par_id,'.Setup_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Extract_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Setup_Transform_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Exec_Extract_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('setup/002',pipeline().parameters.par_id,'.Setup_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Transform_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Exec_Extract_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Setup_Extract_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('execution/001',pipeline().parameters.par_id,'.Exec_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Extract_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Exec_Transform_DB_Notebook",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Setup_Transform_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_generic_databricks_notebook",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_db_type_path": {
									"value": "@concat('execution/002',pipeline().parameters.par_id,'.Exec_')",
									"type": "Expression"
								},
								"par_db_etl_path": "Transform_",
								"par_db_folder_path": {
									"value": "@pipeline().parameters.par_db_folder_path",
									"type": "Expression"
								},
								"par_db_sol_path": {
									"value": "@pipeline().parameters.par_db_sol_path",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get ADF_parameters_gold_layer",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_gold_layer.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_gold_layer",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_gold_layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_gold_layer').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().solution),pipeline().parameters.par_solution)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Gold Layer",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Exec_Transform_DB_Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Filter ADF_parameters_gold_layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_gold_layer').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition Gold Layer",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Filter ADF_parameters_gold_layer').output.FilteredItemsCount,0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Setup_Load_DB_Notebook",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_databricks_notebook",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_db_type_path": {
															"value": "@concat('setup/003',item().id_gold,'.Setup_')",
															"type": "Expression"
														},
														"par_db_etl_path": "Load_",
														"par_db_folder_path": {
															"value": "@pipeline().parameters.par_db_folder_path",
															"type": "Expression"
														},
														"par_db_sol_path": {
															"value": "@string(item().db_sol_path)",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Exec_Load_DB_Notebook",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Setup_Load_DB_Notebook",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_databricks_notebook",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_db_type_path": {
															"value": "@concat('execution/003',item().id_gold,'.Exec_')",
															"type": "Expression"
														},
														"par_db_etl_path": "Load_",
														"par_db_folder_path": {
															"value": "@pipeline().parameters.par_db_folder_path",
															"type": "Expression"
														},
														"par_db_sol_path": {
															"value": "@string(item().db_sol_path)",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Get ADF_parameters_powerbi_service",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adls_datascience_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "datastore/sales/adf_parameters/",
									"par_filename": "ADF_parameters_powerbi_service.csv",
									"par_delimiter": ",",
									"par_encoding": "UTF-8",
									"par_header": true
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter ADF_parameters_powerbi_service",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get ADF_parameters_powerbi_service",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ADF_parameters_powerbi_service').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(string(item().solution),pipeline().parameters.par_solution)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach PowerBI Service",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter ADF_parameters_powerbi_service",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ForEach Gold Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter ADF_parameters_powerbi_service').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition PowerBI Service",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('Filter ADF_parameters_powerbi_service').output.FilteredItemsCount,0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "PowerBi Service",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_common_generic_refresh_power_bi_dataset",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"par_id_workspace": {
															"value": "@string(item().workspace_id)",
															"type": "Expression"
														},
														"par_id_dataset": {
															"value": "@string(item().dataset_id)",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "If Condition Copy Parquet",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ForEach Gold Layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.par_parquet,'TRUE')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline Copy Parquet",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_generic_parquet_copy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_db_sol_path": {
												"value": "@pipeline().parameters.par_db_sol_path",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_db_folder_path": {
						"type": "string"
					},
					"par_db_sol_path": {
						"type": "string"
					},
					"par_solution": {
						"type": "string"
					},
					"par_id": {
						"type": "string"
					},
					"par_parquet": {
						"type": "string"
					}
				},
				"variables": {
					"var_id": {
						"type": "String"
					},
					"var_test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_sales/amsmx_common_db"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_common_verify_file_sharepoint')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachFileVerifyBiling",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFilesBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFilesBiling').output.Value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Sharepoint Biling",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varSHPBilingFilename",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "GetShpClientIdBiling",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientIDBiling",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "GetShpSecretBiling",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.parClientSecretBiling",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "FilterFilesBiling",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ReadSharepointFolderBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadSharepointFolderBiling').output['d']['results']",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(\n    startswith(item()['Name'],pipeline().parameters.parFileNameBiling),\n    greaterOrEquals(\n        item()['TimeLastModified'],\n        addToTime(\n            utcnow(),\n            mul(int(pipeline().parameters.parModifiedLastNHoursBiling),-1),\n            'hour'\n        )\n    )\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ReadSharepointFolderBiling",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetSharepointBearerTokenBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.parShpSiteUrlBiling,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrlBiling,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPathBiling,''')/Files')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('GetSharepointBearerTokenBiling').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json;odata=verbose"
							}
						}
					},
					{
						"name": "GetSharepointBearerTokenBiling",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "GetShpClientIdBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetShpSecretBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientIdBiling').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecretBiling').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Search File Version",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Search File Version').output.firstRow.Version,'Atual')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pl_common_shp_copy-sharepointsinglefiletodatalake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_shp_copy-sharepointsinglefiletodatalake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"parFileName": {
												"value": "@variables('varSHPBilingFilename')",
												"type": "Expression"
											},
											"parNewFileName": {
												"value": "@variables('varSHPBilingFilename')",
												"type": "Expression"
											},
											"parUTCNow": {
												"value": "@variables('varUTCNow')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Carga Biling Tipification Delta Table",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "pl_common_shp_copy-sharepointsinglefiletodatalake",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/06_tipification_shp_transfer",
										"baseParameters": {
											"parArchivoNombreAtual": {
												"value": "@activity('Search File Version').output.firstRow.ActualNombreArchivo",
												"type": "Expression"
											},
											"parDateTimeUTC": {
												"value": "@variables('varUTCNow')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Verify File Version",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "VAR UTC NOW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/rafael.medeiros2@br.nestle.com/sl_creditnotes_tipification/03_verify_file_version_tipification",
							"baseParameters": {
								"parFileOutputName": {
									"value": "@variables('varSHPBilingFilename')",
									"type": "Expression"
								},
								"parNowDateTimeUTC": {
									"value": "@variables('varUTCNow')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Search File Version",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Verify File Version",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "inbound/credit_notes/files_tipification/01_FileVersionControl",
									"par_filename": "FileVersionTipificationControl.csv",
									"par_delimeter": ","
								}
							}
						}
					},
					{
						"name": "VAR UTC NOW",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEachFileVerifyBiling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUTCNow",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parClientSecretBiling": {
						"type": "String",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-mxbilingrebates/?api-version=7.0"
					},
					"parClientIDBiling": {
						"type": "String",
						"defaultValue": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-mxbilingrebates/?api-version=7.0"
					},
					"parShpSiteUrlBiling": {
						"type": "String",
						"defaultValue": "https://nestle.sharepoint.com/teams/MXFillOutBillingReference"
					},
					"parShpRelativeFolderPathBiling": {
						"type": "String",
						"defaultValue": "Shared Documents/Archivos tipificación"
					},
					"parFileNameBiling": {
						"type": "String",
						"defaultValue": "tipificacion"
					},
					"parModifiedLastNHoursBiling": {
						"type": "String",
						"defaultValue": "200"
					}
				},
				"variables": {
					"varSHPBilingFilename": {
						"type": "String"
					},
					"varSHPTrabajoFilename": {
						"type": "String"
					},
					"varUTCNow": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_origenes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Supplier",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Set variable RIVERA Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Ventas.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable RIVERA Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Inventario.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Set variable NIETO Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=VENTAS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_inventarios",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=INVENTARIOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Clientes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=CLIENTES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Productos",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_productos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=PRODUCTOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_productos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.23:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:05:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_inventarios')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable NIETO Almacenes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_almacenes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=ALMACENES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Almacenes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Almacenes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_almacenes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_ALMACENES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'ALMACENES')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Execute Pipeline Drivin",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_extract_api_origenes_drivin",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"par_url": {
														"value": "@pipeline().parameters.par_url",
														"type": "Expression"
													},
													"par_stardate": {
														"value": "@pipeline().parameters.par_stardate",
														"type": "Expression"
													},
													"par_enddate": {
														"value": "@pipeline().parameters.par_enddate",
														"type": "Expression"
													},
													"par_header_content_type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													},
													"par_header_key": {
														"value": "@pipeline().parameters.par_header_key",
														"type": "Expression"
													},
													"FileName": {
														"value": "@pipeline().parameters.FileName",
														"type": "Expression"
													},
													"par_cont": {
														"value": "@pipeline().parameters.par_cont",
														"type": "Expression"
													},
													"par_folder": {
														"value": "@pipeline().parameters.par_folder",
														"type": "Expression"
													},
													"par_url_login": {
														"value": "@pipeline().parameters.par_url_login",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Set variable CEVISUR Token",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "CEVISUR Login",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_login",
												"value": {
													"value": "@activity('CEVISUR Login').output.token",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Ventas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/pedidos/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Inventarios",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/inventario/existencias/actuales')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Clientes",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/clientes/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Productos",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_produtos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/articulos')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "CEVISUR Login",
											"type": "WebActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"url": {
													"value": "@pipeline().parameters.par_url_login",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {
													"Content-type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													}
												},
												"body": {
													"username": "0PM067",
													"password": "5P%LZ19xeM%v"
												}
											}
										},
										{
											"name": "Copy CEVISUR Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable CEVISUR Facturas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_facturas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/facturas/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy CEVISUR Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_produtos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Facturas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Facturas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_facturas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_FACTURAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'FACTURAS')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Unknown Provider",
									"description": "Return if no URL is found.",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch Bronze Layer",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Switch Supplier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Notebook Load NIETO Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_nieto",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "NIETO",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Notebook RIVERA Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_rivera",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "RIVERA",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Notebook Load DRIVIN Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_drivin",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "DRIVIN",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Notebook Load CEVISUR Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_cevisur",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "CEVISUR",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/PROVIDER/"
					},
					"par_url_login": {
						"type": "string",
						"defaultValue": "https://central.cevisur.com.mx:8443/nestle/api/auth/login"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_grupo_vehiculos": {
						"type": "String"
					},
					"var_nie_almacenes": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/API_Web"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_api_origenes_BKP_2023-04-20')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Supplier",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable Fecha Hoy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Set variable RIVERA Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Ventas.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable RIVERA Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_riv_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'SRM/creative/Procesos/ApiLayouts/Inventario.php?fecha=',pipeline().parameters.par_stardate,'&fechafin=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy RIVERA Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable RIVERA Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"api-key": {
															"value": "@pipeline().parameters.par_header_key",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_riv_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_RIVERA_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Set variable NIETO Ventas",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=VENTAS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Inventarios",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_inventarios",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=INVENTARIO&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Clientes",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=CLIENTES&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable NIETO Productos",
											"type": "SetVariable",
											"dependsOn": [],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_nie_productos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'?event=PRODUCTOS&access_token=',pipeline().parameters.par_header_key)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy NIETO Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_productos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy NIETO Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable NIETO Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET"
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_nie_inventarios')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_NIETO_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Execute Pipeline Drivin",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pl_extract_api_origenes_drivin",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"par_url": {
														"value": "@pipeline().parameters.par_url",
														"type": "Expression"
													},
													"par_stardate": {
														"value": "@pipeline().parameters.par_stardate",
														"type": "Expression"
													},
													"par_enddate": {
														"value": "@pipeline().parameters.par_enddate",
														"type": "Expression"
													},
													"par_header_content_type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													},
													"par_header_key": {
														"value": "@pipeline().parameters.par_header_key",
														"type": "Expression"
													},
													"FileName": {
														"value": "@pipeline().parameters.FileName",
														"type": "Expression"
													},
													"par_cont": {
														"value": "@pipeline().parameters.par_cont",
														"type": "Expression"
													},
													"par_folder": {
														"value": "@pipeline().parameters.par_folder",
														"type": "Expression"
													},
													"par_url_login": {
														"value": "@pipeline().parameters.par_url_login",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Set variable CEVISUR Token",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "CEVISUR Login",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_login",
												"value": {
													"value": "@activity('CEVISUR Login').output.token",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Ventas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_ventas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/pedidos/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Inventarios",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_inventario",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/inventario/existencias/actuales')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Clientes",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_clientes",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/clientes/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set variable CEVISUR Productos",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_produtos",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/articulos')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "CEVISUR Login",
											"type": "WebActivity",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"url": {
													"value": "@pipeline().parameters.par_url_login",
													"type": "Expression"
												},
												"method": "POST",
												"headers": {
													"Content-type": {
														"value": "@pipeline().parameters.par_header_content_type",
														"type": "Expression"
													}
												},
												"body": {
													"username": "0PM067",
													"password": "5P%LZ19xeM%v"
												}
											}
										},
										{
											"name": "Copy CEVISUR Ventas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Ventas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_ventas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_VENTAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'VENTAS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Set variable CEVISUR Facturas",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Token",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "var_cevi_facturas",
												"value": {
													"value": "@concat(pipeline().parameters.par_url,'nestle/api/facturas/search?startDate=',pipeline().parameters.par_stardate,'&endDate=',pipeline().parameters.par_enddate)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Copy CEVISUR Clientes",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Clientes",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_clientes')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_CLIENTES_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'CLIENTES')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Inventario",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Inventarios",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_inventario')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_INVENTARIO_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'INVENTARIO')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Productos",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Productos",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_produtos')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_PRODUCTOS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'PRODUCTOS')",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "Copy CEVISUR Facturas",
											"type": "Copy",
											"dependsOn": [
												{
													"activity": "Set variable CEVISUR Facturas",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "RestSource",
													"httpRequestTimeout": "00:01:40",
													"requestInterval": "00.00:00:00.010",
													"requestMethod": "GET",
													"additionalHeaders": {
														"Content-type": {
															"value": "@pipeline().parameters.par_header_content_type",
															"type": "Expression"
														},
														"Authorization": {
															"value": "@concat('Bearer ',variables('var_cevi_login'))",
															"type": "Expression"
														}
													}
												},
												"sink": {
													"type": "JsonSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "JsonWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "ar_rest_api_generic_auth",
													"type": "DatasetReference",
													"parameters": {
														"par_url_complete": {
															"value": "@variables('var_cevi_facturas')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "json_api_web",
													"type": "DatasetReference",
													"parameters": {
														"FileName": {
															"value": "@concat(pipeline().parameters.FileName,'_CEVISUR_FACTURAS_',variables('var_set_fecha_hoy'),'.json')",
															"type": "Expression"
														},
														"ContName": {
															"value": "@pipeline().parameters.par_cont",
															"type": "Expression"
														},
														"FoldPath": {
															"value": "@concat(pipeline().parameters.par_folder,'FACTURAS')",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Unknown Provider",
									"description": "Return if no URL is found.",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Set variable Fecha Hoy",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_set_fecha_hoy",
							"value": {
								"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch Bronze Layer",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Switch Supplier",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@if(\n    contains(pipeline().parameters.par_url,'driv'),\n    'DRIVIN',\n    if(contains(pipeline().parameters.par_url,'e-smap'),\n    'RIVERA',\n    if(contains(pipeline().parameters.par_url,'cevisur'),\n    'CEVISUR',\n    if(contains(pipeline().parameters.par_url,'187.141.10.78'),\n    'NIETO','Default'  \n    )\n    )\n    )\n)",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "NIETO",
									"activities": [
										{
											"name": "Notebook Load NIETO Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_nieto",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "NIETO",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "RIVERA",
									"activities": [
										{
											"name": "Notebook RIVERA Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_rivera",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "RIVERA",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "DRIVIN",
									"activities": [
										{
											"name": "Notebook Load DRIVIN Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_drivin",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "DRIVIN",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "CEVISUR",
									"activities": [
										{
											"name": "Notebook Load CEVISUR Bronze",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Repos/fernando.alves@br.nestle.com/DatabricksMX/0010_load_bronze_tb_mx_api_cevisur",
												"baseParameters": {
													"parFechaExecution": {
														"value": "@variables('var_set_fecha_hoy')",
														"type": "Expression"
													},
													"parFileNameTitle": "CEVISUR",
													"parFilePath": {
														"value": "@concat(pipeline().parameters.par_cont,pipeline().parameters.par_folder)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "lk_nmex_dv_origenesmx_id_usw2_dbr",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"par_url": {
						"type": "string"
					},
					"par_stardate": {
						"type": "string"
					},
					"par_enddate": {
						"type": "string"
					},
					"par_header_content_type": {
						"type": "string",
						"defaultValue": "application/json"
					},
					"par_header_key": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "JSON"
					},
					"par_cont": {
						"type": "string",
						"defaultValue": "dev"
					},
					"par_folder": {
						"type": "string",
						"defaultValue": "/inbound/ext_api_files_new/PROVIDER/"
					},
					"par_url_login": {
						"type": "string",
						"defaultValue": "https://central.cevisur.com.mx:8443/nestle/api/auth/login"
					}
				},
				"variables": {
					"var_riv_ventas": {
						"type": "String"
					},
					"var_nie_ventas": {
						"type": "String"
					},
					"var_driv": {
						"type": "String"
					},
					"var_supplier": {
						"type": "String"
					},
					"var_cevi_login": {
						"type": "String"
					},
					"var_cevi_ventas": {
						"type": "String"
					},
					"var_cevi_inventario": {
						"type": "String"
					},
					"var_cevi_clientes": {
						"type": "String"
					},
					"var_cevi_produtos": {
						"type": "String"
					},
					"var_riv_inventario": {
						"type": "String"
					},
					"var_nie_inventarios": {
						"type": "String"
					},
					"var_nie_clientes": {
						"type": "String"
					},
					"var_nie_productos": {
						"type": "String"
					},
					"var_set_fecha_hoy": {
						"type": "String"
					},
					"var_cevi_facturas": {
						"type": "String"
					},
					"var_url_default": {
						"type": "String"
					},
					"var_driv_direccion": {
						"type": "String"
					},
					"var_driv_rutas": {
						"type": "String"
					},
					"var_driv_vehiculos": {
						"type": "String"
					},
					"var_driv_grupo_vehiculos": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes/Utils/API_Web"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_extract_move_blob_to_blob_Folders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sc_nmex_devorigmx_generic",
								"type": "DatasetReference",
								"parameters": {
									"par_container": {
										"value": "@pipeline().parameters.parContainer",
										"type": "Expression"
									},
									"par_diretorio": {
										"value": "@pipeline().parameters.parPathCopy",
										"type": "Expression"
									},
									"par_arquivo": {
										"value": "@pipeline().parameters.parFileNameCopy",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Blob Folders",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Folder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().name,'Teste_caxias')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Blob Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Blob Folders').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Pipeline Filtering Folders",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_extract_move_blob_to_blob_filter",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"parFolderName": {
												"value": "@item().name",
												"type": "Expression"
											},
											"parContName": {
												"value": "@pipeline().parameters.parContainer",
												"type": "Expression"
											},
											"parPathCopy": {
												"value": "@pipeline().parameters.parPathCopy",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"parPathCopy": {
						"type": "string",
						"defaultValue": "inbound"
					},
					"parPathDestination": {
						"type": "string",
						"defaultValue": "inbound/Teste_caxias_historical"
					},
					"parContainer": {
						"type": "string",
						"defaultValue": "dev"
					},
					"parFileNameCopy": {
						"type": "string"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_copy_ic3_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_extract_p_ic3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_p_ic3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_logical_p_ic3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_p_ic3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_logical_p_ic3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_load_p_ic3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_logical_p_ic3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_p_ic3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "amsmx_finance_creditnotes"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_extract_catalogs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Inbound Bronze",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadCSVConfing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadCSVConfing').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "pl_common_shp",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_common_shp",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"parEnvironment": {
												"value": "@item().Enviroment",
												"type": "Expression"
											},
											"parAdlsDestinationFolder": {
												"value": "@item().AdlsDestinationFolder",
												"type": "Expression"
											},
											"parFileName": {
												"value": "@item().FileName",
												"type": "Expression"
											},
											"parShpSiteUrl": "https://nestle.sharepoint.com/teams/nmex-supplychain-alice",
											"parShpRelativeFolderPath": "Shared Documents",
											"parModifiedLastNHours": "1",
											"parClientID": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientid-nmex-supplychain-alice/?api-version=7.0",
											"parClientSecret": "https://nmexdvorigmxdhusw2key.vault.azure.net/secrets/shp-clientsecret-nmex-supplychain-alice/?api-version=7.0",
											"par_UtcNowVar": {
												"value": "@variables('varUtcNow')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "pl_common_shp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_sc_nmex_devorigmx_generic",
											"type": "DatasetReference",
											"parameters": {
												"par_container": {
													"value": "@item().Enviroment",
													"type": "Expression"
												},
												"par_diretorio": "@item().AdlsDestinationFolder",
												"par_arquivo": "@item().FileName"
											}
										},
										"fieldList": [
											"lastModified",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(formatDateTime(activity('Get Metadata1').output.lastModified,'yyyy-MM-dd'),formatDateTime(variables('varUtcNow'),'yyyy-MM-dd'))\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Catalogs Notebook",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_load_catalogs_notebook",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"parDateTimeUTC": {
															"value": "@variables('varUtcNow')",
															"type": "Expression"
														},
														"parNotebook": {
															"value": "@item().Notebook",
															"type": "Expression"
														},
														"parArchivoNombreAtual": {
															"value": "@item().FileName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Send Email Error Sharepoint to blob",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "pl_common_shp",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_send_email_notification_alice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_conteudo_email": "Ocurrió un error en Pipeline al cargar el catalogo de Sharepoint nmex-supplychain-alice al blob, validar formato del archivo",
											"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
											"par_project_name": "ALICE",
											"par_status_msg": "Error",
											"par_etapa": {
												"value": "@item().FileName",
												"type": "Expression"
											},
											"par_fecha": {
												"value": "@variables('varUtcNow')",
												"type": "Expression"
											},
											"par_runid": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Email Error Catalogs Notebooks",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_send_email_notification_alice",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_conteudo_email": "Ocurrió un error en Pipeline al cargar el catalogo en los Notebooks de databricks",
											"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
											"par_project_name": "ALICE",
											"par_status_msg": "Error",
											"par_etapa": {
												"value": "@item().FileName",
												"type": "Expression"
											},
											"par_fecha": {
												"value": "@variables('varUtcNow')",
												"type": "Expression"
											},
											"par_runid": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ReadCSVConfing",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "utcNowFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_adsl2_origenesmx_csv",
								"type": "DatasetReference",
								"parameters": {
									"par_directory": "catalogs_automatitation",
									"par_filename": "rutas.csv",
									"par_delimeter": ","
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "utcNowFolder",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUtcNow",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"varFileName": {
						"type": "String"
					},
					"varAdlsDestinationFolder": {
						"type": "String"
					},
					"varEnviroment": {
						"type": "String"
					},
					"varUtcNow": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_extract_tables_alice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Fecha Actual",
						"description": "Obtem a data que vai ser utilizada durante todo o processo ",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varFechaAtual",
							"value": {
								"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFileNameCopy": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathDestination",
									"type": "Expression"
								},
								"parFileNameTitle": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"parContainer": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parFechaAtual": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_load_tablas_notebook_alice",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_tablas_notebook_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFechaAtual_Carga": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"parTableName": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_common_load_datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_load_datascience",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parTableName_Load": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar los archivos al Blob",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al crear las tablas delta in Databricks",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar las tablas al Datascience",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Completed Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "El Pipeline se ejecutó correctamente",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx;valeria.camacho1@mx.nestle.com",
								"par_project_name": "ALICE",
								"par_status_msg": "Sucesso",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"m_parContainer": {
						"type": "string"
					},
					"m_parFileNameTitle": {
						"type": "string"
					},
					"m_parPathDestination": {
						"type": "string"
					},
					"m_parPathCopy": {
						"type": "string"
					},
					"m_parFileNameCopy": {
						"type": "string"
					}
				},
				"variables": {
					"varFechaAtual": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_extract_tables_alice_UPDATING')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Fecha Actual",
						"description": "Obtem a data que vai ser utilizada durante todo o processo ",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varFechaAtual",
							"value": {
								"value": "@formatDateTime(utcnow(),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Get Fecha Actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFileNameCopy": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathDestination",
									"type": "Expression"
								},
								"parFileNameTitle": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"parContainer": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parFechaAtual": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_load_tablas_notebook_alice",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load_tablas_notebook_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFechaAtual_Carga": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"parTableName": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_common_load_datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_common_load_datascience",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parTableName_Load": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar los archivos al Blob",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Tablas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_load_tablas_notebook_alice",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al crear las tablas delta in Databricks",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Error Load Datascience",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "Ocurrió un error en Pipeline al copiar las tablas al Datascience",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Error",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Email Completed Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_extract_move_blob_to_blob_Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_send_email_notification_alice",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_conteudo_email": "El Pipeline se ejecutó correctamente",
								"par_lista_email": "rafael.medeiros2@br.nestle.com;yair.atristain@mx.nestle.com;Roberto.Fernandez@mx.nestle.com;Ricardo.Falcon@n-agencias.com.mx",
								"par_project_name": "ALICE",
								"par_status_msg": "Sucesso",
								"par_etapa": {
									"value": "@pipeline().parameters.m_parFileNameTitle",
									"type": "Expression"
								},
								"par_fecha": {
									"value": "@variables('varFechaAtual')",
									"type": "Expression"
								},
								"par_runid": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pl_extract_move_blob_to_blob_Folders",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_common_load_datascience",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_extract_move_blob_to_blob_filter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"parFolderName": {
									"value": "@pipeline().parameters.m_parFileNameCopy",
									"type": "Expression"
								},
								"parContName": {
									"value": "@pipeline().parameters.m_parContainer",
									"type": "Expression"
								},
								"parPathCopy": {
									"value": "@pipeline().parameters.m_parPathCopy",
									"type": "Expression"
								},
								"parPathDestination": {
									"value": "@pipeline().parameters.m_parPathArchive",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"m_parContainer": {
						"type": "string"
					},
					"m_parFileNameTitle": {
						"type": "string"
					},
					"m_parPathDestination": {
						"type": "string"
					},
					"m_parPathCopy": {
						"type": "string"
					},
					"m_parFileNameCopy": {
						"type": "string"
					},
					"m_parPathArchive": {
						"type": "string"
					}
				},
				"variables": {
					"varFechaAtual": {
						"type": "String"
					}
				},
				"folder": {
					"name": "amsmx_supply_alice"
				},
				"annotations": [],
				"lastPublishTime": "2023-07-06T16:03:28Z"
			},
			"dependsOn": []
		}
	]
}