{
	"name": "pl_common_shp",
	"properties": {
		"description": "Copy files of any size from SharePoint  to Data Lake, including copy all files matching a startswith condition of a folder and files modified in the last x hours.\n\nTo use this pipeline you need to have the sharepoint client id and secret id registered in the dedicated sharepoint key vault",
		"activities": [
			{
				"name": "ForEachFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy File",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Filename Copy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"additionalHeaders": {
											"value": "@{concat('Authorization: Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_ar_rest_shp_binary",
									"type": "DatasetReference",
									"parameters": {
										"par_Url": {
											"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFileByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),pipeline().parameters.parShpRelativeFolderPath,'/',pipeline().parameters.parFileName,''')/$value')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adsl2_origenesmx_binary",
									"type": "DatasetReference",
									"parameters": {
										"par_directory": {
											"value": "@pipeline().parameters.parAdlsDestinationFolder",
											"type": "Expression"
										},
										"par_filename": {
											"value": "@pipeline().parameters.parFileName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Filename Copy",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_File_NameOut",
								"value": {
									"value": "@pipeline().parameters.parFileName",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "GetShpClientId",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().parameters.parClientID",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "GetShpSecret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().parameters.parClientSecret",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "ReadSharepointFolder",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetSharepointBearerToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().parameters.parShpSiteUrl,'/_api/web/GetFolderByServerRelativeUrl(''',replace(pipeline().parameters.parShpSiteUrl,'https://nestle.sharepoint.com',''),'/',pipeline().parameters.parShpRelativeFolderPath,''')/Files')",
						"type": "Expression"
					},
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@{concat('Bearer ', activity('GetSharepointBearerToken').output.access_token)}",
							"type": "Expression"
						},
						"Accept": "application/json;odata=verbose"
					}
				}
			},
			{
				"name": "GetSharepointBearerToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetShpClientId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "GetShpSecret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://accounts.accesscontrol.windows.net/12a3af23-a769-4654-847f-958f3d479f4a/tokens/OAuth/2",
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": {
						"value": "@concat('grant_type=client_credentials&client_id=',uriComponent(activity('GetShpClientId').output.value),'@12a3af23-a769-4654-847f-958f3d479f4a&client_secret=',uriComponent(activity('GetShpSecret').output.value),'&resource=00000003-0000-0ff1-ce00-000000000000/nestle.sharepoint.com@12a3af23-a769-4654-847f-958f3d479f4a')\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FilterFiles",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "ReadSharepointFolder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('ReadSharepointFolder').output['d']['results']",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(\n    startswith(item()['Name'],pipeline().parameters.parFileName),\n    greaterOrEquals(\n        item()['TimeLastModified'],\n        addToTime(\n            utcnow(),\n            mul(int(pipeline().parameters.parModifiedLastNHours),-1),\n            'hour'\n        )\n    )\n)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"parEnvironment": {
				"type": "string"
			},
			"parAdlsDestinationFolder": {
				"type": "string"
			},
			"parFileName": {
				"type": "string"
			},
			"parShpSiteUrl": {
				"type": "string"
			},
			"parShpRelativeFolderPath": {
				"type": "string"
			},
			"parModifiedLastNHours": {
				"type": "string"
			},
			"parNewFileName": {
				"type": "string"
			},
			"parClientID": {
				"type": "string"
			},
			"parClientSecret": {
				"type": "string"
			},
			"par_UtcNowVar": {
				"type": "string"
			}
		},
		"variables": {
			"var_File_NameOut": {
				"type": "String"
			},
			"varNombreArchivoAtual": {
				"type": "String"
			},
			"varNombreNewArchivo": {
				"type": "String"
			},
			"varPathUTCArchivoAnterior": {
				"type": "String"
			}
		},
		"folder": {
			"name": "amsmx_supply_alice/pl_extract/SharePoint Catalogs"
		},
		"annotations": [],
		"lastPublishTime": "2023-08-07T23:28:27Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}